model Account {
    id                Int      @id
    screenName        String   @unique
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
    encryptedPassword String
    isAdmin           Boolean  @default(false)
    hidden            Boolean  @default(false)
    profilePicURL     String?
    profilePicUnsafe  Boolean  @default(false)
    bio               String?

    lastIP String // Iffy about this

    totalNodeViews       Int
    totalSuggestionScore Int

    suggestedChoices  Choice[]
    ownedNodes        Node[]
    submittedFeedback Feedback[]
    notifications     Notification[]
    Reaction          Reaction[]
}

model Choice {
    id        Int      @id
    action    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    hidden    Boolean  @default(false)
    isCanon   Boolean

    score Int

    from                 Node       @relation("childChoices", fields: [fromNodeId], references: [id])
    fromNodeId           Int
    to                   Node?      @relation("parentChoices", fields: [toNodeId], references: [id])
    toNodeId             Int?
    suggestedBy          Account?   @relation(fields: [suggestedByAccountId], references: [id])
    suggestedByAccountId Int?
    Reaction             Reaction[]
}

model Node {
    id            Int      @id
    slug          String   @unique
    title         String
    content       String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    storedViews   Int // Todo: Convert these to regular views
    featured      Boolean  @default(false)
    pictureURL    String?
    pictureUnsafe Boolean  @default(false)
    hidden        Boolean  @default(false)

    views Int

    owner           Account @relation(fields: [ownerScreenName], references: [screenName])
    ownerScreenName String

    childChoices  Choice[] @relation("childChoices")
    parentChoices Choice[] @relation("parentChoices")
    View          View[]
}

model Feedback {
    id            Int      @id
    IP            String // Iffy about this
    reportingType String? // Node | Choice | Account
    reportingId   Int?
    info          String
    createdAt     DateTime @default(now())

    submittedBy   Account? @relation(fields: [submittedById], references: [id])
    submittedById Int?
}

model Notification {
    id        Int      @id
    content   String
    createdAt DateTime @default(now())
    link      String?
    seen      Boolean  @default(false)

    account   Account @relation(fields: [accountId], references: [id])
    accountId Int
}

model Reaction {
    id   Int     @id
    like Boolean

    account   Account @relation(fields: [accountId], references: [id])
    accountId Int
    choice    Choice  @relation(fields: [choiceId], references: [id])
    choiceId  Int
}

model View {
    id Int    @id
    IP String

    node   Node @relation(fields: [nodeId], references: [id])
    nodeId Int
}
