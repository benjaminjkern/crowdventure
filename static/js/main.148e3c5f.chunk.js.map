{"version":3,"sources":["apolloURL.js","Node.jsx","Account.jsx","Home.jsx","App.jsx","index.jsx"],"names":["module","exports","ChoiceColumns","props","owner","account","choices","nodeID","canon","onEdit","CardColumns","map","choice","Card","className","href","to","ID","style","pointerEvents","color","undefined","onClick","setTimeout","window","location","reload","Body","cursor","Title","action","DropdownButton","variant","position","top","right","size","drop","title","class","Dropdown","Item","disabled","screenName","choiceID","app_fetch","query","then","res","err","alert","data","makeNonCanon","makeCanon","suggestedBy","Divider","Footer","dislikedBy","includes","dislikeSuggestion","score","likedBy","likeSuggestion","src","profilePicURL","process","onError","e","target","border","height","width","SearchPage","callback","toID","useState","allNodes","setAllNodes","toNode","setToNode","useEffect","getNode","filterBy","node","text","toLowerCase","defaultSelected","labelKey","options","placeholder","renderMenuItemChildren","Node","history","match","redirect","setRedirect","escape","params","id","setAccount","setNode","info","setInfo","showSuggest","setShowSuggest","suggestAction","setSuggestAction","toPage","setToPage","showCreateNode","setShowCreateNode","setTitle","content","setContent","picture","setPicture","createNodeCallback","setCreateNodeCallback","showEditNode","setShowEditNode","editTitle","setEditTitle","editContent","setEditContent","editURL","setEditURL","showConfirm","setShowConfirm","showEditSuggest","setShowEditSuggest","setChoiceID","showPicture","setShowPicture","cookies","Cookies","loggedInAs","get","setBgColor","bgColor","setFgColor","fgColor","loginAccount","set","path","Alert","Heading","Container","pictureURL","display","split","line","canonChoices","length","Button","back","views","OverlayTrigger","overlay","Tooltip","nonCanonChoices","Modal","show","onHide","Header","closeButton","Form","Label","Control","required","value","onChange","editChoice","escaped","createNewAction","opacity","as","rows","esTitle","esContent","esPicture","createNode","esURL","editNode","Math","random","Account","accountID","loggedInAsID","setLoggedInAs","showEditPage","setShowEditPage","bio","setBio","getAccount","float","totalNodeViews","totalSuggestionScore","nodes","featured","left","alreadyFeatured","featurePage","esBio","editAccount","Home","topNodes","setTopNodes","featuredNodes","Img","AccountManager","showLogin","setShowLogin","showSignUp","setShowSignUp","setScreenName","pass1","setPass1","pass2","setPass2","createAccount","esScreenName","esPass","Navbar","Text","type","login","Group","handleSubmitSignUp","App","expand","Brand","alt","Toggle","aria-controls","Collapse","component","exact","render","createApolloFetch","require","uri","newlines","replace","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.148e3c5f.chunk.js","sourcesContent":["module.exports =\n    \"https://3yfp7ejc0m.execute-api.us-east-1.amazonaws.com/dev/graphql\";","import React, { useState, useEffect, useRef } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport {\n  Container,\n  Button,\n  Modal,\n  Form,\n  Alert,\n  Card,\n  CardColumns,\n  DropdownButton,\n  Dropdown,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport { app_fetch, escape } from \"./index\";\n\nconst Node = (props) => {\n  const { history, match } = props;\n  const [redirect, setRedirect] = useState(undefined);\n  const nodeID = escape(match.params.id);\n  const [account, setAccount] = useState(undefined);\n  const [node, setNode] = useState(undefined);\n\n  const [info, setInfo] = useState(\"\");\n\n  const [showSuggest, setShowSuggest] = useState(false);\n  const [suggestAction, setSuggestAction] = useState(\"\");\n  const [toPage, setToPage] = useState(\"\");\n\n  const [showCreateNode, setShowCreateNode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n  const [createNodeCallback, setCreateNodeCallback] = useState(undefined);\n\n  const [showEditNode, setShowEditNode] = useState(false);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editContent, setEditContent] = useState(\"\");\n  const [editURL, setEditURL] = useState(\"\");\n\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  const [showEditSuggest, setShowEditSuggest] = useState(false);\n  const [choiceID, setChoiceID] = useState(\"\");\n\n  const [showPicture, setShowPicture] = useState(false);\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = escape(picture);\n    app_fetch({\n      query: `mutation{createNode(accountScreenName:\"${account.screenName}\",title:\"${esTitle}\",content:\"\"\"${esContent}\"\"\",pictureURL:\"${esPicture}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createNode) {\n        createNodeCallback[0](res.data.createNode.ID);\n      } else alert(\"Something went wrong when creating node\");\n    });\n  };\n\n  const editNode = () => {\n    const esTitle = escape(editTitle);\n    const esContent = escape(editContent, true);\n    const esURL = escape(editURL);\n    app_fetch({\n      query: `mutation{editNode(nodeID:\"${nodeID}\",title:\"${esTitle}\",content:\"\"\"${esContent}\"\"\",pictureURL:\"${esURL}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.editNode) {\n        setShowEditNode(false);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when editing node\");\n    });\n  };\n\n  const createNewAction = (toID) => {\n    if (!toID) {\n      setShowSuggest(false);\n      setShowCreateNode(true);\n      setPicture(node.pictureURL);\n      setCreateNodeCallback([createNewAction]);\n    } else {\n      const escaped = escape(suggestAction);\n      app_fetch({\n        query: `mutation{suggestChoice(accountScreenName:\"${account.screenName}\",fromID:\"${nodeID}\",action:\"${escaped}\",toID:\"${toID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) {\n          setShowSuggest(false);\n          setShowCreateNode(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when creating choice!\");\n      });\n    }\n  };\n\n  const deletePage = () => {\n    app_fetch({\n      query: `mutation{deleteNode(nodeID:\"${nodeID}\")}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setRedirect(<Redirect to=\"/\" />);\n      else alert(\"Something went wrong when deleting node\");\n    });\n  };\n\n  const editChoice = (toID) => {\n    if (!toID) {\n      setShowEditSuggest(false);\n      setShowCreateNode(true);\n      setPicture(node.pictureURL);\n      setCreateNodeCallback([editChoice]);\n    } else {\n      let escaped = escape(suggestAction);\n      app_fetch({\n        query: `mutation{editSuggestion(choiceID:\"${choiceID}\",action:\"${escaped}\",toID:\"${toID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) {\n          setShowEditSuggest(false);\n          setShowCreateNode(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when editing choice!\");\n      });\n    }\n  };\n\n  useEffect(() => {\n    const cookies = new Cookies();\n    const loggedInAs = escape(cookies.get(\"account\"));\n\n    app_fetch({\n      query: `query{getNode(ID:\"${nodeID}\"){pictureURL,fgColor,bgColor,ID,title,content,views,owner{screenName},canonChoices{suggestedBy{screenName,profilePicURL},ID,action,to{ID},score,likedBy{screenName},dislikedBy{screenName}},nonCanonChoices{suggestedBy{screenName,profilePicURL},ID,action,to{ID},score,likedBy{screenName},dislikedBy{screenName}}}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.getNode) {\n        setNode(res.data.getNode);\n        props.setBgColor(res.data.getNode.bgColor);\n        props.setFgColor(res.data.getNode.fgColor);\n      } else setNode(null);\n    });\n\n    app_fetch({\n      query: `mutation{loginAccount(screenName:\"${loggedInAs}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setAccount(res.data.loginAccount);\n      else {\n        alert(\"Something went wrong when retrieving account logging out\");\n        cookies.set(\"account\", \"\", { path: \"/\" });\n      }\n    });\n  }, []);\n\n  if (node === undefined) {\n    return (\n      <Alert variant=\"light\">\n        <title>Loading Page...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (node === null)\n    return (\n      <Alert variant=\"danger\">\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>Crowdventure! - {node.title}</title>\n      {node.pictureURL ? (\n        <img\n          src={node.pictureURL}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n            setInfo(<span style={{ color: \"red\" }}>Picture not found!</span>);\n          }}\n          style={{\n            display: \"block\",\n            \"margin-left\": \"auto\",\n            \"margin-right\": \"auto\",\n            border: \"1px solid #eee\",\n            \"border-radius\": \"8px\",\n            width: \"75%\",\n            height: \"22vh\",\n            \"object-fit\": \"cover\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => setShowPicture(true)}\n        />\n      ) : (\n        \"\"\n      )}\n      <h1>{node.title}</h1>\n      <Container>\n        {node.content.split(\"\\n\").map((line) => (\n          <p>{line}</p>\n        ))}\n      </Container>\n      <p />\n      {node.canonChoices.length ? (\n        <ChoiceColumns\n          owner={node.owner}\n          choices={node.canonChoices}\n          account={account}\n          canon={true}\n          nodeID={node.ID}\n          onEdit={(choice) => {\n            setSuggestAction(choice.action);\n            setToPage(choice.to.ID);\n            setChoiceID(choice.ID);\n            setShowEditSuggest(true);\n          }}\n        />\n      ) : (\n        <p className=\"text-muted\">\n          By decree of <strong>{node.owner.screenName}</strong>, this journey\n          ends here.\n        </p>\n      )}\n      <p />\n\n      <Button\n        variant=\"light\"\n        className=\"text-primary\"\n        onClick={() => {\n          history.back();\n          setTimeout(() => window.location.reload(false), 100);\n        }}\n        size=\"sm\"\n      >\n        Go back!\n      </Button>\n\n      <p />\n      <p>\n        Owner:{\" \"}\n        <a href={`/crowdventure/#/account/${node.owner.screenName}`}>\n          {node.owner.screenName}\n        </a>{\" \"}\n        Views: {node.views}\n        {account && node.owner.screenName === account.screenName ? (\n          <p>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => {\n                setEditTitle(node.title);\n                setEditContent(node.content);\n                setEditURL(node.pictureURL);\n                setShowEditNode(true);\n              }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"danger\"\n              size=\"sm\"\n              onClick={() => setShowConfirm(true)}\n            >\n              Delete\n            </Button>\n          </p>\n        ) : (\n          \"\"\n        )}\n      </p>\n      <h3>\n        Other options:\n        <p />\n        <OverlayTrigger\n          overlay={\n            !account ? (\n              <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n            ) : (\n              <p />\n            )\n          }\n          style={{ width: \"100%\" }}\n        >\n          <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n            <Button\n              onClick={() => setShowSuggest(true)}\n              disabled={!account}\n              style={{\n                width: \"100%\",\n                pointerEvents: account ? \"auto\" : \"none\",\n              }}\n            >\n              Suggest New Choice\n            </Button>\n          </span>\n        </OverlayTrigger>\n      </h3>\n      <p />\n\n      <ChoiceColumns\n        owner={node.owner}\n        choices={node.nonCanonChoices}\n        account={account}\n        canon={false}\n        nodeID={node.ID}\n        onEdit={(choice) => {\n          setSuggestAction(choice.action);\n          setToPage(choice.to.ID);\n          setChoiceID(choice.ID);\n          setShowEditSuggest(true);\n        }}\n      />\n\n      {/******************************************\n                         MODALS \n        ******************************************/}\n\n      <Modal show={showEditSuggest} onHide={() => setShowEditSuggest(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Editing Choice</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Action:</Form.Label>\n            <Form.Control\n              required\n              value={suggestAction}\n              onChange={(e) => setSuggestAction(e.target.value)}\n            ></Form.Control>\n            <Form.Label>Go to Page:</Form.Label>\n            <SearchPage\n              callback={(nodeID) => setToPage(nodeID)}\n              toID={toPage}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => editChoice(toPage)}>Edit Choice</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showSuggest} onHide={() => setShowSuggest(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Suggesting New Choice</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Action:</Form.Label>\n            <Form.Control\n              required\n              value={suggestAction}\n              onChange={(e) => setSuggestAction(e.target.value)}\n            />\n            <Form.Label>Go to Page:</Form.Label>\n            <SearchPage\n              callback={(nodeID) => setToPage(nodeID)}\n              toID={toPage}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => createNewAction(toPage)}>\n              Submit New Choice\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showCreateNode} onHide={() => setShowCreateNode(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Creating New Page</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            {node.pictureURL ? (\n              <img\n                src={node.pictureURL}\n                onError={(e) => {\n                  e.target.style.display = \"none\";\n                  setInfo(\n                    <span style={{ color: \"red\" }}>Picture not found!</span>\n                  );\n                }}\n                style={{\n                  opacity: node.pictureURL === picture ? 1 : 0.2,\n                  width: \"100%\",\n                  \"object-fit\": \"contain\",\n                }}\n              />\n            ) : (\n              \"\"\n            )}\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              required\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              required\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n            <Form.Label>Picture URL:</Form.Label>\n            <Form.Control\n              required\n              value={picture}\n              onChange={(e) => setPicture(e.target.value)}\n              placeholder=\"(Leave empty to not use a picture)\"\n            />\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={createNode}>Create Page!</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showEditNode} onHide={() => setShowEditNode(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Page</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            {node.pictureURL ? (\n              <img\n                src={node.pictureURL}\n                onError={(e) => {\n                  e.target.style.display = \"none\";\n                  setInfo(\n                    <span style={{ color: \"red\" }}>Picture not found!</span>\n                  );\n                }}\n                style={{\n                  opacity: node.pictureURL === editURL ? 1 : 0.2,\n                  width: \"100%\",\n                  \"object-fit\": \"contain\",\n                }}\n              />\n            ) : (\n              \"\"\n            )}\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              required\n              value={editTitle}\n              onChange={(e) => setEditTitle(e.target.value)}\n            />\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              required\n              value={editContent}\n              onChange={(e) => setEditContent(e.target.value)}\n            />\n            <Form.Label>Picture URL:</Form.Label>\n            <Form.Control\n              required\n              value={editURL}\n              onChange={(e) => {\n                setEditURL(e.target.value);\n                setInfo(\"\");\n              }}\n              placeholder=\"(Leave empty to not use a picture)\"\n            />\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={editNode}>Edit Page!</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Page</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={() => setShowConfirm(false)}>\n            No!\n          </Button>\n          <Button variant=\"primary\" onClick={deletePage}>\n            Yes!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showPicture} onHide={() => setShowPicture(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{node.title}</Modal.Title>\n        </Modal.Header>\n        <img\n          src={node.pictureURL}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n            setInfo(<span style={{ color: \"red\" }}>Picture not found!</span>);\n          }}\n          style={{\n            width: \"100%\",\n            \"object-fit\": \"contain\",\n          }}\n        />\n        {\n          info\n            ? info\n            : \"\" /* it acctually shouldnt ever get here but whatever */\n        }\n        <Modal.Footer>\n          <Button size=\"sm\" onClick={() => setShowPicture(false)}>\n            Thanks for showing me this {Math.random() < 0.5 ? \"cool\" : \"neat\"}{\" \"}\n            picture!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {redirect ? redirect : \"\"}\n    </Container>\n  );\n};\n\nconst ChoiceColumns = (props) => {\n  const { owner, account, choices, nodeID, canon, onEdit } = props;\n\n  const like = (choiceID) => {\n    if (account)\n      app_fetch({\n        query: `mutation{likeSuggestion(accountScreenName:\"${account.screenName}\",choiceID:\"${choiceID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.likeSuggestion) window.location.reload(false);\n      });\n  };\n  const dislike = (choiceID) => {\n    if (account)\n      app_fetch({\n        query: `mutation{dislikeSuggestion(accountScreenName:\"${account.screenName}\",choiceID:\"${choiceID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.dislikeSuggestion)\n          window.location.reload(false);\n      });\n  };\n\n  const makeCanon = (choiceID) => {\n    app_fetch({\n      query: `mutation{makeCanon(choiceID:\"${choiceID}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.makeCanon) window.location.reload(false);\n    });\n  };\n  const makeNonCanon = (choiceID) => {\n    app_fetch({\n      query: `mutation{makeNonCanon(choiceID:\"${choiceID}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.makeNonCanon) window.location.reload(false);\n    });\n  };\n\n  const removeSuggestion = (choiceID) => {\n    app_fetch({\n      query: `mutation{removeSuggestion(choiceID:\"${choiceID}\")}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) window.location.reload(false);\n    });\n  };\n\n  return (\n    <CardColumns>\n      {choices.map((choice) => (\n        <Card className=\"text-center\">\n          <a\n            href={choice.to ? `/crowdventure/#/node/${choice.to.ID}` : \"\"}\n            style={{\n              pointerEvents: choice.to ? \"auto\" : \"none\",\n              color: choice.to ? undefined : \"grey\",\n            }}\n            onClick={() => setTimeout(() => window.location.reload(false), 100)}\n          >\n            <Card.Body style={{ cursor: \"pointer\" }}>\n              <Card.Title>{choice.action}</Card.Title>\n            </Card.Body>\n          </a>\n          <DropdownButton\n            variant=\"light\"\n            style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n            size=\"sm\"\n            drop=\"right\"\n            title={<span class=\"fa\">&#xf013;</span>}\n          >\n            <Dropdown.Item\n              disabled={!account || account.screenName !== owner.screenName}\n              onClick={() =>\n                canon ? makeNonCanon(choice.ID) : makeCanon(choice.ID)\n              }\n            >\n              Make {canon ? \"Nonc\" : \"C\"}anon\n            </Dropdown.Item>\n            <Dropdown.Item\n              disabled={\n                !account ||\n                (account.screenName !== choice.suggestedBy.screenName &&\n                  account.screenName !== owner.screenName)\n              }\n              onClick={() => removeSuggestion(choice.ID)}\n            >\n              Delete\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => onEdit(choice)}\n              disabled={\n                !canon ||\n                !account ||\n                (account.screenName !== choice.suggestedBy.screenName &&\n                  account.screenName !== owner.screenName)\n              }\n            >\n              Edit\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item disabled>Report</Dropdown.Item>\n          </DropdownButton>\n          <Card.Footer>\n            <a\n              href={`/crowdventure/#/node/${nodeID}`}\n              style={{\n                pointerEvents: account ? \"auto\" : \"none\",\n                color: account\n                  ? choice.dislikedBy\n                      .map((account) => account.screenName)\n                      .includes(account.screenName)\n                    ? \"red\"\n                    : \"black\"\n                  : \"grey\",\n              }}\n              className=\"fa fa-thumbs-down\"\n              onClick={() => dislike(choice.ID)}\n            ></a>\n            {\" \" + choice.score + \" \"}\n            <a\n              href={`/crowdventure/#/node/${nodeID}`}\n              style={{\n                pointerEvents: account ? \"auto\" : \"none\",\n                color: account\n                  ? choice.likedBy\n                      .map((account) => account.screenName)\n                      .includes(account.screenName)\n                    ? \"green\"\n                    : \"black\"\n                  : \"grey\",\n              }}\n              className=\"fa fa-thumbs-up\"\n              onClick={() => like(choice.ID)}\n            ></a>\n            <br />\n            <small className=\"text-muted\">\n              Suggested By:{\" \"}\n              <a\n                href={`/crowdventure/#/account/${choice.suggestedBy.screenName}`}\n              >\n                <img\n                  src={\n                    choice.suggestedBy.profilePicURL\n                      ? choice.suggestedBy.profilePicURL\n                      : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                  }\n                  onError={(e) => {\n                    e.target.src =\n                      process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                  }}\n                  style={{\n                    border: \"1px solid #bbb\",\n                    height: \"2em\",\n                    width: \"2em\",\n                    \"object-fit\": \"cover\",\n                    \"border-radius\": \"50%\",\n                  }}\n                />{\" \"}\n                {choice.suggestedBy.screenName}\n              </a>\n            </small>\n          </Card.Footer>\n        </Card>\n      ))}\n    </CardColumns>\n  );\n};\n\nconst SearchPage = (props) => {\n  const { callback, toID } = props;\n  const [allNodes, setAllNodes] = useState(undefined);\n  const [toNode, setToNode] = useState(undefined);\n\n  const filterByCallback = (node, props) => {\n    if (props.text === \"\") {\n      callback(\"\");\n      return true;\n    }\n    return (\n      node.title.toLowerCase().includes(props.text.toLowerCase()) ||\n      node.owner.screenName.toLowerCase().includes(props.text.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    if (toID) {\n      app_fetch({\n        query: `query{getNode(ID:\"${toID}\"){title,ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.getNode) setToNode(res.data.getNode);\n        else alert(\"Something went wrong when retrieving node\");\n      });\n    } else setToNode(null);\n\n    app_fetch({\n      query: `query{allNodes{title,owner{screenName},ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.allNodes) setAllNodes(res.data.allNodes);\n      else alert(\"Something went wrong when retrieving all nodes\");\n    });\n  }, []);\n\n  if (!allNodes || toNode === undefined) return <div>Loading...</div>;\n\n  return (\n    <Typeahead\n      filterBy={filterByCallback}\n      defaultSelected={[toNode ? toNode.title : \"\"]}\n      labelKey=\"title\"\n      options={allNodes}\n      placeholder=\"(Leave Empty to Create New Page)\"\n      renderMenuItemChildren={(node) => (\n        <div onClick={() => callback(node.ID)}>\n          {node.title}\n          <div>\n            <small>Author: {node.owner.screenName}</small>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default Node;\n","import React, { useState, useEffect } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport {\n  Container,\n  Button,\n  Modal,\n  Form,\n  Alert,\n  Card,\n  CardColumns,\n  DropdownButton,\n  Dropdown,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { app_fetch, escape } from \"./index\";\n\nconst Account = (props) => {\n  const accountID = escape(props.match.params.id);\n  const loggedInAsID = escape(new Cookies().get(\"account\"));\n  const [redirect, setRedirect] = useState(undefined);\n  const [account, setAccount] = useState(undefined);\n  const [loggedInAs, setLoggedInAs] = useState(undefined);\n\n  const [showCreateNode, setShowCreateNode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n\n  const [showEditPage, setShowEditPage] = useState(false);\n  const [bio, setBio] = useState(\"\");\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [picture, setPicture] = useState(\"\");\n\n  const [showPicture, setShowPicture] = useState(false);\n\n  useEffect(() => {\n    app_fetch({\n      query: `query{getAccount(screenName:\"${accountID}\"){bio,screenName,profilePicURL,suggestedChoices{action, from{title}, to{title}},totalNodeViews,totalSuggestionScore, nodes{featured,ID,title,views}}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setAccount(res.data.getAccount);\n      else alert(\"Something went wrong when retrieving account\");\n    });\n\n    const cookies = new Cookies();\n\n    app_fetch({\n      query: `mutation{loginAccount(screenName:\"${loggedInAsID}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setLoggedInAs(res.data.loginAccount);\n      else {\n        alert(\"Something went wrong when logging in account, logging out\");\n        cookies.set(\"account\", \"\", { path: \"/\" });\n      }\n    });\n  }, []);\n\n  const editPage = () => {\n    const esBio = escape(bio, true);\n    const esPicture = escape(picture);\n    app_fetch({\n      query: `mutation{editAccount(screenName:\"${account.screenName}\",bio:\"\"\"${esBio}\"\"\",profilePicURL:\"${esPicture}\"){bio,screenName,suggestedChoices{action, from{title}, to{title}},totalNodeViews,totalSuggestionScore, nodes{featured,ID,title,views}}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.editAccount) {\n        setAccount(res.data.editAccount);\n        setShowEditPage(false);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when editing account\");\n    });\n  };\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content);\n    app_fetch({\n      query: `mutation{createNode(accountScreenName:\"${account.screenName}\",title:\"${esTitle}\",content:\"${esContent}\",featured:true){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createNode) {\n        setShowCreateNode(false);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when creating node\");\n    });\n  };\n\n  const deleteAccount = () => {\n    new Cookies().set(\"account\", \"\", { path: \"/\" });\n\n    app_fetch({\n      query: `mutation{deleteAccount(screenName:\"${accountID}\")}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) {\n        setRedirect(<Redirect to=\"/\" />);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when deleting account\");\n    });\n  };\n\n  const featurePage = (node, alreadyFeatured) => {\n    app_fetch({\n      query: `mutation{editNode(nodeID:\"${\n        node.ID\n      }\", featured:${!alreadyFeatured}){title}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) window.location.reload(false);\n      else alert(\"Something went wrong when featuring page\");\n    });\n  };\n\n  if (account === undefined) {\n    return (\n      <Alert variant=\"light\">\n        <title>Loading Account...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (account === null)\n    return (\n      <Alert variant=\"danger\">\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>{account.screenName} on Crowdventure!</title>\n      <h1>\n        <img\n          src={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            border: \"1px solid #bbb\",\n            height: \"3em\",\n            width: \"3em\",\n            \"object-fit\": \"cover\",\n            \"border-radius\": \"50%\",\n            \"margin-right\": \"5px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => setShowPicture(true)}\n        />{\" \"}\n        {account.screenName}\n      </h1>\n      {account.bio ? (\n        <Container>\n          {account.bio.split(\"\\n\").map((line) => (\n            <p>{line}</p>\n          ))}\n        </Container>\n      ) : (\n        \"\"\n      )}\n\n      <Container>\n        {loggedInAs && loggedInAs.screenName === account.screenName ? (\n          <Button\n            variant=\"light\"\n            onClick={() => {\n              setBio(account.bio);\n              setPicture(account.profilePicURL);\n              setShowEditPage(true);\n            }}\n          >\n            Edit Account\n          </Button>\n        ) : (\n          \"\"\n        )}\n        <div style={{ float: \"right\" }} class=\"text-muted\">\n          Total views: {account.totalNodeViews} Total score:{\" \"}\n          {account.totalSuggestionScore}\n        </div>\n      </Container>\n      <p />\n      <h3>Featured Pages:</h3>\n      <CardColumns>\n        {account.nodes.map((node) => (\n          <Card>\n            <a href={`/crowdventure/#/node/${node.ID}`}>\n              <Card.Body className=\"text-center\">\n                <Card.Title>{node.title}</Card.Title>\n              </Card.Body>\n            </a>\n            {node.featured ? (\n              <OverlayTrigger\n                overlay={\n                  <Tooltip>This page has been starred by this user!</Tooltip>\n                }\n              >\n                <div\n                  style={{\n                    position: \"absolute\",\n                    top: \"5px\",\n                    left: \"5px\",\n                    color: \"yellow\",\n                    \"-webkit-touch-callout\": \"none\",\n                    \"-webkit-user-select\": \"none\",\n                    \"-khtml-user-select\": \"none\",\n                    \"-moz-user-select\": \"none\",\n                    \"-ms-user-select\": \"none\",\n                    \"user-select\": \"none\",\n                    \"text-shadow\": \"0 0 1px black\",\n                  }}\n                  class=\"fa\"\n                >\n                  &#xf005;\n                </div>\n              </OverlayTrigger>\n            ) : (\n              \"\"\n            )}\n\n            <DropdownButton\n              variant=\"light\"\n              style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n              size=\"sm\"\n              drop=\"right\"\n              title={<span class=\"fa\">&#xf013;</span>}\n            >\n              <Dropdown.Item\n                onClick={() => featurePage(node, node.featured)}\n                disabled={\n                  !loggedInAs || loggedInAs.screenName !== account.screenName\n                }\n              >\n                {node.featured ? \"Un-f\" : \"F\"}eature page\n              </Dropdown.Item>\n              <Dropdown.Item disabled>Delete</Dropdown.Item>\n              <Dropdown.Item disabled>Make Private</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item disabled>Report</Dropdown.Item>\n            </DropdownButton>\n            <Card.Footer className=\"text-muted text-center\">\n              <small>\n                Created by:{\" \"}\n                <img\n                  src={\n                    account.profilePicURL\n                      ? account.profilePicURL\n                      : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                  }\n                  onError={(e) => {\n                    e.target.src =\n                      process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                  }}\n                  style={{\n                    border: \"1px solid #bbb\",\n                    height: \"2em\",\n                    width: \"2em\",\n                    \"object-fit\": \"cover\",\n                    \"border-radius\": \"50%\",\n                  }}\n                />{\" \"}\n                {account.screenName}\n                <br />\n                Views:{\" \" + node.views}\n              </small>\n            </Card.Footer>\n          </Card>\n        ))}\n      </CardColumns>\n\n      <Modal show={showPicture} onHide={() => setShowPicture(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{account.screenName}</Modal.Title>\n        </Modal.Header>\n        <img\n          src={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            width: \"100%\",\n            \"object-fit\": \"contain\",\n          }}\n        />\n        {info ? info : \"\" /* it actually shouldnt ever get here but whatever */}\n        <Modal.Footer>\n          <Button size=\"sm\" onClick={() => setShowPicture(false)}>\n            Wow, {account.screenName} has a{\" \"}\n            {Math.random() < 0.5 ? \"cool\" : \"neat\"} profile picture!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <p />\n      {loggedInAs && loggedInAs.screenName === account.screenName ? (\n        <Container>\n          <Button\n            onClick={() => setShowCreateNode(true)}\n            style={{ width: \"100%\" }}\n          >\n            Create New Page\n          </Button>{\" \"}\n          <Modal show={showCreateNode} onHide={() => setShowCreateNode(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Creating New Page</Modal.Title>\n            </Modal.Header>\n            <Form>\n              <Modal.Body>\n                <Form.Label>Title:</Form.Label>\n                <Form.Control\n                  required\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                ></Form.Control>\n                <Form.Label>Content:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                  value={content}\n                  onChange={(e) => setContent(e.target.value)}\n                ></Form.Control>\n                {info ? info : \"\"}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={createNode}>Create Page!</Button>\n              </Modal.Footer>\n            </Form>\n          </Modal>\n          <Modal show={showEditPage} onHide={() => setShowEditPage(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Editing Account</Modal.Title>\n            </Modal.Header>\n            <Form>\n              <Modal.Body>\n                {account.profilePicURL ? (\n                  <img\n                    src={account.profilePicURL}\n                    onError={(e) => {\n                      e.target.style.display = \"none\";\n                      setInfo(\n                        <span style={{ color: \"red\" }}>Picture not found!</span>\n                      );\n                    }}\n                    style={{\n                      opacity: account.profilePicURL === picture ? 1 : 0.2,\n                      width: \"100%\",\n                      \"object-fit\": \"contain\",\n                    }}\n                  />\n                ) : (\n                  \"\"\n                )}\n                <Form.Label>Profile Pic URL:</Form.Label>\n                <Form.Control\n                  value={picture}\n                  onChange={(e) => setPicture(e.target.value)}\n                />\n                <Form.Label>Bio:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  value={bio}\n                  onChange={(e) => setBio(e.target.value)}\n                />\n                {info ? info : \"\"}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={editPage}>Edit Account</Button>\n                <Button\n                  href=\"/crowdventure\"\n                  onClick={() =>\n                    new Cookies().set(\"account\", \"\", { path: \"/\" })\n                  }\n                  variant=\"danger\"\n                >\n                  Log out\n                </Button>\n                <Button onClick={() => setShowConfirm(true)} variant=\"danger\">\n                  Delete Account\n                </Button>\n              </Modal.Footer>\n            </Form>\n          </Modal>\n          <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Delete Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure?</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"danger\" onClick={() => setShowConfirm(false)}>\n                No!\n              </Button>\n              <Button variant=\"primary\" onClick={deleteAccount}>\n                Yes!\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      ) : (\n        \"\"\n      )}\n      {redirect ? redirect : \"\"}\n    </Container>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Card,\n  CardColumns,\n  Form,\n  Button,\n  Modal,\n  OverlayTrigger,\n  Tooltip,\n  Alert,\n} from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { app_fetch, escape } from \"./index\";\n\nconst Home = () => {\n  const [topNodes, setTopNodes] = useState(undefined);\n  const [topAccounts, setTopAccounts] = useState(undefined);\n  const [allNodes, setAllNodes] = useState(undefined);\n  const [searchNodes, setSearchNodes] = useState(\"\");\n  const [searchNodesList, setSearchNodesList] = useState(undefined);\n  const [account, setAccount] = useState(false);\n\n  const [showCreateNode, setShowCreateNode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n\n  const [redirect, setRedirect] = useState(undefined);\n\n  useEffect(() => {\n    app_fetch({\n      query: `query{featuredNodes{ID,title,owner{screenName,profilePicURL},views,size,pictureURL}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.featuredNodes)\n        setTopNodes(res.data.featuredNodes);\n      else alert(\"Something went wrong when retrieving featured nodes\");\n    });\n\n    // app_fetch({\n    //   query: `query{allNodes{ID,title,owner{screenName},views}}`,\n    // }).then((res, err) => {\n    //   if (err) alert(err);\n    //   if (res.data && res.data.allNodes) setAllNodes(res.data.allNodes);\n    //   else alert(\"Something went wrong when retrieving nodes\");\n    // });\n\n    const cookies = new Cookies();\n    const loggedInAs = escape(cookies.get(\"account\"));\n\n    app_fetch({\n      query: `mutation{loginAccount(screenName:\"${loggedInAs}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setAccount(res.data.loginAccount);\n      else {\n        alert(\"Something went wrong when retrieving account, logging out\");\n        cookies.set(\"account\", \"\", { path: \"/\" });\n      }\n    });\n\n    // app_fetch({\n    //   query: `query{allAccounts{screenName,totalNodeViews,totalSuggestionScore}}`,\n    // }).then((res, err) => {\n    //   if (err) alert(err);\n    //   if (res.data && res.data.allAccounts)\n    //     setTopAccounts(res.data.allAccounts);\n    //   else alert(\"Something went wrong when retrieving accounts\");\n    // });\n  }, []);\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content);\n    app_fetch({\n      query: `mutation{createNode(accountScreenName:\"${account.screenName}\",title:\"${esTitle}\",content:\"${esContent}\",featured:true){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createNode) {\n        setShowCreateNode(false);\n        setRedirect(<Redirect to={`/node/${res.data.createNode.ID}`} />);\n      } else alert(\"Something went wrong when creating node\");\n    });\n  };\n\n  return (\n    <Container>\n      <title>Crowdventure!</title>\n      <h1>Welcome!</h1>\n      <Container>\n        Crowdventure is a Crowd-Sourced\n        Choose-and-Create-Your-Own-Adventure-Game!\n      </Container>\n      <p />\n      <h3>Featured Pages:</h3>\n      {topNodes ? (\n        <CardColumns>\n          {topNodes.map((node) => (\n            <Card className=\"text-center\">\n              <a href={`/crowdventure/#/node/${node.ID}`}>\n                {node.pictureURL ? (\n                  <Card.Header style={{ \"background-color\": \"white\" }}>\n                    <Card.Img\n                      variant=\"top\"\n                      onError={(e) => {\n                        e.target.style.display = \"none\";\n                        setInfo(\n                          <span style={{ color: \"red\" }}>\n                            Picture not found!\n                          </span>\n                        );\n                      }}\n                      src={node.pictureURL}\n                    />\n                  </Card.Header>\n                ) : (\n                  \"\"\n                )}\n                <Card.Body>\n                  <Card.Title>{node.title}</Card.Title>\n                </Card.Body>\n              </a>\n              <Card.Footer>\n                <small className=\"text-muted\">\n                  Created by:{\" \"}\n                  <a href={`/crowdventure/#/account/${node.owner.screenName}`}>\n                    <img\n                      src={\n                        node.owner.profilePicURL\n                          ? node.owner.profilePicURL\n                          : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                      }\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {node.owner.screenName}\n                  </a>\n                  <br />\n                  Story Size: {node.size}\n                  <br />\n                  Views: {node.views}\n                </small>\n              </Card.Footer>\n            </Card>\n          ))}\n        </CardColumns>\n      ) : (\n        <Alert variant=\"light\">\n          <Alert.Heading>Loading...</Alert.Heading>\n        </Alert>\n      )}\n      <OverlayTrigger\n        overlay={\n          !account ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => setShowCreateNode(true)}\n            disabled={!account}\n            style={{\n              width: \"100%\",\n              pointerEvents: account ? \"auto\" : \"none\",\n            }}\n          >\n            Create New!\n          </Button>\n        </span>\n      </OverlayTrigger>\n      {/* <h3>Featured Accounts:</h3>\n      {topAccounts ? (\n        <CardColumns>\n          {topAccounts.map((account) => (\n            <Card>\n              <a href={`/crowdventure/#/account/${account.screenName}`}>\n                <Card.Body>\n                  <Card.Title>{account.screenName}</Card.Title>\n                </Card.Body>\n              </a>\n              <Card.Footer>\n                Total Views:{account.totalNodeViews}\n                <br />\n                Total Score:{account.totalSuggestionScore}\n              </Card.Footer>\n            </Card>\n          ))}\n        </CardColumns>\n      ) : (\n        \"\"\n      )} */}\n      <Modal show={showCreateNode} onHide={() => setShowCreateNode(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Creating New Page</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              required\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            ></Form.Control>\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              required\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            ></Form.Control>\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={createNode}>Create Page!</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n      {redirect ? redirect : \"\"}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Node from \"./Node\";\nimport Account from \"./Account\";\nimport Home from \"./Home\";\n\nimport Cookies from \"universal-cookie\";\nimport { Navbar, Container, Button, Modal, Form } from \"react-bootstrap\";\n\nimport { app_fetch, escape } from \"./index\";\n\nimport history from \"history/browser\";\n\nconst App = () => {\n  const [bgColor, setBgColor] = useState(undefined);\n  const [fgColor, setFgColor] = useState(undefined);\n  return (\n    <Container>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/crowdventure\">\n          <img\n            href=\"/crowdventure\"\n            src={process.env.PUBLIC_URL + \"/logo.png\"}\n            alt=\"Crowdventure Logo\"\n            style={{ width: \"100%\" }}\n          />\n        </Navbar.Brand>\n        <small class=\"text-muted\">Version: 0.1.4</small>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"bg-light\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n          <AccountManager />\n        </Navbar.Collapse>\n      </Navbar>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route\n            path=\"/node/:id\"\n            render={(props) => (\n              <Node\n                {...props}\n                history={history}\n                setBgColor={setBgColor}\n                setFgColor={setFgColor}\n              />\n            )}\n          />\n          <Route path=\"/account/:id\" component={Account} />\n        </Switch>\n      </HashRouter>\n      <Navbar className=\"text-right\">\n        <small class=\"text-muted\">@ 2020 Copyright: (MIT) Benjamin Kern</small>\n      </Navbar>\n      <title>Crowdventure! - Page not found!</title>\n    </Container>\n  );\n};\n\nconst AccountManager = () => {\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [account, setAccount] = useState(undefined);\n  const [info, setInfo] = useState(undefined);\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n\n  const handleSubmitSignUp = () => {\n    if (pass1 !== pass2)\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n    else {\n      const esScreenName = escape(screenName);\n      app_fetch({\n        query: `query{getAccount(screenName:\"${esScreenName}\"){screenName}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.getAccount)\n          setInfo(\n            <div style={{ color: \"red\" }}>That account already exists!</div>\n          );\n        else {\n          createAccount();\n        }\n      });\n    }\n  };\n\n  const createAccount = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(pass1);\n    app_fetch({\n      query: `mutation{createAccount(screenName:\"${esScreenName}\",password:\"${esPass}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createAccount) {\n        new Cookies().set(\"account\", screenName, { path: \"/\" });\n        setAccount(res.data.createAccount);\n        setShowSignUp(false);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when creating account\");\n    });\n  };\n\n  const login = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(pass1);\n    app_fetch({\n      query: `mutation{loginAccount(screenName:\"${esScreenName}\",password:\"${esPass}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.loginAccount) {\n        new Cookies().set(\"account\", screenName, { path: \"/\" });\n        setAccount(res.data.getAccount);\n        setShowLogin(false);\n        window.location.reload(false);\n      } else\n        setInfo(\n          <div style={{ color: \"red\" }}>\n            That account does not exist or the password did not match!\n          </div>\n        );\n    });\n  };\n\n  useEffect(() => {\n    let loggedInAs = escape(new Cookies().get(\"account\"));\n    if (loggedInAs)\n      app_fetch({\n        query: `mutation{loginAccount(screenName:\"${loggedInAs}\"){screenName}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) setAccount(res.data.loginAccount);\n        else {\n          alert(\"Something went wrong when logging in\");\n          new Cookies().set(\"account\", \"\", { path: \"/\" });\n        }\n      });\n  }, []);\n\n  if (account === undefined || account === null) {\n    return (\n      <Navbar.Text>\n        You are not logged in.{\" \"}\n        <Button variant=\"light\" onClick={() => setShowLogin(true)} size=\"sm\">\n          Log In\n        </Button>{\" \"}\n        or{\" \"}\n        <Button variant=\"light\" onClick={() => setShowSignUp(true)} size=\"sm\">\n          Sign Up\n        </Button>\n        <Modal show={showLogin} onHide={() => setShowLogin(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Log in</Modal.Title>\n          </Modal.Header>\n          <Form>\n            <Modal.Body>\n              <Form.Label>Screen Name:</Form.Label>\n              <Form.Control\n                required\n                value={screenName}\n                onChange={(e) => setScreenName(e.target.value)}\n              />\n              <Form.Label>Password:</Form.Label>\n              <Form.Control\n                required\n                type=\"password\"\n                value={pass1}\n                onChange={(e) => setPass1(e.target.value)}\n              />\n              {info ? info : \"\"}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={() => login()}>\n                Log in\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n        <Modal show={showSignUp} onHide={() => setShowSignUp(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Sign Up for Crowdventure!</Modal.Title>\n          </Modal.Header>\n          <Form>\n            <Modal.Body>\n              <Form.Group>\n                <Form.Label>Screen Name:</Form.Label>\n                <Form.Control\n                  required\n                  value={screenName}\n                  onChange={(e) => setScreenName(e.target.value)}\n                />\n                <Form.Label>Create Password:</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  value={pass1}\n                  onChange={(e) => setPass1(e.target.value)}\n                />\n                <Form.Label>Confirm Password:</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  value={pass2}\n                  onChange={(e) => setPass2(e.target.value)}\n                />\n              </Form.Group>\n              {info ? info : \"\"}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={() => handleSubmitSignUp()}>\n                Sign Up\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n      </Navbar.Text>\n    );\n  }\n\n  return (\n    <Navbar.Text>\n      You are logged in as:{\" \"}\n      <a\n        href={`/crowdventure/#/account/${account.screenName}`}\n        onClick={() => setTimeout(() => window.location.reload(false), 100)}\n      >\n        {account.screenName}\n      </a>\n    </Navbar.Text>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst { createApolloFetch } = require(\"apollo-fetch\");\n\nconst app_fetch = createApolloFetch({\n  uri: require(\"./apolloURL.js\"),\n});\n\nconst escape = (text, newlines = false) =>\n  text\n    ? newlines\n      ? text.replace(/\"\"\"/g, ` \"\" \" `)\n      : text.replace(/\\n/g, \"\").replace(/\\\\/g, `\\\\\\\\`).replace(/\"/g, `\\\\\"`)\n    : text;\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport { app_fetch, escape };\n"],"sourceRoot":""}