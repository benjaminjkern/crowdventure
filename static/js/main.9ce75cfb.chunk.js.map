{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","basename","to","exact","path","component","Home","About","Component","app_fetch","createApolloFetch","require","uri","ReactDOM","render","document","getElementById"],"mappings":"+NA6OMA,E,uKAEF,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAIJ,6BAEA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,U,GAjBxBC,aAwBZF,EAAO,kBACX,6BACE,sCAGEC,EAAQ,kBACZ,6BACE,uCAIWP,ICzQTS,G,OAAYC,EAFYC,EAAQ,IAA9BD,mBAE4B,CAClCE,IAAK,wEAKPC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAElCP,c","file":"static/js/main.9ce75cfb.chunk.js","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { HashRouter, Route, Switch } from \"react-router-dom\";\n\n// import Node from \"./Node\";\n// import Account from \"./Account\";\n// import Home from \"./Home\";\n\n// import Cookies from \"universal-cookie\";\n// import {\n//   Navbar,\n//   Container,\n//   Button,\n//   Modal,\n//   Form,\n//   OverlayTrigger,\n//   Tooltip,\n// } from \"react-bootstrap\";\n\n// import app_fetch from \"./index\";\n\n// const App = () => {\n//   return (\n//     <Container>\n//       <Navbar>\n//         <Navbar.Brand href=\"/\">\n//           <img\n//             src={process.env.PUBLIC_URL + \"/logo.png\"}\n//             alt=\"Crowdventure Logo\"\n//           />\n//         </Navbar.Brand>\n//         <Navbar.Collapse className=\"justify-content-end\">\n//           <AccountManager />\n//         </Navbar.Collapse>\n//       </Navbar>\n//       <HashRouter basename=\"/\">\n//         <Route path=\"/\" component={Home} exact />\n//         <Route path=\"/node/:id\" component={Node} />\n//         <Route path=\"/account/:id\" component={Account} />\n//       </HashRouter>\n//     </Container>\n//   );\n// };\n\n// const AccountManager = () => {\n//   const [showLogin, setShowLogin] = useState(false);\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [account, setAccount] = useState(undefined);\n//   const [info, setInfo] = useState(undefined);\n\n//   const [screenName, setScreenName] = useState(\"\");\n//   const [pass1, setPass1] = useState(\"\");\n//   const [pass2, setPass2] = useState(\"\");\n\n//   const handleSubmitSignUp = () => {\n//     if (pass1 !== pass2)\n//       setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n//     else if (screenName.includes('\"'))\n//       setInfo(\n//         <div style={{ color: \"red\" }}>\n//           Screen Name cannot include (\") character!\n//         </div>\n//       );\n//     else if (pass1.includes('\"'))\n//       setInfo(\n//         <div style={{ color: \"red\" }}>\n//           Password cannot include (\") character!\n//         </div>\n//       );\n//     else\n//       app_fetch({\n//         query: `query{getAccount(screenName:\"${screenName}\"){screenName}}`,\n//       }).then((res, err) => {\n//         if (err) alert(err);\n//         if (res.data && res.data.getAccount)\n//           setInfo(\n//             <div style={{ color: \"red\" }}>That account already exists!</div>\n//           );\n//         else {\n//           createAccount();\n//         }\n//       });\n//   };\n\n//   const createAccount = () =>\n//     app_fetch({\n//       query: `mutation{createAccount(screenName:\"${screenName}\",password:\"${pass1}\"){screenName}}`,\n//     }).then((res, err) => {\n//       if (err) alert(err);\n//       if (res.data && res.data.createAccount) {\n//         new Cookies().set(\"account\", screenName, { path: \"/\" });\n//         setAccount(res.data.createAccount);\n//         setShowSignUp(false);\n//         window.location.reload(false);\n//       } else alert(\"Something went wrong when creating account\");\n//     });\n\n//   const login = () => {\n//     if (screenName.includes('\"'))\n//       setInfo(\n//         <div style={{ color: \"red\" }}>\n//           Screen Name cannot include (\") character!\n//         </div>\n//       );\n//     else if (pass1.includes('\"'))\n//       setInfo(\n//         <div style={{ color: \"red\" }}>\n//           Password cannot include (\") character!\n//         </div>\n//       );\n//     else {\n//       app_fetch({\n//         query: `query{getAccount(screenName:\"${screenName}\",password:\"${pass1}\"){screenName}}`,\n//       }).then((res, err) => {\n//         if (err) alert(err);\n//         if (res.data && res.data.getAccount) {\n//           new Cookies().set(\"account\", screenName, { path: \"/\" });\n//           setAccount(res.data.getAccount);\n//           setShowLogin(false);\n//           window.location.reload(false);\n//         } else\n//           setInfo(\n//             <div style={{ color: \"red\" }}>\n//               That account does not exist or the password did not match!\n//             </div>\n//           );\n//       });\n//     }\n//   };\n\n//   useEffect(() => {\n//     let loggedInAs = new Cookies().get(\"account\"); // INSECURE DOES NOT CHECK FOR PASSWORD WHEN YOU LOAD PAGE BUT WAHTEVER\n//     if (loggedInAs)\n//       app_fetch({\n//         query: `query{getAccount(screenName:\"${loggedInAs}\"){screenName}}`,\n//       }).then((res, err) => {\n//         if (err) alert(err);\n//         if (res.data) setAccount(res.data.getAccount);\n//         else {\n//           alert(\"Something went wrong when logging in\");\n//           new Cookies().set(\"account\", \"\", { path: \"/\" });\n//         }\n//       });\n//   }, []);\n\n//   if (account === undefined || account === null) {\n//     return (\n//       <Navbar.Text>\n//         You are not logged in.{\" \"}\n//         <a href=\"#\" onClick={() => setShowLogin(true)}>\n//           Log In\n//         </a>{\" \"}\n//         or{\" \"}\n//         <a href=\"#\" onClick={() => setShowSignUp(true)}>\n//           Sign Up\n//         </a>\n//         <Modal show={showLogin} onHide={() => setShowLogin(false)}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Log in</Modal.Title>\n//           </Modal.Header>\n//           <Form>\n//             <Modal.Body>\n//               <Form.Label>Screen Name:</Form.Label>\n//               <Form.Control\n//                 required\n//                 value={screenName}\n//                 onChange={(e) => setScreenName(e.target.value)}\n//               />\n//               <Form.Label>Password:</Form.Label>\n//               <Form.Control\n//                 required\n//                 type=\"password\"\n//                 value={pass1}\n//                 onChange={(e) => setPass1(e.target.value)}\n//               />\n//               {info ? info : \"\"}\n//             </Modal.Body>\n//             <Modal.Footer>\n//               <Button variant=\"primary\" onClick={() => login()}>\n//                 Log in\n//               </Button>\n//             </Modal.Footer>\n//           </Form>\n//         </Modal>\n//         <Modal show={showSignUp} onHide={() => setShowSignUp(false)}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Sign Up for Crowdventure!</Modal.Title>\n//           </Modal.Header>\n//           <Form>\n//             <Modal.Body>\n//               <Form.Group>\n//                 <Form.Label>Screen Name:</Form.Label>\n//                 <Form.Control\n//                   required\n//                   value={screenName}\n//                   onChange={(e) => setScreenName(e.target.value)}\n//                 />\n//                 <Form.Label>Create Password:</Form.Label>\n//                 <Form.Control\n//                   required\n//                   type=\"password\"\n//                   value={pass1}\n//                   onChange={(e) => setPass1(e.target.value)}\n//                 />\n//                 <Form.Label>Confirm Password:</Form.Label>\n//                 <Form.Control\n//                   required\n//                   type=\"password\"\n//                   value={pass2}\n//                   onChange={(e) => setPass2(e.target.value)}\n//                 />\n//               </Form.Group>\n//               {info ? info : \"\"}\n//             </Modal.Body>\n//             <Modal.Footer>\n//               <Button variant=\"primary\" onClick={() => handleSubmitSignUp()}>\n//                 Sign Up\n//               </Button>\n//             </Modal.Footer>\n//           </Form>\n//         </Modal>\n//       </Navbar.Text>\n//     );\n//   }\n\n//   return (\n//     <Navbar.Text>\n//       You are logged in as:{\" \"}\n//       <a href={`/account/${account.screenName}`}>{account.screenName}</a>\n//     </Navbar.Text>\n//   );\n// };\n\n// export default App;\n\nimport React, { Component } from \"react\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n          </ul>\n\n          <hr />\n\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n  </div>\n);\nconst About = () => (\n  <div>\n    <h2>About</h2>\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst { createApolloFetch } = require(\"apollo-fetch\");\n\nconst app_fetch = createApolloFetch({\n  uri: \"https://3yfp7ejc0m.execute-api.us-east-1.amazonaws.com/dev/graphql\",\n});\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport default app_fetch;\n"],"sourceRoot":""}