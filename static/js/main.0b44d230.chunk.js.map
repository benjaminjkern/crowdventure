{"version":3,"sources":["SearchImage.jsx","Modals/PictureModal.jsx","Modals/ConfirmModal.jsx","Modals/EditNodeModal.jsx","Node/SearchPage.jsx","Modals/CreateNodeModal.jsx","Modals/SuggestChoiceModal.jsx","Modals/EditChoiceModal.jsx","Node/ChoiceColumns.jsx","Node/Node.jsx","Modals/EditAccountModal.jsx","Modals/MessageModal.jsx","NodeViewer.jsx","Account.jsx","Home.jsx","Notifications.jsx","Modals/LoginModal.jsx","Modals/SignUpModal.jsx","Modals/UnsafeModal.jsx","AccountManager.jsx","App.jsx","index.jsx","apolloURL.js"],"names":["lastQuery","PictureModal","props","title","pictureURL","close","loggedInAs","useState","show","setShow","info","setInfo","Modal","onHide","Header","unsafeMode","style","backgroundColor","palette","closeButton","Title","Body","src","onError","e","target","display","color","width","maxHeight","Footer","Button","size","onClick","border","onMouseEnter","onMouseLeave","Math","random","BING_API_KEY","require","targets","queries","displayed","tempRows","SearchImage","callback","isLoading","setIsLoading","rows","setRows","checkImage","path","Promise","resolve","img","Image","onload","onerror","handleSearch","query","amount","offset","Object","keys","forEach","key","cancelled","fetch","encodeURIComponent","headers","then","data","json","a","fullpage","value","length","filteredOptions","filter","hit","isFamilyFriendly","all","map","contentUrl","imagesExist","_","i","newRows","row","id","images","push","catch","unblur","currentblur","unblurring","component","setTimeout","startreblur","reblur","filterBy","labelKey","minLength","onSearch","maxResults","onPaginate","useCache","options","placeholder","renderMenuItemChildren","index","class","image","thumbnailUrl","marginRight","borderRadius","OverlayTrigger","overlay","Tooltip","position","top","left","ConfirmModal","content","onConfirm","variant","EditNodeModal","node","undefined","showingModal","showModal","setTitle","setContent","picture","setPicture","showChangePic","setShowChangePic","hidden","setHidden","pictureUnsafe","shouldHide","setShouldHide","deletePage","mutation_call","nodeID","ID","history","back","window","location","reload","Form","padding","right","cursor","textShadow","url","familyFriendly","Label","Control","onChange","as","isAdmin","Check","type","checked","label","esTitle","escape","esContent","esPicture","res","editNode","SearchPage","toID","allNodes","setAllNodes","toNode","setToNode","useEffect","query_call","owner","screenName","profilePicURL","text","toLowerCase","includes","defaultSelected","height","CreateNodeModal","featured","pictureField","setPictureField","alt","accountScreenName","createNode","SuggestChoiceModal","fromNode","toPage","setToPage","suggestAction","setSuggestAction","createNewAction","escaped","fromID","action","EditChoiceModal","choice","to","editChoice","choiceID","ChoiceColumns","canon","canonChoices","nonCanonChoices","choices","setChoices","refs","some","likedBy","dislikedBy","score","suggestedBy","from","liked","account","disliked","CardColumns","idx","createRef","Card","className","boxShadow","overflow","ref","paddingTop","disabled","href","scrollTo","behavior","pointerEvents","current","DropdownButton","drop","Dropdown","Item","makeCanon","Divider","reportingObjectType","reportingObjectID","reporting","alert","slice","dislike","like","Alert","Heading","Node","match","setNode","pageID","params","fgColor","bgColor","views","returnNode","Container","property","dismissible","onClose","onLoad","marginLeft","split","line","textIndent","paddingRight","paddingBottom","EditAccountModal","bio","profilePicture","setAccount","setRedirect","bioField","setBioField","profilePictureField","setProfilePictureField","nameField","setNameField","pass1","setPass1","pass2","setPass2","setAdmin","editPage","checkedIfExists","esBio","esScreenName","newScreenName","newPassword","totalNodeViews","totalSuggestionScore","featuredNodes","nodes","Cookies","set","opacity","MessageModal","message","setMessage","link","time","err","NodeViewer","marginTop","marginBottom","Img","parentNode","alreadyFeatured","featurePage","hidePage","Account","setLoggedInAs","redirect","searchQuery","setSearchQuery","searchedNodes","setSearchedNodes","notifications","notif","seen","float","lastUnsafe","page","Home","topNodes","setTopNodes","recentNodes","setRecentNodes","getRecentNodes","pageNum","allowHidden","get","unsafe","Notifications","seenBtns","topText","cookies","unseen","notification","onMouseOver","onMouseOut","force","fontSize","lineHeight","textAlign","onMouseDown","onMouseUp","Date","toLocaleString","newNotifs","LoginModal","setScreenName","password","setPassword","esPass","login","SignUpModal","createAccount","Group","handleSubmitSignUp","understand","setUnderstand","AccountManager","Navbar","Text","textDecoration","name","onstyle","UnsafeModal","placement","borderColor","packageJson","App","savedAccount","document","getElementById","backgroundImage","expand","Brand","maxWidth","Toggle","aria-controls","Collapse","render","exact","version","app_fetch","createApolloFetch","uri","backendURL","parameters","attributes","console","log","formatParameters","formatAttributes","param","join","attribute","newlines","replace","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.0b44d230.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nimport { AsyncTypeahead, TypeaheadMenu } from \"react-bootstrap-typeahead\";\n\nimport { palette } from \"./index\";\n\nconst { BING_API_KEY } = require(\"./apolloURL\");\n\nlet targets = {};\nlet queries = {};\n\nlet displayed = 0;\nlet lastQuery;\nlet tempRows = [];\n\nconst SearchImage = (props) => {\n  const { callback, loggedInAs } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [rows, setRows] = useState([]);\n\n  const BLURAMOUNT = 10;\n  const PAGESIZE = 20;\n  const MAXROWLENGTH = 2;\n\n  const checkImage = (path) =>\n    new Promise((resolve) => {\n      const img = new Image();\n      img.onload = () => {\n        resolve(true);\n      };\n      img.onerror = () => {\n        resolve(false);\n      };\n      img.src = path;\n    });\n\n  const handleSearch = (\n    query,\n    amount = PAGESIZE,\n    offset = query !== lastQuery ? 0 : displayed\n  ) => {\n    setIsLoading(true);\n    if (query !== lastQuery) {\n      Object.keys(queries).forEach((key) => (queries[key].cancelled = true));\n      tempRows = [];\n      setRows([]);\n      displayed = 0;\n      offset = 0;\n      lastQuery = query;\n    }\n    queries[query] = { query }; // the query attribute is pointless but whatever\n\n    fetch(\n      \"https://api.cognitive.microsoft.com/bing/v7.0/images/search?q=\" +\n        encodeURIComponent(query) +\n        `&count=${amount}&safeSearch=${\n          loggedInAs && loggedInAs.unsafeMode ? \"Off\" : \"Strict\"\n        }&offset=` +\n        offset,\n      {\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": BING_API_KEY,\n        },\n      }\n    )\n      .then((data) => data.json())\n      .then(async (data) => {\n        const fullpage = data.value.length === amount;\n\n        let filteredOptions = data.value.filter(\n          (hit) => hit.isFamilyFriendly || (loggedInAs && loggedInAs.unsafeMode)\n        );\n\n        if (queries[query].cancelled) {\n          delete queries[query];\n          return;\n        }\n\n        const imagesExist = await Promise.all(\n          data.value.map((hit) => checkImage(hit.contentUrl))\n        );\n\n        filteredOptions = filteredOptions.filter((_, i) => imagesExist[i]);\n\n        const newRows = tempRows.filter((row) => row.id !== \"buffer\");\n\n        for (const hit of filteredOptions) {\n          if (\n            newRows.length === 0 ||\n            newRows[newRows.length - 1].images.length === MAXROWLENGTH\n          ) {\n            newRows.push({\n              id: \"(Image Selected)\",\n              images: [hit],\n            });\n          } else {\n            newRows[newRows.length - 1].images.push(hit);\n          }\n          displayed++;\n        }\n\n        if (queries[query].cancelled) {\n          delete queries[query];\n          return;\n        }\n\n        if (fullpage) {\n          if (filteredOptions.length < amount) {\n            tempRows = newRows;\n            handleSearch(query, amount - filteredOptions.length);\n            return;\n          } else {\n            newRows.push({ id: \"buffer\", images: [] });\n          }\n        }\n        tempRows = newRows;\n        setRows(newRows);\n\n        delete queries[query];\n\n        setIsLoading(false);\n      })\n      .catch(() => {});\n  };\n\n  const startunblur = (component, id) => {\n    Object.keys(targets).forEach((key) => {\n      if (key !== id + \"\") {\n        startreblur(key);\n      }\n    });\n    targets[id] = {\n      component,\n      currentblur: BLURAMOUNT,\n      unblurring: true,\n    };\n    unblur(id);\n  };\n  const unblur = (id) => {\n    if (!targets[id]) return;\n    targets[id].currentblur -= 0.1;\n    if (targets[id].currentblur >= 0 && targets[id].unblurring) {\n      targets[id].component.style[\"-webkit-filter\"] =\n        \"blur(\" + targets[id].currentblur + \"px)\";\n      targets[id].component.style.filter =\n        \"blur(\" + targets[id].currentblur + \"px)\";\n      setTimeout(() => unblur(id), 1);\n    } else {\n      targets[id].unblurring = false;\n    }\n  };\n\n  const startreblur = (id) => {\n    if (!targets[id]) return;\n    targets[id].unblurring = false;\n    reblur(id);\n  };\n\n  const reblur = (id) => {\n    if (!targets[id]) return;\n    targets[id].currentblur += 0.1;\n    if (targets[id].currentblur <= BLURAMOUNT && !targets[id].unblurring) {\n      targets[id].component.style[\"-webkit-filter\"] =\n        \"blur(\" + targets[id].currentblur + \"px)\";\n      targets[id].component.style.filter =\n        \"blur(\" + targets[id].currentblur + \"px)\";\n      setTimeout(() => reblur(id), 1);\n    } else {\n      delete targets[id];\n    }\n  };\n\n  return (\n    <AsyncTypeahead\n      id=\"async-example\"\n      isLoading={isLoading}\n      filterBy={() => true}\n      labelKey=\"id\"\n      minLength={2}\n      onSearch={handleSearch}\n      maxResults={10}\n      onPaginate={() => handleSearch(lastQuery)}\n      useCache={false}\n      options={rows}\n      placeholder=\"Search for an image...\"\n      renderMenuItemChildren={(row, _, index) => (\n        <div class=\"row align-items-center\">\n          {row.images.map((image, i) => (\n            <div class=\"col\">\n              <img\n                onClick={() =>\n                  callback(image.contentUrl, image.isFamilyFriendly)\n                }\n                src={image.thumbnailUrl}\n                style={{\n                  marginRight: \"10px\",\n                  borderRadius: \"4px\",\n                  width: \"100%\",\n                  ...(image.isFamilyFriendly\n                    ? {}\n                    : {\n                        \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                        filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                      }),\n                }}\n                onMouseEnter={(e) => {\n                  if (!image.isFamilyFriendly)\n                    startunblur(e.target, 2 * index + i);\n                }}\n                onMouseLeave={(e) => {\n                  if (!image.isFamilyFriendly) startreblur(2 * index + i);\n                }}\n              />\n              {image.isFamilyFriendly ? (\n                \"\"\n              ) : (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This picture will automatically flag this page as hidden!\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    />\n  );\n};\n\nexport default SearchImage;\n","import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst PictureModal = (props) => {\n  const { title, pictureURL, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        <img\n          src={pictureURL}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n            setInfo(<span style={{ color: \"red\" }}>Picture not found!</span>);\n          }}\n          style={{\n            width: \"100%\",\n            maxHeight: \"70vh\",\n            \"object-fit\": \"contain\",\n          }}\n        />\n        {info ? info : \"\"}\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          size=\"sm\"\n          onClick={() => {\n            setShow(false);\n            close();\n          }}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Thanks for showing me this {Math.random() < 0.5 ? \"cool\" : \"neat\"}{\" \"}\n          picture!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default PictureModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst ConfirmModal = (props) => {\n  const { title, content, onConfirm, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        {content}\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            setShow(false);\n            close();\n          }}\n        >\n          No!\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={onConfirm}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Yes!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useState } from \"react\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nimport { Modal, Form, Button } from \"react-bootstrap\";\n\nimport SearchImage from \"../SearchImage\";\nimport ConfirmModal from \"./ConfirmModal\";\n\nconst EditNodeModal = (props) => {\n  const { node, close, loggedInAs } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n  const [showingModal, showModal] = useState(undefined);\n\n  const [title, setTitle] = useState(node.title);\n  const [content, setContent] = useState(node.content);\n  const [picture, setPicture] = useState(node.pictureURL);\n  const [showChangePic, setShowChangePic] = useState(false);\n  const [hidden, setHidden] = useState(node.hidden);\n\n  const [shouldHide, setShouldHide] = useState(node.pictureUnsafe || false);\n\n  const deletePage = () => {\n    mutation_call(\"deleteNode\", { nodeID: node.ID }, 0, () => {\n      history.back();\n      setTimeout(() => window.location.reload(false), 100);\n    });\n  };\n\n  const editNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = picture.length > 0 ? escape(picture) : null;\n\n    mutation_call(\n      \"editNode\",\n      {\n        nodeID: node.ID,\n        title: esTitle,\n        content: `\"\"${esContent}\"\"`,\n        pictureURL: esPicture,\n        ...(shouldHide\n          ? { hidden: true, pictureUnsafe: true }\n          : { pictureUnsafe: false }),\n        ...(!shouldHide && hidden !== undefined && !node.pictureUnsafe\n          ? { hidden }\n          : {}),\n      },\n      { ID: 0 },\n      (res) => {\n        if (res) {\n          window.location.reload(false);\n        }\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Page</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {picture ? (\n            <>\n              <div\n                style={{\n                  border: \"1px solid #eee\",\n                  borderRadius: \"8px\",\n                }}\n              >\n                <img\n                  src={picture}\n                  onError={(e) => {\n                    setInfo(\n                      <span style={{ color: \"red\" }}>Picture not found!</span>\n                    );\n                    setPicture(\"\");\n                    setShouldHide(false);\n                  }}\n                  style={{\n                    padding: \"1px\",\n                    width: \"100%\",\n                    \"object-fit\": \"contain\",\n                    borderRadius: \"8px\",\n                  }}\n                />\n                <span\n                  class=\"fa fa-times\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"1.5em\",\n                    right: \"1.5em\",\n                    color: \"#888\",\n                    cursor: \"pointer\",\n                    textShadow:\n                      \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                  }}\n                  onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                  onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                  onClick={() => {\n                    setPicture(\"\");\n                    setShouldHide(false);\n                  }}\n                />\n              </div>\n\n              <br />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <div class=\"row no-gutters\">\n            <div class=\"col\">Picture:</div>\n            <div class=\"col small text-muted text-center\">\n              {!picture\n                ? \"(Don't use any picture)\"\n                : picture === node.pictureURL\n                ? \"(Use existing picture)\"\n                : \"(Use new picture)\"}\n            </div>\n            <div class=\"col text-right\">\n              <Button\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                size=\"sm\"\n                onClick={() => setShowChangePic(!showChangePic)}\n              >\n                {picture ? \"Change\" : \"Select\"} Picture\n              </Button>\n            </div>\n          </div>\n          {showChangePic ? (\n            <>\n              <br />\n              <SearchImage\n                loggedInAs={loggedInAs}\n                callback={(url, familyFriendly) => {\n                  setPicture(url);\n                  setInfo(\"\");\n                  setShowChangePic(false);\n                  setShouldHide(!familyFriendly);\n                }}\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n          <hr\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n              : {})}\n          />\n          <Form.Label>Title:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <Form.Label>Content:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            as=\"textarea\"\n            rows=\"3\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n          {loggedInAs && loggedInAs.isAdmin ? (\n            <>\n              <Form.Label>Admin Controls:</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                checked={hidden || false}\n                onChange={(e) => setHidden(e.target.checked)}\n                label=\"Page should be hidden\"\n                id=\"hide\"\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n          {info ? info : \"\"}\n          {shouldHide ? (\n            <span style={{ color: \"red\" }}>\n              <br />\n              The image chosen will cause the page to automatically be hidden.\n              If you would like to not have this happen, change or remove the\n              image.\n            </span>\n          ) : (\n            \"\"\n          )}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              title\n                ? content\n                  ? editNode()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Content cannot be empty!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>Title cannot be empty!</span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Page!\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              showModal(\n                <ConfirmModal\n                  loggedInAs={loggedInAs}\n                  close={() => showModal(undefined)}\n                  onConfirm={deletePage}\n                  title=\"Delete Page\"\n                  content=\"This will erase all suggested choices of this page, and their associated scores. This will NOT delete sub-pages of this page. Are you sure you wish to continue?\"\n                />\n              );\n            }}\n          >\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default EditNodeModal;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport { query_call } from \"../index\";\n\nconst SearchPage = (props) => {\n  const { callback, toID } = props;\n  const [allNodes, setAllNodes] = useState(undefined);\n  const [toNode, setToNode] = useState(undefined);\n\n  const filterByCallback = (node, props) => {\n    if (props.text === \"\") {\n      callback(\"\");\n      return true;\n    }\n    return (\n      node.title.toLowerCase().includes(props.text.toLowerCase()) ||\n      node.owner.screenName.toLowerCase().includes(props.text.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    if (toID) {\n      query_call(\"getNode\", { ID: toID }, { title: 0, ID: 0 }, (res) =>\n        setToNode(res)\n      );\n    } else setToNode(null);\n\n    query_call(\n      \"allNodes\",\n      {},\n      { title: 0, owner: { screenName: 0, profilePicURL: 0 }, ID: 0 },\n      (res) => setAllNodes(res)\n    );\n  }, []);\n\n  if (!allNodes || toNode === undefined) return <div>Loading...</div>;\n\n  return (\n    <Typeahead\n      filterBy={filterByCallback}\n      defaultSelected={[toNode ? toNode.title : \"\"]}\n      labelKey=\"title\"\n      options={allNodes}\n      placeholder=\"(Leave Empty to Create New Page)\"\n      renderMenuItemChildren={(node) => (\n        <div onClick={() => callback(node.ID)}>\n          {node.title}\n          <div>\n            <small>\n              Author:{\" \"}\n              <img\n                src={\n                  node.owner.profilePicURL\n                    ? node.owner.profilePicURL\n                    : process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\"\n                }\n                onError={(e) => {\n                  e.target.src =\n                    process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\";\n                }}\n                style={{\n                  border: \"1px solid #bbb\",\n                  height: \"2em\",\n                  width: \"2em\",\n                  \"object-fit\": \"cover\",\n                  \"border-radius\": \"50%\",\n                }}\n              />{\" \"}\n              {node.owner.screenName}\n            </small>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default SearchPage;\n","import React, { useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\n\nimport { escape, mutation_call, palette } from \"../index\";\n\nimport SearchImage from \"../SearchImage\";\n\nconst CreateNodeModal = (props) => {\n  const {\n    loggedInAs,\n    callback,\n    picture,\n    pictureUnsafe,\n    close,\n    featured,\n  } = props;\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [pictureField, setPictureField] = useState(picture);\n  const [showChangePic, setShowChangePic] = useState(false);\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n  const [shouldHide, setShouldHide] = useState(pictureUnsafe);\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = escape(pictureField);\n    mutation_call(\n      \"createNode\",\n      {\n        accountScreenName: loggedInAs.screenName,\n        title: esTitle,\n        content: `\"\"${esContent}\"\"`,\n        featured: featured || false,\n        ...(shouldHide ? { hidden: true, pictureUnsafe: true } : {}),\n        ...(esPicture && esPicture.length ? { pictureURL: esPicture } : {}),\n      },\n      { ID: 0 },\n      callback ||\n        (() => {\n          window.location.reload(false);\n        })\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Creating New Page</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {pictureField ? (\n            <>\n              <div\n                style={{\n                  border: \"1px solid #eee\",\n                  borderRadius: \"8px\",\n                }}\n              >\n                <img\n                  src={pictureField}\n                  onError={() => {\n                    setInfo(\n                      <span style={{ color: \"red\" }}>Picture not found!</span>\n                    );\n                    setPictureField(\"\");\n                    setShouldHide(false);\n                  }}\n                  alt=\"This shouldn't have happened\"\n                  style={{\n                    padding: \"1px\",\n                    width: \"100%\",\n                    \"object-fit\": \"contain\",\n                    borderRadius: \"8px\",\n                  }}\n                />\n                <span\n                  class=\"fa fa-times\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"1.5em\",\n                    right: \"1.5em\",\n                    color: \"#888\",\n                    cursor: \"pointer\",\n                    textShadow:\n                      \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                  }}\n                  onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                  onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                  onClick={() => {\n                    setPictureField(\"\");\n                    setShouldHide(false);\n                  }}\n                />\n              </div>\n\n              <br />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <div class=\"row no-gutters\">\n            <div class=\"col\">Picture:</div>\n            <div class=\"col small text-muted text-center\">\n              {!pictureField ? \"(Don't use any picture)\" : \"(Use new picture)\"}\n            </div>\n            <div class=\"col text-right\">\n              <Button\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                size=\"sm\"\n                onClick={() => setShowChangePic(!showChangePic)}\n              >\n                {pictureField ? \"Change\" : \"Select\"} Picture\n              </Button>\n            </div>\n          </div>\n          {showChangePic ? (\n            <>\n              <br />\n              <SearchImage\n                loggedInAs={loggedInAs}\n                callback={(url, familyFriendly) => {\n                  setPictureField(url);\n                  setShowChangePic(false);\n                  setShouldHide(!familyFriendly);\n                }}\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <hr\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n              : {})}\n          />\n          <Form.Label>Title:</Form.Label>\n          <Form.Control\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          <Form.Label>Content:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            value={content}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            onChange={(e) => setContent(e.target.value)}\n          />\n          {info || \"\"}\n          {shouldHide ? (\n            <span style={{ color: \"red\" }}>\n              The image chosen will cause the page to automatically be hidden.\n              If you would like to not have this happen, change or remove the\n              image.\n            </span>\n          ) : (\n            \"\"\n          )}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              title\n                ? content\n                  ? createNode()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Content cannot be empty!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>Title cannot be empty!</span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Create Page!\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CreateNodeModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport SearchPage from \"../Node/SearchPage\";\n\nimport CreateNodeModal from \"./CreateNodeModal\";\n\nimport { mutation_call, escape, palette } from \"../index\";\n\nconst SuggestChoiceModal = (props) => {\n  const { loggedInAs, fromNode, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [toPage, setToPage] = useState(\"\");\n  const [suggestAction, setSuggestAction] = useState(\"\");\n  const [showingModal, showModal] = useState(\"\");\n\n  const createNewAction = (toID) => {\n    if (!toID) {\n      showModal(\n        <CreateNodeModal\n          loggedInAs={loggedInAs}\n          picture={fromNode.pictureURL}\n          pictureUnsafe={fromNode.pictureUnsafe}\n          callback={(node) => createNewAction(node.ID)}\n          close={() => showModal(undefined)}\n        />\n      );\n    } else {\n      const escaped = escape(suggestAction);\n      mutation_call(\n        \"suggestChoice\",\n        {\n          accountScreenName: loggedInAs.screenName,\n          fromID: fromNode.ID,\n          action: escaped,\n          toID,\n        },\n        { ID: 0 },\n        () => {\n          window.location.reload(false);\n        }\n      );\n    }\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Suggesting New Choice</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Action:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={suggestAction}\n            onChange={(e) => setSuggestAction(e.target.value)}\n          />\n          <Form.Label>Go to Page:</Form.Label>\n          <SearchPage callback={(nodeID) => setToPage(nodeID)} toID={toPage} />\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              suggestAction\n                ? createNewAction(toPage)\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Action cannot be empty!\n                    </span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Submit New Choice\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default SuggestChoiceModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport SearchPage from \"../Node/SearchPage\";\n\nimport CreateNodeModal from \"./CreateNodeModal\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nconst EditChoiceModal = (props) => {\n  const { choice, loggedInAs, fromNode, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [toPage, setToPage] = useState(choice.to.ID);\n  const [suggestAction, setSuggestAction] = useState(choice.action);\n  const [showingModal, showModal] = useState(\"\");\n  const [hidden, setHidden] = useState(choice.hidden);\n\n  const editChoice = (toID) => {\n    if (!toID) {\n      showModal(\n        <CreateNodeModal\n          loggedInAs={loggedInAs}\n          picture={fromNode.pictureURL}\n          callback={(node) => editChoice(node.ID)}\n          close={() => showModal(undefined)}\n        />\n      );\n    } else {\n      const escaped = escape(suggestAction);\n      mutation_call(\n        \"editSuggestion\",\n        {\n          choiceID: choice.ID,\n          action: escaped,\n          toID: toID,\n          ...(hidden !== undefined ? { hidden } : {}),\n        },\n        { ID: 0 },\n        () => {\n          window.location.reload(false);\n        }\n      );\n    }\n  };\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Choice</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Action:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={suggestAction}\n            onChange={(e) => setSuggestAction(e.target.value)}\n          ></Form.Control>\n          <Form.Label>Go to Page:</Form.Label>\n          <SearchPage callback={(nodeID) => setToPage(nodeID)} toID={toPage} />\n\n          {loggedInAs && loggedInAs.isAdmin ? (\n            <>\n              <Form.Label>Admin Controls:</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                checked={hidden || false}\n                onChange={(e) => setHidden(e.target.checked)}\n                label=\"Choice should be hidden\"\n                id=\"hide\"\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              suggestAction\n                ? editChoice(toPage)\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Action cannot be empty!\n                    </span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Choice\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default EditChoiceModal;\n","import React, { useState, useEffect, createRef, forceUpdate } from \"react\";\n\nimport {\n  CardColumns,\n  Card,\n  DropdownButton,\n  Dropdown,\n  Alert,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport EditChoiceModal from \"../Modals/EditChoiceModal\";\n\nimport { mutation_call, query_call, palette } from \"../index\";\n\nconst ChoiceColumns = (props) => {\n  const { node, loggedInAs, canon } = props;\n\n  const [choices, setChoices] = useState(\n    (canon ? node.canonChoices : node.nonCanonChoices).map(() => null)\n  );\n\n  const refs = [];\n\n  const [showingModal, showModal] = useState(undefined);\n\n  const like = (idx) => {\n    if (loggedInAs) {\n      const choice = choices[idx];\n\n      if (choice.liked) {\n        choice.liked = false;\n        choice.score--;\n      } else {\n        choice.liked = true;\n        choice.score++;\n        if (choice.disliked) choice.score++;\n      }\n      choice.disliked = false;\n      setChoices([\n        ...choices.slice(0, idx),\n        choice,\n        ...choices.slice(idx + 1, choices.length),\n      ]);\n\n      mutation_call(\n        \"likeSuggestion\",\n        { accountScreenName: loggedInAs.screenName, choiceID: choice.ID },\n        { ID: 0 },\n        () => {}\n      );\n    }\n  };\n\n  const dislike = (idx) => {\n    if (loggedInAs) {\n      const choice = choices[idx];\n\n      if (choice.disliked) {\n        choice.disliked = false;\n        choice.score++;\n      } else {\n        choice.disliked = true;\n        choice.score--;\n        if (choice.liked) choice.score--;\n      }\n      choice.liked = false;\n      setChoices([\n        ...choices.slice(0, idx),\n        choice,\n        ...choices.slice(idx + 1, choices.length),\n      ]);\n\n      mutation_call(\n        \"dislikeSuggestion\",\n        { accountScreenName: loggedInAs.screenName, choiceID: choice.ID },\n        { ID: 0 },\n        () => {}\n      );\n    }\n  };\n\n  const makeCanon = (choiceID) => {\n    mutation_call(\"makeCanon\", { choiceID: choiceID }, { ID: 0 }, () =>\n      setTimeout(() => window.location.reload(false), 100)\n    );\n  };\n\n  const makeNonCanon = (choiceID) => {\n    mutation_call(\"makeNonCanon\", { choiceID: choiceID }, { ID: 0 }, () =>\n      setTimeout(() => window.location.reload(false), 100)\n    );\n  };\n\n  const removeSuggestion = (choiceID) => {\n    mutation_call(\"removeSuggestion\", { choiceID: choiceID }, {}, () =>\n      window.location.reload(false)\n    );\n  };\n\n  const reportSuggestion = (choiceID) => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Choice\",\n        reportingObjectID: choiceID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported action!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (\n      choices.length !==\n        (canon ? node.canonChoices : node.nonCanonChoices).length ||\n      choices.some(\n        (choice, i) =>\n          choice !== null &&\n          choice.ID !== (canon ? node.canonChoices : node.nonCanonChoices)[i].ID\n      )\n    )\n      setChoices(\n        (canon ? node.canonChoices : node.nonCanonChoices).map(() => null)\n      );\n\n    if (choices.some((choice) => choice === null)) {\n      (canon ? node.canonChoices : node.nonCanonChoices).forEach(\n        (choiceID, i) => {\n          if (choices[i] !== null) return;\n\n          query_call(\n            \"getChoice\",\n            { ID: choiceID.ID },\n            {\n              ID: 0,\n              action: 0,\n              likedBy: { screenName: 0 },\n              dislikedBy: { screenName: 0 },\n              score: 0,\n              suggestedBy: {\n                hidden: 0,\n                screenName: 0,\n                profilePicURL: 0,\n              },\n              hidden: 0,\n              to: {\n                owner: {\n                  screenName: 0,\n                  hidden: 0,\n                },\n                ID: 0,\n                hidden: 0,\n              },\n              from: {\n                ID: 0,\n              },\n            },\n            (choice) => {\n              choice.liked =\n                loggedInAs &&\n                choice.likedBy.some(\n                  (account) => account.screenName === loggedInAs.screenName\n                );\n              choice.disliked =\n                loggedInAs &&\n                choice.dislikedBy.some(\n                  (account) => account.screenName === loggedInAs.screenName\n                );\n              choices[i] = choice;\n              showModal({});\n            }\n          );\n        }\n      );\n    }\n  });\n\n  if (!choices)\n    return (\n      <Alert variant={loggedInAs && loggedInAs.unsafeMode ? \"dark\" : \"light\"}>\n        <title>Loading Page...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n\n  if (choices.length > 0)\n    return (\n      <CardColumns>\n        {choices.map((choice, idx) => {\n          refs.push(createRef());\n          if (choice === null)\n            return (\n              <Card\n                className=\"mt-2 text-center\"\n                style={{\n                  boxShadow: `0 0 3px ${palette[0]}`,\n                  overflow: \"hidden\",\n                  ...(loggedInAs && loggedInAs.unsafeMode\n                    ? { backgroundColor: palette[4] }\n                    : {}),\n                }}\n                ref={refs[idx]}\n              >\n                <Card.Body style={{ paddingTop: \"2em\" }}>\n                  <Card.Title>Loading...</Card.Title>\n                </Card.Body>\n              </Card>\n            );\n\n          if (\n            (choice.hidden || choice.suggestedBy.hidden) &&\n            (!loggedInAs ||\n              (!loggedInAs.unsafeMode &&\n                loggedInAs.screenName !== choice.suggestedBy.screenName &&\n                (loggedInAs.screenName !== node.owner.screenName || !canon)))\n          )\n            return <span />;\n\n          const disabled =\n            !choice.to ||\n            ((choice.to.hidden || choice.to.owner.hidden) &&\n              (!loggedInAs ||\n                (!loggedInAs.unsafeMode &&\n                  choice.to.owner.screenName !== loggedInAs.screenName)));\n\n          return (\n            <Card\n              className=\"text-center mt-2\"\n              style={{\n                boxShadow: `0 0 3px ${palette[0]}`,\n                overflow: \"hidden\",\n                ...(loggedInAs && loggedInAs.unsafeMode\n                  ? { backgroundColor: palette[4] }\n                  : {}),\n              }}\n              ref={refs[idx]}\n            >\n              <a\n                href={!disabled ? `/#/node/${choice.to.ID}` : \"\"}\n                onClick={() =>\n                  window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n                }\n                style={{\n                  pointerEvents: !disabled ? \"auto\" : \"none\",\n                  color: !disabled\n                    ? loggedInAs && loggedInAs.unsafeMode\n                      ? palette[0]\n                      : palette[2]\n                    : \"grey\",\n                }}\n                onMouseEnter={(e) => {\n                  refs[idx].current.style.boxShadow = `0 0 6px ${palette[2]}`;\n                }}\n                onMouseLeave={(e) => {\n                  refs[idx].current.style.boxShadow = `0 0 3px ${palette[0]}`;\n                }}\n              >\n                <Card.Body style={{ cursor: \"pointer\", paddingTop: \"2em\" }}>\n                  <Card.Title>{choice.action}</Card.Title>\n                </Card.Body>\n              </a>\n              {choice.hidden || choice.suggestedBy.hidden ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This action is hidden, because it has been marked as\n                      unsafe! You can see it because you are{\" \"}\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n              {!choice.hidden &&\n              choice.to &&\n              (choice.to.hidden || choice.to.owner.hidden) &&\n              !disabled ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page this action leads to is hidden, because it has\n                      been marked as unsafe! You will be able to see it because\n                      you are\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n              <DropdownButton\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                style={{\n                  position: \"absolute\",\n                  top: \"0px\",\n                  right: \"0px\",\n                }}\n                size=\"sm\"\n                drop=\"right\"\n                title={<span class=\"fa\">&#xf013;</span>}\n              >\n                <Dropdown.Item\n                  disabled={\n                    !loggedInAs ||\n                    (loggedInAs.screenName !== node.owner.screenName &&\n                      !loggedInAs.isAdmin)\n                  }\n                  onClick={() =>\n                    canon ? makeNonCanon(choice.ID) : makeCanon(choice.ID)\n                  }\n                >\n                  Make {canon ? \"Nonc\" : \"C\"}anon\n                </Dropdown.Item>\n                <Dropdown.Item\n                  disabled={\n                    !loggedInAs ||\n                    (loggedInAs.screenName !== choice.suggestedBy.screenName &&\n                      loggedInAs.screenName !== node.owner.screenName &&\n                      !loggedInAs.isAdmin)\n                  }\n                  onClick={() => removeSuggestion(choice.ID)}\n                >\n                  Delete\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() =>\n                    showModal(\n                      <EditChoiceModal\n                        choice={choice}\n                        loggedInAs={loggedInAs}\n                        fromNode={node}\n                        close={() => showModal(undefined)}\n                      />\n                    )\n                  }\n                  disabled={\n                    !(\n                      loggedInAs &&\n                      (loggedInAs.isAdmin ||\n                        (canon &&\n                          loggedInAs.screenName === node.owner.screenName) ||\n                        (!canon &&\n                          loggedInAs.screenName ===\n                            choice.suggestedBy.screenName))\n                    )\n                  }\n                >\n                  Edit\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => reportSuggestion(choice.ID)}>\n                  Report\n                </Dropdown.Item>\n              </DropdownButton>\n              <Card.Footer\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5] } }\n                  : {})}\n              >\n                <OverlayTrigger\n                  overlay={\n                    !loggedInAs ? (\n                      <Tooltip id=\"tooltip-disabled\">\n                        You must be signed in!\n                      </Tooltip>\n                    ) : (\n                      <p />\n                    )\n                  }\n                  style={{ width: \"100%\" }}\n                >\n                  <span>\n                    <a\n                      href={`/#/node/${node.ID}`}\n                      style={{\n                        pointerEvents: loggedInAs ? \"auto\" : \"none\",\n                        color: loggedInAs\n                          ? choice.disliked\n                            ? \"red\"\n                            : loggedInAs.unsafeMode\n                            ? \"white\"\n                            : \"black\"\n                          : \"grey\",\n                      }}\n                      className=\"fa fa-thumbs-down\"\n                      onClick={() => dislike(idx)}\n                    ></a>\n                  </span>\n                </OverlayTrigger>\n                {\" \" + (choice.score || 0) + \" \"}\n                <OverlayTrigger\n                  overlay={\n                    !loggedInAs ? (\n                      <Tooltip id=\"tooltip-disabled\">\n                        You must be signed in!\n                      </Tooltip>\n                    ) : (\n                      <p />\n                    )\n                  }\n                  style={{ width: \"100%\" }}\n                >\n                  <span>\n                    <a\n                      href={`/#/node/${node.ID}`}\n                      style={{\n                        pointerEvents: loggedInAs ? \"auto\" : \"none\",\n                        color: loggedInAs\n                          ? choice.liked\n                            ? \"green\"\n                            : loggedInAs.unsafeMode\n                            ? \"white\"\n                            : \"black\"\n                          : \"grey\",\n                      }}\n                      className=\"fa fa-thumbs-up\"\n                      onClick={() => like(idx)}\n                    ></a>\n                  </span>\n                </OverlayTrigger>\n                <br />\n                <small className=\"text-muted\">\n                  Suggested By:{\" \"}\n                  <a\n                    href={`/#/account/${choice.suggestedBy.screenName}`}\n                    style={{\n                      color:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[0]\n                          : palette[2],\n                    }}\n                  >\n                    <img\n                      src={\n                        choice.suggestedBy.profilePicURL\n                          ? choice.suggestedBy.profilePicURL\n                          : process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\"\n                      }\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {choice.suggestedBy.screenName}\n                  </a>\n                </small>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n        {showingModal && Object.keys(showingModal).length > 0\n          ? showingModal\n          : \"\"}\n      </CardColumns>\n    );\n\n  return null;\n};\n\nexport default ChoiceColumns;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Container,\n  Button,\n  Alert,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\n\nimport PictureModal from \"../Modals/PictureModal\";\nimport EditNodeModal from \"../Modals/EditNodeModal\";\nimport SuggestChoiceModal from \"../Modals/SuggestChoiceModal\";\n\nimport ChoiceColumns from \"./ChoiceColumns\";\n\nimport { escape, palette, query_call, mutation_call } from \"../index\";\n\nconst Node = (props) => {\n  const { history, match, loggedInAs } = props;\n  const [showingModal, showModal] = useState(undefined);\n  const [node, setNode] = useState(undefined);\n  const BLURAMOUNT = 40;\n\n  const reportNode = () => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Node\",\n        reportingObjectID: node.ID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported page!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  useEffect(() => {\n    const pageID = escape(match.params.id);\n\n    if (!node || pageID !== node.ID) {\n      if (node !== undefined) {\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        setTimeout(() => setNode(undefined), 500);\n      }\n      query_call(\n        \"getNode\",\n        { ID: pageID },\n        {\n          hidden: 0,\n          pictureURL: 0,\n          pictureUnsafe: 0,\n          fgColor: 0,\n          bgColor: 0,\n          ID: 0,\n          title: 0,\n          content: 0,\n          views: 0,\n          owner: { screenName: 0, profilePicURL: 0, hidden: 0 },\n          canonChoices: {\n            ID: 0,\n          },\n          nonCanonChoices: {\n            ID: 0,\n          },\n        },\n        (returnNode) => {\n          if (returnNode) setNode(returnNode);\n          else setNode(null);\n        }\n      );\n    }\n  });\n\n  if (node === undefined) {\n    return (\n      <Alert variant={loggedInAs && loggedInAs.unsafeMode ? \"dark\" : \"light\"}>\n        <title>Loading Page...</title>\n        <Alert.Heading>Loading Page...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (node === null)\n    return (\n      <Alert variant=\"danger\">\n        <title>Error! Node: {match.params.id}</title>\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  if (\n    node.hidden &&\n    (!loggedInAs ||\n      (node.owner.screenName !== loggedInAs.screenName &&\n        !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>Crowdventure! - {node.title}</title>\n        <meta property=\"og:title\" content={`Crowdventure! - ${node.title}`} />\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the content has\n          been deemed unsafe. If you would like to see it, log in and turn on{\" \"}\n          <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  if (\n    node.owner.hidden &&\n    (!loggedInAs ||\n      (node.owner.screenName !== loggedInAs.screenName &&\n        !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>Crowdventure! - {node.title}</title>\n        <meta property=\"og:title\" content={`Crowdventure! - ${node.title}`} />\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the author has\n          been flagged as unsafe for the general public. If you would like to\n          see it, log in and turn on <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>Crowdventure! - {node.title}</title>\n      <meta property=\"og:title\" content={`Crowdventure! - ${node.title}`} />\n      {(node.hidden || node.owner.hidden) &&\n      loggedInAs &&\n      node.owner.screenName === loggedInAs.screenName &&\n      !loggedInAs.unsafeMode ? (\n        <Alert\n          variant=\"danger\"\n          dismissible\n          onClose={() => {\n            setNode({ ...node, hidden: false });\n          }}\n        >\n          <Alert.Heading>Unsafe!</Alert.Heading>\n          <p>\n            This page has been hidden from general users, because the content\n            has been deemed unsafe. Users in unsafe mode can see this page and\n            its content. Since you own this page, you can see it. If you believe\n            this page should be considered safe, click <a href=\"\">Here</a>.\n          </p>\n        </Alert>\n      ) : (\n        \"\"\n      )}\n\n      <h1 class=\"display-4 text-center\">{node.title}</h1>\n      {node.pictureURL ? (\n        <>\n          <meta property=\"og:image\" content={node.pictureURL} />\n          <img\n            src={node.pictureURL}\n            onLoad={(e) => {\n              e.target.style.display = \"block\";\n            }}\n            onError={(e) => {\n              e.target.style.display = \"none\";\n            }}\n            style={{\n              display: \"block\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              padding: \"1px\",\n              border: \"1px solid #eee\",\n              \"border-radius\": \"8px\",\n              width: \"90%\",\n              maxHeight: \"30vh\",\n              \"object-fit\": \"cover\",\n              cursor: \"pointer\",\n              ...(node.pictureUnsafe\n                ? {\n                    \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                    filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                  }\n                : {}),\n            }}\n            onClick={() =>\n              showModal(\n                <PictureModal\n                  loggedInAs={loggedInAs}\n                  pictureURL={node.pictureURL}\n                  title={node.title}\n                  close={() => showModal(undefined)}\n                />\n              )\n            }\n          />\n        </>\n      ) : (\n        \"\"\n      )}\n\n      <br />\n      <Container>\n        {node.content.split(\"\\n\").map((line) => (\n          <p style={{ textIndent: \"5%\" }}>{line}</p>\n        ))}\n      </Container>\n      <hr\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n          : {})}\n      />\n      <Container\n        className=\"row\"\n        style={{ paddingRight: \"0px\", paddingBottom: \"5px\" }}\n      >\n        <div class=\"col\">\n          <h3 class=\"text-muted\">Choices:</h3>\n        </div>\n        <div class=\"col\" style={{ paddingRight: \"0px\" }}>\n          <Button\n            onClick={() => {\n              history.back();\n            }}\n            size=\"lg\"\n            className=\"float-right\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Go back!\n          </Button>\n        </div>\n      </Container>\n      {node.canonChoices.length ? (\n        <ChoiceColumns node={node} loggedInAs={loggedInAs} canon={true} />\n      ) : (\n        <p className=\"text-muted\">\n          By decree of <strong>{node.owner.screenName}</strong>, this journey\n          ends here.\n        </p>\n      )}\n\n      <hr\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n          : {})}\n      />\n\n      <Container className=\"row\" style={{ paddingRight: \"0px\" }}>\n        <div class=\"col align-bottom\">\n          <h3 class=\"align-bottom text-muted\">Other options:</h3>\n        </div>\n        <div class=\"col text-right\" style={{ paddingRight: \"0px\" }}>\n          <small class=\"text-muted\">\n            Author:{\" \"}\n            <a\n              href={`/#/account/${node.owner.screenName}`}\n              style={{\n                color:\n                  loggedInAs && loggedInAs.unsafeMode ? palette[0] : palette[2],\n              }}\n            >\n              <img\n                src={\n                  node.owner.profilePicURL\n                    ? node.owner.profilePicURL\n                    : process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\"\n                }\n                onError={(e) => {\n                  e.target.src =\n                    process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\";\n                }}\n                style={{\n                  border: \"1px solid #bbb\",\n                  height: \"2em\",\n                  width: \"2em\",\n                  \"object-fit\": \"cover\",\n                  \"border-radius\": \"50%\",\n                }}\n              />{\" \"}\n              {node.owner.screenName}{\" \"}\n            </a>{\" \"}\n            <br />\n            Views: {node.views}\n          </small>\n          {loggedInAs &&\n          (node.owner.screenName === loggedInAs.screenName ||\n            loggedInAs.isAdmin) ? (\n            <p>\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={() => {\n                  showModal(\n                    <EditNodeModal\n                      close={() => showModal(undefined)}\n                      node={node}\n                      loggedInAs={loggedInAs}\n                    />\n                  );\n                }}\n              >\n                Edit Page\n              </Button>\n            </p>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Container>\n      <p />\n      <OverlayTrigger\n        overlay={\n          !loggedInAs ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => {\n              showModal(\n                <SuggestChoiceModal\n                  loggedInAs={loggedInAs}\n                  fromNode={node}\n                  close={() => showModal(undefined)}\n                />\n              );\n            }}\n            disabled={!loggedInAs}\n            style={{\n              width: \"100%\",\n              pointerEvents: loggedInAs ? \"auto\" : \"none\",\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Suggest New Choice\n          </Button>\n        </span>\n      </OverlayTrigger>\n      <p />\n\n      {node.nonCanonChoices.length ? (\n        <ChoiceColumns node={node} loggedInAs={loggedInAs} canon={false} />\n      ) : (\n        <p className=\"text-muted\">\n          There are currently no options! You can help expand the story by\n          adding to it!\n        </p>\n      )}\n\n      <Container>\n        <Button\n          style={{ marginRight: \"0\", marginLeft: \"auto\", display: \"block\" }}\n          variant=\"danger\"\n          size=\"sm\"\n          onClick={reportNode}\n        >\n          Report Page\n        </Button>\n      </Container>\n\n      {showingModal ? showingModal : \"\"}\n    </Container>\n  );\n};\n\nexport default Node;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { mutation_call, query_call, escape, palette } from \"../index\";\n\nimport ConfirmModal from \"./ConfirmModal\";\n\nimport Cookies from \"universal-cookie\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst EditAccountModal = (props) => {\n  const {\n    screenName,\n    bio,\n    profilePicture,\n    close,\n    account,\n    setAccount,\n    setRedirect,\n    loggedInAs,\n  } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [showingModal, showModal] = useState(undefined);\n\n  const [bioField, setBioField] = useState(bio || \"\");\n  const [profilePictureField, setProfilePictureField] = useState(\n    profilePicture || \"\"\n  );\n  const [nameField, setNameField] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n  const [hidden, setHidden] = useState(account.hidden);\n  const [isAdmin, setAdmin] = useState(account.isAdmin);\n\n  const editPage = (checkedIfExists = false) => {\n    if (pass1 && pass1 !== pass2) {\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n      return;\n    }\n    const esBio = bioField.length > 0 ? `\"\"${escape(bioField, true)}\"\"` : null;\n    const esPicture =\n      profilePictureField.length > 0 ? escape(profilePictureField) : null;\n\n    const params = { screenName };\n    if (bioField !== bio) params.bio = esBio;\n    if (profilePictureField !== profilePicture)\n      params.profilePicURL = esPicture;\n    if (nameField !== screenName && !nameField.match(/^\\s*$/)) {\n      if (!checkedIfExists) {\n        const esScreenName = escape(nameField);\n        query_call(\n          \"getAccount\",\n          { screenName: esScreenName },\n          { screenName: 0 },\n          (res) => {\n            if (res) {\n              setInfo(\n                <div style={{ color: \"red\" }}>That account already exists!</div>\n              );\n            } else {\n              editPage(true);\n            }\n          }\n        );\n        return;\n      } else {\n        params.newScreenName = escape(nameField);\n      }\n    }\n    if (pass1) params.newPassword = escape(pass1);\n    if (hidden !== undefined) params.hidden = hidden;\n    if (isAdmin !== undefined) params.isAdmin = isAdmin;\n\n    mutation_call(\n      \"editAccount\",\n      params,\n      {\n        bio: 0,\n        screenName: 0,\n        profilePicURL: 0,\n        totalNodeViews: 0,\n        totalSuggestionScore: 0,\n        hidden: 0,\n        isAdmin: 0,\n        featuredNodes: {\n          owner: { screenName: 0, profilePicURL: 0 },\n          featured: 0,\n          hidden: 0,\n          ID: 0,\n          title: 0,\n          views: 0,\n          pictureURL: 0,\n          pictureUnsafe: 0,\n        },\n        nodes: {\n          owner: { screenName: 0, profilePicURL: 0 },\n          featured: 0,\n          hidden: 0,\n          ID: 0,\n          title: 0,\n          content: 0,\n          views: 0,\n          pictureURL: 0,\n          pictureUnsafe: 0,\n        },\n      },\n      // I shouldnt need any of the parameters if it just reloads the page\n      (res) => {\n        if (params.newScreenName) {\n          setRedirect(<Redirect to={`/account/${params.newScreenName}`} />);\n          new Cookies().set(\"account\", params.newScreenName, { path: \"/\" });\n          window.location.reload(false);\n        }\n        if (params.isAdmin !== account.isAdmin) {\n          window.location.reload(false);\n        }\n        setAccount(res);\n        setShow(false);\n        close();\n      }\n    );\n  };\n\n  const deleteAccount = () => {\n    new Cookies().set(\"account\", \"\", { path: \"/\" });\n    mutation_call(\"deleteAccount\", { screenName }, {}, () => {\n      setRedirect(<Redirect to=\"/\" />);\n      window.location.reload(false);\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setPass1(\"\");\n      setNameField(\"\");\n    }, 1000);\n  }, []);\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Account</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {profilePicture ? (\n            <img\n              src={profilePicture}\n              alt={screenName + \"'s Profile Pic\"}\n              onError={(e) => {\n                e.target.style.display = \"none\";\n                setInfo(\n                  <span style={{ color: \"red\" }}>Picture not found!</span>\n                );\n              }}\n              style={{\n                opacity: profilePicture === profilePictureField ? 1 : 0.2,\n                width: \"100%\",\n                \"object-fit\": \"contain\",\n                padding: \"1px\",\n                borderRadius: \"8px\",\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n          <Form.Label>Profile Pic URL:</Form.Label>\n          <Form.Control\n            value={profilePictureField}\n            onChange={(e) => setProfilePictureField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          <Form.Label>Bio:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            value={bioField}\n            onChange={(e) => setBioField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n\n          <Form.Label>Change your screen name:</Form.Label>\n          <Form.Control\n            placeholder={screenName}\n            value={nameField}\n            onChange={(e) => setNameField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n\n          <Form.Label>Change your password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"••••••••\"\n            value={pass1}\n            onChange={(e) => setPass1(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          {pass1 ? (\n            <>\n              <Form.Label>Confirm password:</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"••••••••\"\n                value={pass2}\n                onChange={(e) => setPass2(e.target.value)}\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                  : {})}\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n          {loggedInAs && loggedInAs.isAdmin ? (\n            <>\n              <Form.Label>Admin Controls:</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                checked={hidden || false}\n                onChange={(e) => setHidden(e.target.checked)}\n                label=\"Account should be hidden\"\n                id=\"hide\"\n              />\n              <Form.Check\n                type=\"checkbox\"\n                checked={isAdmin || false}\n                onChange={(e) => setAdmin(e.target.checked)}\n                label=\"Account is an admin\"\n                id=\"adm\"\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() => editPage()}\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Account\n          </Button>\n          <Button\n            onClick={() => {\n              showModal(\n                <ConfirmModal\n                  loggedInAs={loggedInAs}\n                  title=\"Delete Account\"\n                  content=\"This will erase all content created by this account, including all pages and suggested choices, and liked and disliked content. Are you sure you wish to continue?\"\n                  onConfirm={() => deleteAccount()}\n                  close={() => {\n                    showModal(undefined);\n                  }}\n                />\n              );\n            }}\n            variant=\"danger\"\n          >\n            Delete Account\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\nexport default EditAccountModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { palette, mutation_call, escape } from \"../index\";\n\nconst MessageModal = (props) => {\n  const { account, close, loggedInAs } = props;\n  const [message, setMessage] = useState(\"\");\n  const [show, setShow] = useState(true);\n\n  const onConfirm = () => {};\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Send message to {account.screenName}</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Message:</Form.Label>\n          <Form.Control\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n        </Modal.Body>\n      </Form>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            if (escape(message).length > 0) {\n              mutation_call(\n                \"createNotification\",\n                {\n                  accountScreenName: account.screenName,\n                  content: `${\n                    loggedInAs.screenName\n                  } sent you a message: '${escape(message)}'`,\n                  link: `/account/${loggedInAs.screenName}`,\n                },\n                { time: 0 },\n                (res) => {\n                  if (!res.err) {\n                    alert(\"Message sent!\");\n                    close();\n                  }\n                }\n              );\n            }\n          }}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Send!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default MessageModal;\n","import React, { useState, createRef } from \"react\";\n\nimport { mutation_call, palette } from \"./index\";\n\nimport {\n  CardColumns,\n  Card,\n  OverlayTrigger,\n  Tooltip,\n  DropdownButton,\n  Dropdown,\n  Alert,\n  Container,\n} from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport ConfirmModal from \"./Modals/ConfirmModal\";\n\nconst NodeViewer = (props) => {\n  const { nodes, loggedInAs } = props;\n\n  const [showingModal, showModal] = useState(undefined);\n  const refs = [];\n  const BLURAMOUNT = 20;\n\n  const reportNode = (nodeID) => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Node\",\n        reportingObjectID: nodeID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported page!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  const hidePage = (node) => {\n    mutation_call(\n      \"editNode\",\n      { nodeID: node.ID, hidden: !node.hidden },\n      { title: 0 },\n      () => window.location.reload(false)\n    );\n  };\n\n  const featurePage = (node, alreadyFeatured) => {\n    mutation_call(\n      \"editNode\",\n      { nodeID: node.ID, featured: !alreadyFeatured },\n      { title: 0 },\n      () => window.location.reload(false)\n    );\n  };\n\n  const deletePage = (node) => {\n    mutation_call(\"deleteNode\", { nodeID: node.ID }, 0, () => {\n      window.location.reload(false);\n    });\n  };\n\n  return nodes ? (\n    <CardColumns style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n      <Container />\n      {nodes\n        .filter(\n          (node) =>\n            (loggedInAs &&\n              (loggedInAs.unsafeMode ||\n                loggedInAs.screenName === node.owner.screenName)) ||\n            !node.hidden\n        )\n        .map((node, i) => {\n          refs.push(createRef());\n          return (\n            <Card\n              className=\"mt-2\"\n              style={{\n                boxShadow: `0 0 3px ${palette[0]}`,\n                overflow: \"hidden\",\n                ...(loggedInAs && loggedInAs.unsafeMode\n                  ? { backgroundColor: palette[4] }\n                  : {}),\n              }}\n              ref={refs[i]}\n            >\n              <a\n                href={`/#/node/${node.ID}`}\n                style={{\n                  color:\n                    loggedInAs && loggedInAs.unsafeMode\n                      ? palette[0]\n                      : palette[2],\n                }}\n                onMouseEnter={(e) => {\n                  refs[i].current.style.boxShadow = `0 0 6px ${palette[2]}`;\n                }}\n                onMouseLeave={(e) => {\n                  refs[i].current.style.boxShadow = `0 0 3px ${palette[0]}`;\n                }}\n              >\n                {node.pictureURL ? (\n                  <Card.Header\n                    style={{\n                      backgroundColor:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[5]\n                          : \"white\",\n                      padding: \"1px\",\n                    }}\n                  >\n                    <Card.Img\n                      src={node.pictureURL}\n                      style={{\n                        \"max-height\": \"30vh\",\n                        \"object-fit\": \"cover\",\n                        ...(node.pictureUnsafe\n                          ? {\n                              \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                              filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                            }\n                          : {}),\n                      }}\n                      onError={(e) => {\n                        e.target.parentNode.style.display = \"none\";\n                      }}\n                    />\n                  </Card.Header>\n                ) : (\n                  \"\"\n                )}\n                <Card.Body\n                  className=\"text-center\"\n                  style={{ paddingTop: \"2em\" }}\n                >\n                  <Card.Title>{node.title}</Card.Title>\n                </Card.Body>\n              </a>\n\n              {node.featured && node && node.owner ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page has been starred by {node.owner.screenName}!\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"5px\",\n                      color: \"yellow\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf005;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n\n              {node.hidden ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page is hidden, because it has been marked as unsafe!\n                      You can see it because you are{\" \"}\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: (node.featured ? \"2\" : \"\") + \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n\n              <DropdownButton\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n                size=\"sm\"\n                drop=\"right\"\n                title={<span class=\"fa\">&#xf013;</span>}\n              >\n                {loggedInAs && node.featured !== undefined ? (\n                  <>\n                    <Dropdown.Item\n                      onClick={() => featurePage(node, node.featured)}\n                      disabled={loggedInAs.screenName !== node.owner.screenName}\n                    >\n                      {node.featured ? \"Un-f\" : \"F\"}eature page\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={() =>\n                        showModal(\n                          <ConfirmModal\n                            loggedInAs={loggedInAs}\n                            close={() => showModal(undefined)}\n                            onConfirm={() => deletePage(node)}\n                            title=\"Delete Page\"\n                            content=\"This will erase all suggested choices of this page, and their associated scores. This will NOT delete sub-pages of this page. Are you sure you wish to continue?\"\n                          />\n                        )\n                      }\n                      disabled={loggedInAs.screenName !== node.owner.screenName}\n                    >\n                      Delete\n                    </Dropdown.Item>\n                    <Dropdown.Item disabled>Make Private</Dropdown.Item>\n                    <Dropdown.Divider />\n                  </>\n                ) : (\n                  \"\"\n                )}\n                <Dropdown.Item onClick={() => reportNode(node.ID)}>\n                  Report\n                </Dropdown.Item>\n                {loggedInAs && loggedInAs.isAdmin ? (\n                  <>\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={() => hidePage(node)}>\n                      {node.hidden ? \"Un-h\" : \"H\"}ide page\n                    </Dropdown.Item>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </DropdownButton>\n              <Card.Footer\n                className=\"text-muted text-center\"\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5] } }\n                  : {})}\n              >\n                <small>\n                  Author:{\" \"}\n                  <a\n                    href={`/#/account/${node.owner.screenName}`}\n                    style={{\n                      color:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[0]\n                          : palette[2],\n                    }}\n                  >\n                    <img\n                      src={\n                        node.owner.profilePicURL\n                          ? node.owner.profilePicURL\n                          : process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\"\n                      }\n                      alt={node.owner.screenName + \" Profile Pic\"}\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {node.owner.screenName}\n                  </a>\n                  <br />\n                  Views:{\" \" + node.views}\n                </small>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n      {showingModal || \"\"}\n    </CardColumns>\n  ) : (\n    <Alert variant={loggedInAs && loggedInAs.unsafeMode ? \"dark\" : \"light\"}>\n      <Alert.Heading>Loading Page...</Alert.Heading>\n    </Alert>\n  );\n};\n\nexport default NodeViewer;\n","import React, { useState, useEffect } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport { Container, Button, Alert, Form } from \"react-bootstrap\";\n\nimport { escape, query_call, palette, mutation_call } from \"./index\";\nimport CreateNodeModal from \"./Modals/CreateNodeModal\";\nimport EditAccountModal from \"./Modals/EditAccountModal\";\nimport PictureModal from \"./Modals/PictureModal\";\nimport MessageModal from \"./Modals/MessageModal\";\n\nimport NodeViewer from \"./NodeViewer\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst Account = (props) => {\n  const { loggedInAs, setLoggedInAs, match } = props;\n\n  const [redirect, setRedirect] = useState(undefined);\n  const [account, setAccount] = useState(undefined);\n  const [showingModal, showModal] = useState(undefined);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchedNodes, setSearchedNodes] = useState([]);\n\n  const reportAccount = () => {\n    if (account)\n      mutation_call(\n        \"createFeedback\",\n        {\n          ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n          info: \"This is inappropriate\",\n          reportingObjectType: \"Account\",\n          reportingObjectID: account.screenName,\n        },\n        { info: 0, reporting: 0 },\n        () => {\n          alert(\"Successfully reported account!\");\n          window.location.reload(false);\n        }\n      );\n  };\n\n  useEffect(() => {\n    const pageID = escape(match.params.id);\n    if (!account || pageID !== account.screenName) {\n      query_call(\n        \"getAccount\",\n        { screenName: pageID },\n        {\n          bio: 0,\n          screenName: 0,\n          profilePicURL: 0,\n          totalNodeViews: 0,\n          totalSuggestionScore: 0,\n          hidden: 0,\n          isAdmin: 0,\n          featuredNodes: {\n            owner: { screenName: 0, profilePicURL: 0 },\n            featured: 0,\n            hidden: 0,\n            ID: 0,\n            title: 0,\n            views: 0,\n            pictureURL: 0,\n            pictureUnsafe: 0,\n          },\n          nodes: {\n            owner: { screenName: 0, profilePicURL: 0 },\n            featured: 0,\n            hidden: 0,\n            ID: 0,\n            title: 0,\n            content: 0,\n            views: 0,\n            pictureURL: 0,\n            pictureUnsafe: 0,\n          },\n        },\n        (res) => {\n          setAccount(res);\n          setSearchQuery(\"\");\n          setSearchedNodes([]);\n        }\n      );\n    }\n  });\n\n  if (account === undefined) {\n    return (\n      <Alert variant={loggedInAs && loggedInAs.unsafeMode ? \"dark\" : \"light\"}>\n        <title>Loading Account...</title>\n        <Alert.Heading>Loading Account...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (account === null)\n    return (\n      <Alert variant=\"danger\">\n        <title>Error! Account: {match.params.id}</title>\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  if (\n    account.hidden &&\n    (!loggedInAs ||\n      (account.screenName !== loggedInAs.screenName && !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>{account.screenName} on Crowdventure!</title>\n        <meta\n          property=\"og:title\"\n          content={`${account.screenName} on Crowdventure!`}\n        />\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the content has\n          been deemed unsafe. If you would like to see it, log in and turn on{\" \"}\n          <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>{account.screenName} on Crowdventure!</title>\n      <meta\n        property=\"og:title\"\n        content={`${account.screenName} on Crowdventure!`}\n      />\n      {account.hidden &&\n      loggedInAs &&\n      account.screenName === loggedInAs.screenName &&\n      !loggedInAs.unsafeMode ? (\n        <Alert\n          variant=\"danger\"\n          dismissible\n          onClose={() => {\n            setAccount({ ...node, hidden: false });\n          }}\n        >\n          <Alert.Heading>Unsafe!</Alert.Heading>\n          <p>\n            This page has been hidden from general users, because the content\n            has been deemed unsafe. Users in unsafe mode can see this page and\n            its content. Since you own this page, you can see it. If you believe\n            this page should be considered safe, click <a href=\"\">Here</a>.\n          </p>\n        </Alert>\n      ) : (\n        \"\"\n      )}\n\n      <h1>\n        <meta\n          property=\"og:image\"\n          content={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\"\n          }\n        />\n        <img\n          src={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\"\n          }\n          alt={account.screenName + \" Profile Pic\"}\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\";\n          }}\n          style={{\n            border: \"1px solid #bbb\",\n            height: \"3em\",\n            width: \"3em\",\n            \"object-fit\": \"cover\",\n            \"border-radius\": \"50%\",\n            \"margin-right\": \"5px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            showModal(\n              <PictureModal\n                loggedInAs={loggedInAs}\n                title={account.screenName}\n                pictureURL={\n                  account.profilePicURL\n                    ? account.profilePicURL\n                    : process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\"\n                }\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n        />{\" \"}\n        <span className=\"display-4 align-middle\">{account.screenName}</span>\n      </h1>\n\n      {account.bio ||\n      (loggedInAs && loggedInAs.screenName === account.screenName) ? (\n        <Container>\n          {account.bio\n            ? account.bio\n                .split(\"\\n\")\n                .map((line) => <p style={{ textIndent: \"5%\" }}>{line}</p>)\n            : \"\"}\n        </Container>\n      ) : (\n        \"\"\n      )}\n\n      <Container>\n        {loggedInAs &&\n        (loggedInAs.screenName === account.screenName || loggedInAs.isAdmin) ? (\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              showModal(\n                <EditAccountModal\n                  account={account}\n                  loggedInAs={loggedInAs}\n                  screenName={account.screenName}\n                  bio={account.bio}\n                  profilePicture={account.profilePicURL}\n                  setAccount={setAccount}\n                  setRedirect={setRedirect}\n                  close={() => showModal(undefined)}\n                />\n              );\n            }}\n            size=\"sm\"\n          >\n            Edit Account\n          </Button>\n        ) : (\n          \"\"\n        )}{\" \"}\n        {loggedInAs && loggedInAs.screenName === account.screenName ? (\n          <>\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                new Cookies().set(\"account\", \"\", { path: \"/\" });\n                new Cookies().set(\"unsafeMode\", \"false\", { path: \"/\" });\n                window.location.reload(false);\n              }}\n              variant=\"secondary\"\n            >\n              Log out\n            </Button>{\" \"}\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                setRedirect(<Redirect to=\"/notifications\"></Redirect>);\n              }}\n              style={{\n                border: `1px solid ${palette[2]}`,\n                backgroundColor: palette[0],\n              }}\n              onMouseEnter={(e) =>\n                (e.target.style.backgroundColor = palette[2])\n              }\n              onMouseLeave={(e) =>\n                (e.target.style.backgroundColor = palette[0])\n              }\n            >\n              Notifications{\" \"}\n              {loggedInAs.notifications &&\n              loggedInAs.notifications.filter((notif) => !notif.seen).length ? (\n                <span style={{ color: \"red\" }}>\n                  (\n                  {\n                    loggedInAs.notifications.filter((notif) => !notif.seen)\n                      .length\n                  }{\" \"}\n                  New)\n                </span>\n              ) : (\n                \"\"\n              )}\n            </Button>\n          </>\n        ) : loggedInAs ? (\n          <Button\n            size=\"sm\"\n            onClick={() => {\n              showModal(\n                <MessageModal\n                  account={account}\n                  loggedInAs={loggedInAs}\n                  close={() => showModal(undefined)}\n                />\n              );\n            }}\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Send Message\n          </Button>\n        ) : (\n          \"\"\n        )}\n        <div style={{ float: \"right\" }} class=\"text-muted\">\n          Total views: {account.totalNodeViews} Total score:{\" \"}\n          {account.totalSuggestionScore}\n        </div>\n      </Container>\n      <br />\n\n      {loggedInAs && loggedInAs.screenName === account.screenName ? (\n        <Button\n          onClick={() => {\n            showModal(\n              <CreateNodeModal\n                close={() => showModal(undefined)}\n                loggedInAs={loggedInAs}\n                featured={true}\n                callback={(res) =>\n                  setRedirect(<Redirect to={`/node/${res.ID}`} />)\n                }\n              />\n            );\n          }}\n          style={{\n            width: \"100%\",\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Create a New Adventure!\n        </Button>\n      ) : (\n        \"\"\n      )}\n\n      <hr\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n          : {})}\n      />\n\n      <h3>Featured Stories:</h3>\n      <NodeViewer nodes={account.featuredNodes} loggedInAs={loggedInAs} />\n\n      <hr\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n          : {})}\n      />\n\n      <h3>Search All Pages Authored by {account.screenName}:</h3>\n      <Form>\n        <Form.Control\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5], color: \"white\" } }\n            : {})}\n          value={searchQuery}\n          placeholder={\"Search for a page...\"}\n          onChange={(e) => {\n            setSearchQuery(e.target.value);\n            if (e.target.value.length >= 2) {\n              setSearchedNodes([\n                ...account.nodes.filter((node) =>\n                  node.title\n                    .toLowerCase()\n                    .includes(e.target.value.toLowerCase())\n                ),\n                ...account.nodes.filter(\n                  (node) =>\n                    !node.title\n                      .toLowerCase()\n                      .includes(e.target.value.toLowerCase()) &&\n                    node.content\n                      .toLowerCase()\n                      .includes(e.target.value.toLowerCase())\n                ),\n              ]);\n            } else {\n              setSearchedNodes([]);\n            }\n          }}\n        />\n      </Form>\n      {searchQuery ? (\n        <NodeViewer nodes={searchedNodes} loggedInAs={loggedInAs} />\n      ) : (\n        \"\"\n      )}\n\n      <p />\n      <Container>\n        <Button\n          style={{ marginRight: \"0\", marginLeft: \"auto\", display: \"block\" }}\n          variant=\"danger\"\n          size=\"sm\"\n          onClick={reportAccount}\n        >\n          Report Account\n        </Button>\n      </Container>\n\n      {showingModal || \"\"}\n      {redirect || \"\"}\n    </Container>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nimport NodeViewer from \"./NodeViewer\";\nimport Cookies from \"universal-cookie\";\n\nimport { query_call, palette } from \"./index\";\nimport { Redirect } from \"react-router-dom\";\nimport CreateNodeModal from \"./Modals/CreateNodeModal\";\n\nlet lastUnsafe = undefined;\nlet page = 0;\n\nconst Home = (props) => {\n  const { loggedInAs, history } = props;\n\n  const [topNodes, setTopNodes] = useState(undefined);\n  const [recentNodes, setRecentNodes] = useState(undefined);\n  const [showingModal, showModal] = useState(undefined);\n  const [redirect, setRedirect] = useState(undefined);\n\n  const getRecentNodes = () => {\n    query_call(\n      \"recentlyUpdatedNodes\",\n      {\n        pageNum: page,\n        allowHidden:\n          (loggedInAs && loggedInAs.unsafeMode) ||\n          new Cookies().get(\"unsafeMode\") === \"true\" ||\n          false,\n      },\n      {\n        hidden: 0,\n        ID: 0,\n        title: 0,\n        owner: { screenName: 0, profilePicURL: 0 },\n        views: 0,\n        size: 0,\n        pictureURL: 0,\n        pictureUnsafe: 0,\n      },\n      (res) => setRecentNodes(res)\n    );\n  };\n\n  useEffect(() => {\n    const unsafe =\n      (loggedInAs && loggedInAs.unsafeMode) ||\n      new Cookies().get(\"unsafeMode\") === \"true\" ||\n      false;\n    if (!topNodes) {\n      query_call(\n        \"featuredNodes\",\n        {\n          allowHidden:\n            (loggedInAs && loggedInAs.unsafeMode) ||\n            new Cookies().get(\"unsafeMode\") === \"true\" ||\n            false,\n        },\n        {\n          hidden: 0,\n          ID: 0,\n          title: 0,\n          owner: { screenName: 0, profilePicURL: 0 },\n          views: 0,\n          size: 0,\n          pictureURL: 0,\n          pictureUnsafe: 0,\n        },\n        (res) => setTopNodes(res)\n      );\n    }\n    if (!recentNodes) {\n      getRecentNodes();\n    }\n    if (lastUnsafe !== unsafe) {\n      if (lastUnsafe !== undefined) {\n        setTopNodes(undefined);\n        setRecentNodes(undefined);\n      }\n      lastUnsafe = unsafe;\n    }\n  });\n\n  return (\n    <Container>\n      <title>Crowdventure!</title>\n\n      <OverlayTrigger\n        overlay={\n          !loggedInAs ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => {\n              showModal(\n                <CreateNodeModal\n                  featured={true}\n                  loggedInAs={loggedInAs}\n                  close={() => showModal(undefined)}\n                  callback={(res) =>\n                    setRedirect(<Redirect to={`/node/${res.ID}`} />)\n                  }\n                />\n              );\n            }}\n            disabled={!loggedInAs}\n            style={{\n              width: \"100%\",\n              pointerEvents: loggedInAs ? \"auto\" : \"none\",\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Create a New Adventure!\n          </Button>\n        </span>\n      </OverlayTrigger>\n      <p />\n\n      <hr\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n          : {})}\n      />\n      <h3>Featured Stories:</h3>\n      <NodeViewer nodes={topNodes} loggedInAs={loggedInAs} />\n      <hr\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n          : {})}\n      />\n\n      <h3>Recently added or updated:</h3>\n      <NodeViewer nodes={recentNodes} loggedInAs={loggedInAs} />\n      <div style={{ marginBottom: \"3.5em\" }}>\n        <Button\n          className=\"float-right\"\n          onClick={() => {\n            page++;\n            getRecentNodes();\n          }}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Next &gt;\n        </Button>\n      </div>\n      <hr\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: \"rgb(225, 240, 255)\" } }\n          : {})}\n      />\n      <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n        <Button\n          onClick={() => {\n            query_call(\n              \"randomNode\",\n              {\n                allowHidden: loggedInAs && loggedInAs.unsafeMode,\n              },\n              {\n                ID: 0,\n              },\n              (res) => {\n                setRedirect(<Redirect to={`/node/${res.ID}`} />);\n              }\n            );\n          }}\n          style={{\n            width: \"100%\",\n            pointerEvents: loggedInAs ? \"auto\" : \"none\",\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Play a random adventure!\n        </Button>\n      </span>\n      {showingModal || \"\"}\n      {redirect || \"\"}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect, createRef } from \"react\";\nimport {\n  CardColumns,\n  Card,\n  OverlayTrigger,\n  Tooltip,\n  DropdownButton,\n  Dropdown,\n  Button,\n  Alert,\n  Container,\n} from \"react-bootstrap\";\nimport { query_call, mutation_call, palette } from \"./index\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { SingleFieldSubscriptionsRule } from \"graphql\";\n\nconst Notifications = (props) => {\n  const { loggedInAs, setLoggedInAs } = props;\n\n  const [account, setAccount] = useState(undefined);\n  const [redirect, setRedirect] = useState(undefined);\n  const refs = [];\n  const seenBtns = [];\n  const topText = createRef();\n\n  const cookies = new Cookies();\n  if (!loggedInAs && cookies.get(\"account\").length === 0)\n    return <Redirect to=\"/\" />;\n\n  useEffect(() => {\n    if (!account) {\n      query_call(\n        \"getAccount\",\n        {\n          screenName: loggedInAs\n            ? loggedInAs.screenName\n            : cookies.get(\"account\"),\n        },\n        {\n          screenName: 0,\n          notifications: {\n            time: 0,\n            seen: 0,\n            content: 0,\n            link: 0,\n          },\n        },\n        (res) => {\n          setAccount(res);\n          if (loggedInAs) {\n            loggedInAs.notifications = res.notifications;\n            setLoggedInAs({ ...loggedInAs });\n          }\n        }\n      );\n    }\n  });\n\n  if (!account || !loggedInAs)\n    return (\n      <Alert variant={loggedInAs && loggedInAs.unsafeMode ? \"dark\" : \"light\"}>\n        <Alert.Heading>Loading Page...</Alert.Heading>\n      </Alert>\n    );\n\n  const unseen = account.notifications\n    ? account.notifications.filter((notif) => !notif.seen)\n    : [];\n\n  return (\n    <div style={{ marginBottom: \"3em\" }}>\n      <title>Notifications for {loggedInAs.screenName}</title>\n      <span ref={topText}>\n        You have {unseen.length} new notification\n        {unseen.length !== 1 ? \"s\" : \"\"}\n        {unseen.length ? \"!\" : \".\"}\n      </span>\n      <p />\n      {account.notifications\n        ? account.notifications.map((notification, idx) => {\n            refs.push(createRef());\n            seenBtns.push(createRef());\n            return (\n              <>\n                <div\n                  ref={refs[idx]}\n                  style={{\n                    width: \"100%\",\n                    position: \"relative\",\n                    backgroundColor: !loggedInAs.unsafeMode\n                      ? \"white\"\n                      : palette[4],\n                    height: \"4em\",\n                    borderRadius: \"1em\",\n                    boxShadow: `0 0 3px ${palette[0]}`,\n                    padding: \"1em\",\n                    cursor: \"pointer\",\n                    \"-webkit-touch-callout\": \"none\" /* iOS Safari */,\n                    \"-webkit-user-select\": \"none\" /* Safari */,\n                    \"-khtml-user-select\": \"none\" /* Konqueror HTML */,\n                    \"-moz-user-select\": \"none\" /* Old versions of Firefox */,\n                    \"-ms-user-select\": \"none\" /* Internet Explorer/Edge */,\n                    \"user-select\":\n                      \"none\" /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */,\n                  }}\n                  onMouseOver={(e) => {\n                    refs[idx].current.style.boxShadow = `0 0 6px ${palette[2]}`;\n                  }}\n                  onMouseOut={(e) => {\n                    refs[idx].current.style.boxShadow = `0 0 3px ${palette[0]}`;\n                  }}\n                  onClick={(e) => {\n                    if (\n                      e.target !== seenBtns[idx].current &&\n                      e.target.className !== \"fa fa-times\"\n                    ) {\n                      notification.seen = true;\n                      mutation_call(\n                        \"seeNotification\",\n                        {\n                          accountScreenName: account.screenName,\n                          index: idx,\n                          force: true,\n                        },\n                        {},\n                        (res) => {\n                          setAccount({ ...account });\n                          loggedInAs.notifications = account.notifications;\n                          setLoggedInAs({ ...loggedInAs });\n                          if (notification.link)\n                            setRedirect(<Redirect to={notification.link} />);\n                        }\n                      );\n                    }\n                  }}\n                >\n                  <div\n                    style={{\n                      width: \"1.25em\",\n                      height: \"1.25em\",\n                      position: \"absolute\",\n                      left: \"0.16em\",\n                      top: \"0.16em\",\n                      fontSize: \"2.5em\",\n                      lineHeight: \"calc(50% + 0.8em)\",\n                      backgroundColor: notification.seen\n                        ? \"lightgrey\"\n                        : palette[0],\n                      color: notification.seen ? \"grey\" : \"white\",\n                      borderRadius: \"50%\",\n                      textAlign: \"center\",\n                    }}\n                    onMouseOver={(e) => {\n                      seenBtns[\n                        idx\n                      ].current.style.backgroundColor = notification.seen\n                        ? \"silver\"\n                        : palette[2];\n                    }}\n                    onMouseOut={(e) => {\n                      seenBtns[\n                        idx\n                      ].current.style.backgroundColor = notification.seen\n                        ? \"lightgrey\"\n                        : palette[0];\n                    }}\n                    onMouseDown={(e) => {\n                      seenBtns[\n                        idx\n                      ].current.style.backgroundColor = notification.seen\n                        ? \"darkgray\"\n                        : palette[6];\n                    }}\n                    onMouseUp={(e) => {\n                      seenBtns[\n                        idx\n                      ].current.style.backgroundColor = notification.seen\n                        ? \"silver\"\n                        : palette[2];\n                    }}\n                    onClick={(e) => {\n                      if (e.target === seenBtns[idx].current) {\n                        notification.seen = !notification.seen;\n                        mutation_call(\n                          \"seeNotification\",\n                          {\n                            accountScreenName: account.screenName,\n                            index: idx,\n                          },\n                          {},\n                          (res) => {\n                            setAccount({ ...account });\n                            loggedInAs.notifications = account.notifications;\n                            setLoggedInAs({ ...loggedInAs });\n                          }\n                        );\n                      }\n                    }}\n                    ref={seenBtns[idx]}\n                    class=\"fa fa-exclamation\"\n                  ></div>{\" \"}\n                  <div\n                    style={{\n                      width: \"calc(100% - 4em)\",\n                      position: \"absolute\",\n                      left: \"4em\",\n                      lineHeight: \"calc(50% + 1em)\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        position: \"absolute\",\n                        top: \"-0.25em\",\n                      }}\n                    >\n                      {notification.content}\n                    </span>\n\n                    <span\n                      class=\"text-muted\"\n                      style={{\n                        position: \"absolute\",\n                        top: \"1.5em\",\n                        fontSize: \"0.75em\",\n                      }}\n                    >\n                      {new Date(notification.time).toLocaleString()}\n                    </span>\n                  </div>\n                  <span\n                    class=\"fa fa-times\"\n                    style={{\n                      position: \"absolute\",\n                      top: \"1.5em\",\n                      right: \"1.5em\",\n                      color: \"#888\",\n                      cursor: \"pointer\",\n                      textShadow:\n                        \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                    }}\n                    onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                    onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                    onClick={() => {\n                      mutation_call(\n                        \"removeNotification\",\n                        {\n                          accountScreenName: account.screenName,\n                          index: idx,\n                        },\n                        {},\n                        (res) => {\n                          const newNotifs = account.notifications.filter(\n                            (notif, i) => i !== idx\n                          );\n                          setAccount({\n                            ...account,\n                            notifications: newNotifs,\n                          });\n\n                          loggedInAs.notifications = newNotifs;\n                          setLoggedInAs({ ...loggedInAs });\n                        }\n                      );\n                    }}\n                  />\n                </div>\n                <p />\n              </>\n            );\n          })\n        : \"\"}\n\n      <Button\n        className=\"float-right\"\n        onClick={() => {\n          setRedirect(<Redirect to={`/account/${account.screenName}`} />);\n        }}\n        style={{\n          border: `1px solid ${palette[2]}`,\n          backgroundColor: palette[0],\n        }}\n        onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n        onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n      >\n        Back to account &gt;\n      </Button>\n      {redirect || \"\"}\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nimport Cookies from \"universal-cookie\";\n\nconst LoginModal = (props) => {\n  const { loggedInAs, setLoggedInAs, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(password);\n\n    mutation_call(\n      \"loginAccount\",\n      { screenName: esScreenName, password: esPass },\n      {\n        screenName: 0,\n        profilePicURL: 0,\n        isAdmin: 0,\n        notifications: { seen: 0 },\n      },\n      (res) => {\n        if (res) {\n          new Cookies().set(\"account\", screenName, { path: \"/\" });\n          setLoggedInAs(res);\n          setShow(false);\n          close();\n        } else {\n          setInfo(\n            <div style={{ color: \"red\" }}>\n              That account does not exist or the password did not match!\n            </div>\n          );\n        }\n      }\n    );\n  };\n\n  const tryToLogin = () =>\n    screenName\n      ? password\n        ? login()\n        : setInfo(\n            <span style={{ color: \"red\" }}>Please enter your screenName!</span>\n          )\n      : setInfo(\n          <span style={{ color: \"red\" }}>Please enter your password!</span>\n        );\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Log in</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Screen Name:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={screenName}\n            onChange={(e) => setScreenName(e.target.value)}\n          />\n          <Form.Label>Password:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            variant=\"primary\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n            onClick={tryToLogin}\n          >\n            Log in\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default LoginModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { query_call, mutation_call, palette } from \"../index\";\n\nimport Cookies from \"universal-cookie\";\n\nconst SignUpModal = (props) => {\n  const { loggedInAs, setLoggedInAs, close } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n\n  const handleSubmitSignUp = () => {\n    if (pass1 !== pass2)\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n    else {\n      const esScreenName = escape(screenName);\n      query_call(\n        \"getAccount\",\n        { screenName: esScreenName },\n        { screenName: 0 },\n        (res) => {\n          if (res) {\n            setInfo(\n              <div style={{ color: \"red\" }}>That account already exists!</div>\n            );\n          } else {\n            createAccount();\n          }\n        }\n      );\n    }\n  };\n\n  const createAccount = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(pass1);\n    mutation_call(\n      \"createAccount\",\n      { screenName: esScreenName, password: esPass },\n      {\n        screenName: 0,\n        profilePicURL: 0,\n        isAdmin: 0,\n        notifications: { seen: 0 },\n      },\n      (res) => {\n        if (res) {\n          new Cookies().set(\"account\", screenName, { path: \"/\" });\n          setLoggedInAs(res);\n          setShow(false);\n          close();\n        }\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Sign Up for Crowdventure!</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Group>\n            <Form.Label>Screen Name:</Form.Label>\n            <Form.Control\n              value={screenName}\n              onChange={(e) => setScreenName(e.target.value)}\n            />\n            <Form.Label>Create Password:</Form.Label>\n            <Form.Control\n              {...(loggedInAs && loggedInAs.unsafeMode\n                ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                : {})}\n              type=\"password\"\n              value={pass1}\n              onChange={(e) => setPass1(e.target.value)}\n            />\n            <Form.Label>Confirm Password:</Form.Label>\n            <Form.Control\n              {...(loggedInAs && loggedInAs.unsafeMode\n                ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                : {})}\n              type=\"password\"\n              value={pass2}\n              onChange={(e) => setPass2(e.target.value)}\n            />\n          </Form.Group>\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            variant=\"primary\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n            onClick={() =>\n              screenName\n                ? pass1\n                  ? handleSubmitSignUp()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Please enter a screen name!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Please enter a password!\n                    </span>\n                  )\n            }\n          >\n            Sign Up\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default SignUpModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst ConfirmModal = (props) => {\n  const { onConfirm, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n\n  const [understand, setUnderstand] = useState(false);\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Turn on Unsafe Mode</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        Unsafe Mode allows you to see <b>ALL</b> of the content on Crowdventure,\n        including content that has been classified as \"unsafe\". Before you can\n        continue, you must acknowledge and agree to the terms of service:\n        <p />\n        <Form>\n          <Form.Control\n            disabled\n            as=\"textarea\"\n            rows=\"5\"\n            value={`Please read these terms of service (\"terms\", \"terms of service\") carefully before using the Crowdventure website (the \"service\").\n            \nI. Conditions of Use\n  We will provide their services to you, which are subject to the conditions stated below in this document. Every time you visit this website, use its services or make a purchase, you accept the following conditions. This is why we urge you to read them carefully.\n            \nII. Privacy Policy\n  Before you continue using our website we advise you to read our privacy policy [link to privacy policy] regarding our user data collection. It will help you better understand our practices.\n            \nIII. Copyright\n  Content published on this website (digital downloads, images, texts, graphics, logos) is the property of Crowdventure and/or its content creators and protected by international copyright laws. The entire compilation of the content found on this website is the exclusive property of [name], with copyright authorship for this compilation by [name].\n            \nIV. Communication\n  The entire communication with us is electronic. Every time you send us an email or visit our website, you are going to be communicating with us. You hereby consent to receive communications from us. If you subscribe to the news on our website, you are going to receive regular emails from us. We will continue to communicate with you by posting news and notices on our website and by sending you emails. You also agree that all notices, disclosures, agreements and other communications we provide to you electronically meet the legal requirements that such communications be in writing.\n            \nV. Applicable Law\n  By visiting this website, you agree that the laws of the United States of America, without regard to principles of conflict laws, will govern these terms of service, or any dispute of any sort that might come between [name] and you, or its business partners and associates.\n            \nVI. Disputes\n  Any dispute related in any way to your visit to this website or to products you purchase from us shall be arbitrated by state or federal court [your location] and you consent to exclusive jurisdiction and venue of such courts.\n            \nVII. Comments, Reviews, and Emails\n  Visitors may post content as long as it is not obscene, illegal, defamatory, threatening, infringing of intellectual property rights, invasive of privacy or injurious in any other way to third parties. Content has to be free of software viruses, political campaign, and commercial solicitation.\n  We reserve all rights (but not the obligation) to remove and/or edit such content. When you post your content, you grant Crowdventure non-exclusive, royalty-free and irrevocable right to use, reproduce, publish, modify such content throughout the world in any media.\n            \nVIII. License and Site Access\n  We grant you a limited license to access and make personal use of this website. You are not allowed to download or modify it. This may be done only with written consent from us.\n            \nIX. User Account\n  If you are an owner of an account on this website, you are solely responsible for maintaining the confidentiality of your private user details (username and password). You are responsible for all activities that occur under your account or password.\n  We reserve all rights to terminate accounts, edit or remove content and cancel orders in their sole discretion.`}\n          />\n          <Form.Check\n            style={{ float: \"right\" }}\n            type=\"checkbox\"\n            label=\"I agree to the terms of service.\"\n            checked={understand}\n            id=\"check\"\n            onChange={(e) => {\n              setUnderstand(e.target.checked);\n            }}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          variant=\"primary\"\n          onClick={onConfirm}\n          disabled={!understand}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Turn on Unsafe Mode\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useState, createRef } from \"react\";\nimport { Navbar, OverlayTrigger, Tooltip, Button } from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\n\nimport LoginModal from \"./Modals/LoginModal\";\nimport SignUpModal from \"./Modals/SignUpModal\";\nimport UnsafeModal from \"./Modals/UnsafeModal\";\n\nconst AccountManager = (props) => {\n  const { loggedInAs, setLoggedInAs } = props;\n  const [showingModal, showModal] = useState(undefined);\n\n  if (loggedInAs === undefined || loggedInAs === null) {\n    return (\n      <Navbar.Text style={{ \"text-align\": \"right\" }}>\n        You are not logged in.{\" \"}\n        <a\n          onClick={() => {\n            showModal(\n              <LoginModal\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n          style={{ cursor: \"pointer\" }}\n          onMouseEnter={(e) => (e.target.style.textDecoration = \"underline\")}\n          onMouseLeave={(e) => (e.target.style.textDecoration = \"none\")}\n        >\n          Log In\n        </a>{\" \"}\n        or{\" \"}\n        <a\n          onClick={() => {\n            showModal(\n              <SignUpModal\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n          style={{ cursor: \"pointer\" }}\n          onMouseEnter={(e) => (e.target.style.textDecoration = \"underline\")}\n          onMouseLeave={(e) => (e.target.style.textDecoration = \"none\")}\n        >\n          Sign Up\n        </a>\n        {showingModal || \"\"}\n      </Navbar.Text>\n    );\n  }\n\n  const name = createRef();\n\n  return (\n    <Navbar.Text>\n      <a\n        href={`/#/account/${loggedInAs.screenName}`}\n        style={{\n          color: loggedInAs && loggedInAs.unsafeMode ? \"white\" : \"\",\n          fontSize: \"1.5em\",\n        }}\n        onMouseOver={(e) => {\n          name.current.style.textDecoration = \"underline\";\n        }}\n        onMouseOut={(e) => {\n          name.current.style.textDecoration = \"none\";\n        }}\n      >\n        <div style={{ position: \"relative\" }}>\n          <span\n            ref={name}\n            style={{\n              position: \"absolute\",\n              top: \"0.25em\",\n              right: \"3.25em\",\n            }}\n          >\n            {loggedInAs.screenName}\n          </span>\n          <img\n            src={\n              loggedInAs.profilePicURL\n                ? loggedInAs.profilePicURL\n                : process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\"\n            }\n            onError={(e) => {\n              e.target.src = process.env.PUBLIC_URL + \"/crowdventure/defaultProfilePic.jpg\";\n            }}\n            style={{\n              position: \"absolute\",\n              right: \"1em\",\n              border: \"1px solid #bbb\",\n              height: \"2em\",\n              width: \"2em\",\n              \"object-fit\": \"cover\",\n              \"border-radius\": \"50%\",\n            }}\n          />\n          {loggedInAs.notifications &&\n          loggedInAs.notifications.filter((notif) => !notif.seen).length > 0 ? (\n            <div\n              style={{\n                position: \"absolute\",\n                right: \"1.5em\",\n                top: \"-0.5em\",\n                borderRadius: \"1em\",\n                backgroundColor: \"red\",\n                width: \"2em\",\n                height: \"2em\",\n                lineHeight: \"2em\",\n                fontSize: \"0.5em\",\n                color: \"white\",\n              }}\n            >\n              {loggedInAs.notifications.filter((notif) => !notif.seen).length}\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </a>\n      <br></br>\n      <p />\n      <span class=\"small text-muted\">\n        Unsafe Mode:{\" \"}\n        <BootstrapSwitchButton\n          checked={loggedInAs.unsafeMode}\n          onstyle=\"secondary\"\n          size=\"sm\"\n          onChange={(checked) => {\n            if (checked) {\n              showModal(\n                <UnsafeModal\n                  close={() => showModal(undefined)}\n                  loggedInAs={loggedInAs}\n                  onConfirm={() => {\n                    new Cookies().set(\"unsafeMode\", true, {\n                      path: \"/\",\n                    });\n                    setLoggedInAs({\n                      ...loggedInAs,\n                      unsafeMode: true,\n                    });\n                    showModal(undefined);\n                  }}\n                />\n              );\n            } else {\n              new Cookies().set(\"unsafeMode\", false, {\n                path: \"/\",\n              });\n              setLoggedInAs({\n                ...loggedInAs,\n                unsafeMode: false,\n              });\n            }\n          }}\n        />\n        <OverlayTrigger\n          overlay={\n            <Tooltip id=\"tooltip-unsafe\">\n              Unsafe mode allows you to see all content on Crowdventure,\n              including content that has been flagged as unsafe for the general\n              public!\n            </Tooltip>\n          }\n          placement=\"bottom\"\n        >\n          <Button\n            style={{\n              backgroundColor: \"#00000000\",\n              borderColor: \"#00000000\",\n              borderRadius: \"50%\",\n              color: loggedInAs.unsafeMode ? \"white\" : \"black\",\n            }}\n            size=\"xs\"\n          >\n            <span className=\"fa fa-info-circle\" />\n          </Button>\n        </OverlayTrigger>\n      </span>\n      {showingModal || \"\"}\n    </Navbar.Text>\n  );\n};\n\nexport default AccountManager;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Node from \"./Node/Node\";\nimport Account from \"./Account\";\nimport Home from \"./Home\";\nimport Notifications from \"./Notifications\";\nimport AccountManager from \"./AccountManager\";\n\nimport { Navbar, Container } from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport history from \"history/browser\";\n\nimport { mutation_call, palette } from \"./index\";\nconst packageJson = require(\"../package.json\");\n\nconst App = () => {\n  const [loggedInAs, setLoggedInAs] = useState(undefined);\n\n  useEffect(() => {\n    if (loggedInAs === undefined) {\n      const cookies = new Cookies();\n      const savedAccount = escape(cookies.get(\"account\"));\n\n      if (!savedAccount || savedAccount === \"\")\n        cookies.set(\"unsafeMode\", \"false\", { path: \"/\" });\n\n      mutation_call(\n        \"loginAccount\",\n        { screenName: savedAccount },\n        {\n          screenName: 0,\n          profilePicURL: 0,\n          isAdmin: 0,\n          notifications: {\n            seen: 0,\n          },\n        },\n        (res) => {\n          if (res) {\n            res.unsafeMode = cookies.get(\"unsafeMode\") === \"true\";\n            setLoggedInAs(res);\n          } else {\n            cookies.set(\"account\", \"\", { path: \"/\" });\n            cookies.set(\"unsafeMode\", \"false\", { path: \"/\" });\n          }\n        }\n      );\n    }\n\n    if (loggedInAs && loggedInAs.unsafeMode) {\n      document.getElementById(\"root\").style.backgroundImage = `linear-gradient(\n      to right,\n      rgb(158, 232, 255),\n      ${palette[3]} 10%,\n      ${palette[3]} 90%,\n      rgb(158, 232, 255)\n    )`;\n      document.getElementById(\"root\").style.color = \"rgb(225, 240, 255)\";\n    } else {\n      document.getElementById(\"root\").style.backgroundImage = `linear-gradient(\n        to right,\n        rgb(158, 232, 255),\n        rgb(245,250,255) 10%,\n        rgb(245,250,255) 90%,\n        rgb(158, 232, 255)\n      )`;\n      document.getElementById(\"root\").style.color = \"\";\n    }\n  });\n\n  return (\n    <Container>\n      <Navbar expand=\"lg\" className=\"row border-bottom\">\n        <Navbar.Brand href=\"/\" style={{ maxWidth: \"60%\" }}>\n          <img\n            href=\"/\"\n            src={process.env.PUBLIC_URL + \"/crowdventure/logo.png\"}\n            alt=\"Crowdventure Logo\"\n            style={{ width: \"100%\" }}\n          />\n        </Navbar.Brand>\n        <Navbar.Toggle\n          aria-controls=\"basic-navbar-nav\"\n          className=\"bg-light\"\n          style={{ marginRight: \"20px\" }}\n        />\n\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n          <div class=\"text-center\">\n            <AccountManager\n              loggedInAs={loggedInAs}\n              setLoggedInAs={setLoggedInAs}\n            />\n          </div>\n        </Navbar.Collapse>\n      </Navbar>\n      <br />\n      <HashRouter>\n        <Switch>\n          <Route\n            path=\"/\"\n            render={(props) => (\n              <Home {...props} loggedInAs={loggedInAs} history={history} />\n            )}\n            exact\n          />\n          <Route\n            path=\"/node/:id\"\n            render={(props) => (\n              <Node {...props} loggedInAs={loggedInAs} history={history} />\n            )}\n          />\n          <Route\n            path=\"/account/:id\"\n            render={(props) => (\n              <Account\n                {...props}\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n              />\n            )}\n          />\n          <Route\n            path=\"/notifications\"\n            render={(props) => (\n              <Notifications\n                {...props}\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n              />\n            )}\n          />\n        </Switch>\n      </HashRouter>\n      <br />\n      <Navbar className=\"row border-top\">\n        <div class=\"col\">\n          <small class=\"text-muted\">\n            @ 2020 Copyright: (MIT) Benjamin Kern\n          </small>\n        </div>\n\n        <div class=\"col text-right\" style={{ paddingRight: \"20px\" }}>\n          <a href=\"https://github.com/benjaminjkern/crowdventure/blob/master/CHANGELOG.md\">\n            <small class=\"text-muted\">Version: {packageJson.version}</small>\n          </a>\n        </div>\n      </Navbar>\n      <title>Crowdventure! - Page not found!</title>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nconst { createApolloFetch } = require(\"apollo-fetch\");\n\nconst app_fetch = createApolloFetch({\n  uri: require(\"./apolloURL.js\").backendURL,\n});\n\nconst query_call = (query, parameters, attributes, callback) => {\n  console.log(\n    `query{${query}${formatParameters(parameters)}${formatAttributes(\n      attributes\n    )}}`\n  );\n  app_fetch({\n    query: `query{${query}${formatParameters(parameters)}${formatAttributes(\n      attributes\n    )}}`,\n  }).then((res, err) => {\n    if (err) alert(err);\n    if (res.data) callback(res.data[query]);\n    else alert(\"Something went wrong when calling query\");\n  });\n};\n\nconst mutation_call = (query, parameters, attributes, callback, setInfo) => {\n  console.log(\n    `mutation{${query}${formatParameters(parameters)}${formatAttributes(\n      attributes\n    )}}`\n  );\n  app_fetch({\n    query: `mutation{${query}${formatParameters(parameters)}${formatAttributes(\n      attributes\n    )}}`,\n  }).then((res, err) => {\n    if (err) alert(err);\n    if (res.data) callback(res.data[query]);\n    else alert(\"Something went wrong when calling mutation\");\n  });\n};\n\nconst formatParameters = (parameters) =>\n  Object.keys(parameters).length > 0\n    ? `(${Object.keys(parameters)\n        .map(\n          (param) =>\n            `${param}:${typeof parameters[param] === \"string\" ? '\"' : \"\"}${\n              parameters[param]\n            }${typeof parameters[param] === \"string\" ? '\"' : \"\"}`\n        )\n        .join(\",\")})`\n    : \"\";\n\nconst formatAttributes = (attributes) =>\n  Object.keys(attributes).length > 0\n    ? `{${Object.keys(attributes)\n        .map((attribute) => attribute + formatAttributes(attributes[attribute]))\n        .join(\",\")}}`\n    : \"\";\n\nconst escape = (text, newlines = false) =>\n  text\n    ? newlines\n      ? text.replace(/\"$/, ' \" ').replace(/^\"/, ' \" ').replace(/\"\"\"/g, ` \"\" \" `)\n      : text.replace(/\\n/g, \"\").replace(/\\\\/g, `\\\\\\\\`).replace(/\"/g, `\\\\\"`)\n    : text;\n\nconst palette = [\n  \"rgb(100, 180, 244)\", // original\n  \"rgb(158, 232, 255)\", // light\n  \"rgb(80, 160, 224)\", //dark\n  \"rgb(34,34,34)\", // darker grey\n  \"rgb(41,41,41)\", // original grey\n  \"rgb(50,50,50)\", // lighter grey\n\n  \"rgb(80, 150, 200)\", // darkest blue\n];\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport { app_fetch, escape, palette, query_call, mutation_call };\n","const backendURL =\n    \"https://3yfp7ejc0m.execute-api.us-east-1.amazonaws.com/dev/graphql\";\n\nconst BING_API_KEY = \"8300cebe5f0d452a9ccb4bca67af4659\";\n\nmodule.exports = { backendURL, BING_API_KEY };"],"sourceRoot":""}