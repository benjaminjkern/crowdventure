{"version":3,"sources":["Modals/PictureModal.jsx","SearchImage.jsx","Modals/ConfirmModal.jsx","Modals/EditNodeModal.jsx","Node/SearchPage.jsx","Modals/CreateNodeModal.jsx","Modals/SuggestChoiceModal.jsx","Modals/EditChoiceModal.jsx","Node/ChoiceColumns.jsx","Node/Node.jsx","Modals/EditAccountModal.jsx","Modals/UnsafeModal.jsx","NodeViewer.jsx","Account.jsx","Home.jsx","Modals/LoginModal.jsx","Modals/SignUpModal.jsx","AccountManager.jsx","App.jsx","index.jsx","apolloURL.js"],"names":["PictureModal","props","title","pictureURL","close","loggedInAs","useState","show","setShow","info","setInfo","Modal","onHide","Header","unsafeMode","style","backgroundColor","palette","closeButton","Title","Body","src","onError","e","target","display","color","width","maxHeight","Footer","Button","size","onClick","border","onMouseEnter","onMouseLeave","Math","random","BING_API_KEY","require","SearchImage","callback","isLoading","setIsLoading","options","setOptions","page","setPage","lastQuery","setLastQuery","handleSearch","query","fetch","encodeURIComponent","headers","then","data","json","newOptions","value","reduce","p","hit","i","length","id","urls","thumbnailUrl","longUrls","contentUrl","isFamilyFriendly","slice","catch","console","log","filterBy","labelKey","minLength","onSearch","maxResults","onPaginate","useCache","placeholder","renderMenuItemChildren","option","marginRight","borderRadius","height","filter","ConfirmModal","content","onConfirm","variant","EditNodeModal","node","undefined","showingModal","showModal","setTitle","setContent","picture","setPicture","showChangePic","setShowChangePic","hidden","setHidden","pictureUnsafe","shouldHide","setShouldHide","deletePage","mutation_call","nodeID","ID","history","back","setTimeout","window","location","reload","Form","padding","class","position","top","right","cursor","textShadow","url","familyFriendly","Label","Control","onChange","as","rows","isAdmin","Check","type","checked","label","esTitle","escape","esContent","esPicture","res","editNode","SearchPage","toID","allNodes","setAllNodes","toNode","setToNode","useEffect","query_call","owner","screenName","profilePicURL","text","toLowerCase","includes","defaultSelected","CreateNodeModal","featured","pictureField","setPictureField","alt","accountScreenName","createNode","SuggestChoiceModal","fromNode","toPage","setToPage","suggestAction","setSuggestAction","createNewAction","escaped","fromID","action","EditChoiceModal","choice","to","editChoice","choiceID","ChoiceColumns","canon","canonChoices","nonCanonChoices","map","choices","setChoices","refs","some","forEach","likedBy","dislikedBy","score","suggestedBy","from","liked","account","disliked","CardColumns","idx","push","createRef","Card","className","boxShadow","overflow","ref","paddingTop","disabled","href","scrollTo","left","behavior","pointerEvents","current","OverlayTrigger","overlay","Tooltip","DropdownButton","drop","Dropdown","Item","makeCanon","Divider","reportingObjectType","reportingObjectID","reporting","alert","dislike","like","Object","keys","Alert","Cookies","get","Heading","Node","match","setNode","pageID","params","fgColor","bgColor","views","returnNode","Container","dismissible","onClose","onLoad","marginLeft","split","line","textIndent","paddingRight","paddingBottom","EditAccountModal","bio","profilePicture","setAccount","setRedirect","bioField","setBioField","profilePictureField","setProfilePictureField","nameField","setNameField","pass1","setPass1","pass2","setPass2","setAdmin","editPage","checkedIfExists","esBio","esScreenName","newScreenName","newPassword","totalNodeViews","totalSuggestionScore","featuredNodes","nodes","set","path","opacity","understand","setUnderstand","float","NodeViewer","marginTop","marginBottom","Img","parentNode","alreadyFeatured","featurePage","hidePage","Account","setLoggedInAs","redirect","searchQuery","setSearchQuery","searchedNodes","setSearchedNodes","onstyle","UnsafeModal","borderColor","Home","topNodes","setTopNodes","LoginModal","setScreenName","password","setPassword","esPass","login","SignUpModal","createAccount","Group","handleSubmitSignUp","AccountManager","Navbar","Text","packageJson","App","cookies","savedAccount","document","getElementById","backgroundImage","expand","Brand","version","Toggle","aria-controls","Collapse","render","exact","app_fetch","createApolloFetch","uri","backendURL","parameters","attributes","formatParameters","formatAttributes","err","param","join","attribute","newlines","replace","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.4b9fe37e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst PictureModal = (props) => {\n  const { title, pictureURL, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        <img\n          src={pictureURL}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n            setInfo(<span style={{ color: \"red\" }}>Picture not found!</span>);\n          }}\n          style={{\n            width: \"100%\",\n            maxHeight: \"70vh\",\n            \"object-fit\": \"contain\",\n          }}\n        />\n        {info ? info : \"\"}\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          size=\"sm\"\n          onClick={() => {\n            setShow(false);\n            close();\n          }}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Thanks for showing me this {Math.random() < 0.5 ? \"cool\" : \"neat\"}{\" \"}\n          picture!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default PictureModal;\n","import React, { useState } from \"react\";\n\nimport { AsyncTypeahead, TypeaheadMenu } from \"react-bootstrap-typeahead\";\n\nimport { palette } from \"./index\";\n\nconst { BING_API_KEY } = require(\"./apolloURL\");\n\nconst SearchImage = (props) => {\n  const { callback, loggedInAs } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [page, setPage] = useState(0);\n  const [lastQuery, setLastQuery] = useState(\"\");\n\n  const BLURAMOUNT = 10;\n\n  const handleSearch = (query) => {\n    setIsLoading(true);\n\n    fetch(\n      \"https://api.cognitive.microsoft.com/bing/v7.0/images/search?q=\" +\n        encodeURIComponent(query) +\n        `&count=20&safeSearch=${\n          loggedInAs && loggedInAs.unsafeMode ? \"Off\" : \"Strict\"\n        }&offset=` +\n        (query !== lastQuery ? 0 : page * 20),\n      {\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": BING_API_KEY,\n        },\n      }\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        const newOptions = data.value.reduce(\n          (p, hit, i) =>\n            (i + options.length) % 2 == 0\n              ? [\n                  ...p,\n                  {\n                    id: \"(Image Selected)\",\n                    urls: [hit.thumbnailUrl],\n                    longUrls: [hit.contentUrl],\n                    isFamilyFriendly: [hit.isFamilyFriendly],\n                  },\n                ]\n              : [\n                  ...p.slice(0, p.length - 1),\n                  {\n                    id: \"(Image Selected)\",\n                    urls: [p[p.length - 1].urls[0], hit.thumbnailUrl],\n                    longUrls: [p[p.length - 1].longUrls[0], hit.contentUrl],\n                    isFamilyFriendly: [\n                      p[p.length - 1].isFamilyFriendly[0],\n                      hit.isFamilyFriendly,\n                    ],\n                  },\n                ],\n          query !== lastQuery ? [] : options\n        );\n        setOptions(newOptions);\n\n        if (query !== lastQuery) {\n          setPage(1);\n        } else {\n          setPage(page + 1);\n        }\n        setLastQuery(query);\n        setIsLoading(false);\n      })\n      .catch(console.log);\n  };\n\n  return (\n    <AsyncTypeahead\n      id=\"async-example\"\n      isLoading={isLoading}\n      filterBy={() => true}\n      labelKey=\"id\"\n      minLength={2}\n      onSearch={handleSearch}\n      maxResults={9}\n      onPaginate={() => handleSearch(lastQuery)}\n      useCache={false}\n      options={options}\n      placeholder=\"Search for an image...\"\n      renderMenuItemChildren={(option) => (\n        <div>\n          <img\n            onClick={() =>\n              callback(option.longUrls[0], option.isFamilyFriendly[0])\n            }\n            src={option.urls[0]}\n            style={{\n              marginRight: \"10px\",\n              borderRadius: \"4px\",\n              width: \"50%\",\n              height: \"auto\",\n              ...(option.isFamilyFriendly[0]\n                ? {}\n                : {\n                    \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                    filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                  }),\n            }}\n          />\n          {option.urls.length === 2 ? (\n            <img\n              onClick={() =>\n                callback(option.longUrls[1], option.isFamilyFriendly[1])\n              }\n              src={option.urls[1]}\n              style={{\n                marginRight: \"10px\",\n                borderRadius: \"4px\",\n                width: \"50%\",\n                height: \"auto\",\n                ...(option.isFamilyFriendly[1]\n                  ? {}\n                  : {\n                      \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                      filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                    }),\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    />\n  );\n};\n\nexport default SearchImage;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst ConfirmModal = (props) => {\n  const { title, content, onConfirm, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        {content}\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            setShow(false);\n            close();\n          }}\n        >\n          No!\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={onConfirm}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Yes!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useState } from \"react\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nimport { Modal, Form, Button } from \"react-bootstrap\";\n\nimport SearchImage from \"../SearchImage\";\nimport ConfirmModal from \"./ConfirmModal\";\n\nconst EditNodeModal = (props) => {\n  const { node, close, loggedInAs } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n  const [showingModal, showModal] = useState(undefined);\n\n  const [title, setTitle] = useState(node.title);\n  const [content, setContent] = useState(node.content);\n  const [picture, setPicture] = useState(node.pictureURL);\n  const [showChangePic, setShowChangePic] = useState(false);\n  const [hidden, setHidden] = useState(node.hidden);\n\n  const [shouldHide, setShouldHide] = useState(node.pictureUnsafe || false);\n\n  const deletePage = () => {\n    mutation_call(\"deleteNode\", { nodeID: node.ID }, 0, () => {\n      history.back();\n      setTimeout(() => window.location.reload(false), 100);\n    });\n  };\n\n  const editNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = picture.length > 0 ? escape(picture) : null;\n\n    mutation_call(\n      \"editNode\",\n      {\n        nodeID: node.ID,\n        title: esTitle,\n        content: `\"\"${esContent}\"\"`,\n        pictureURL: esPicture,\n        ...(shouldHide\n          ? { hidden: true, pictureUnsafe: true }\n          : { pictureUnsafe: false }),\n        ...(!shouldHide && hidden !== undefined && !node.pictureUnsafe\n          ? { hidden }\n          : {}),\n      },\n      { ID: 0 },\n      (res) => {\n        if (res) {\n          window.location.reload(false);\n        }\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Page</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {picture ? (\n            <>\n              <div\n                style={{\n                  border: \"1px solid #eee\",\n                  borderRadius: \"8px\",\n                }}\n              >\n                <img\n                  src={picture}\n                  onError={(e) => {\n                    setInfo(\n                      <span style={{ color: \"red\" }}>Picture not found!</span>\n                    );\n                    setPicture(\"\");\n                    setShouldHide(false);\n                  }}\n                  style={{\n                    padding: \"1px\",\n                    width: \"100%\",\n                    \"object-fit\": \"contain\",\n                    borderRadius: \"8px\",\n                  }}\n                />\n                <span\n                  class=\"fa fa-times\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"1.5em\",\n                    right: \"1.5em\",\n                    color: \"#888\",\n                    cursor: \"pointer\",\n                    textShadow:\n                      \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                  }}\n                  onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                  onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                  onClick={() => {\n                    setPicture(\"\");\n                    setShouldHide(false);\n                  }}\n                />\n              </div>\n\n              <br />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <div class=\"row no-gutters\">\n            <div class=\"col\">Picture:</div>\n            <div class=\"col small text-muted text-center\">\n              {!picture\n                ? \"(Don't use any picture)\"\n                : picture === node.pictureURL\n                ? \"(Use existing picture)\"\n                : \"(Use new picture)\"}\n            </div>\n            <div class=\"col text-right\">\n              <Button\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                size=\"sm\"\n                onClick={() => setShowChangePic(!showChangePic)}\n              >\n                {picture ? \"Change\" : \"Select\"} Picture\n              </Button>\n            </div>\n          </div>\n          {showChangePic ? (\n            <SearchImage\n              loggedInAs={loggedInAs}\n              callback={(url, familyFriendly) => {\n                setPicture(url);\n                setInfo(\"\");\n                setShowChangePic(false);\n                setShouldHide(!familyFriendly);\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n          <Form.Label>Title:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <Form.Label>Content:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            as=\"textarea\"\n            rows=\"3\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n          {loggedInAs && loggedInAs.isAdmin ? (\n            <>\n              <Form.Label>Admin Controls:</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                checked={hidden || false}\n                onChange={(e) => setHidden(e.target.checked)}\n                label=\"Page should be hidden\"\n                id=\"hide\"\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n          {info ? info : \"\"}\n          {shouldHide ? (\n            <span style={{ color: \"red\" }}>\n              <br />\n              The image chosen will cause the page to automatically be hidden.\n              If you would like to not have this happen, change or remove the\n              image.\n            </span>\n          ) : (\n            \"\"\n          )}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              title\n                ? content\n                  ? editNode()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Content cannot be empty!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>Title cannot be empty!</span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Page!\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              showModal(\n                <ConfirmModal\n                  loggedInAs={loggedInAs}\n                  close={() => showModal(undefined)}\n                  onConfirm={deletePage}\n                  title=\"Delete Page\"\n                  content=\"This will erase all suggested choices of this page, and their associated scores. This will NOT delete sub-pages of this page. Are you sure you wish to continue?\"\n                />\n              );\n            }}\n          >\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default EditNodeModal;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport { query_call } from \"../index\";\n\nconst SearchPage = (props) => {\n  const { callback, toID } = props;\n  const [allNodes, setAllNodes] = useState(undefined);\n  const [toNode, setToNode] = useState(undefined);\n\n  const filterByCallback = (node, props) => {\n    if (props.text === \"\") {\n      callback(\"\");\n      return true;\n    }\n    return (\n      node.title.toLowerCase().includes(props.text.toLowerCase()) ||\n      node.owner.screenName.toLowerCase().includes(props.text.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    if (toID) {\n      query_call(\"getNode\", { ID: toID }, { title: 0, ID: 0 }, (res) =>\n        setToNode(res)\n      );\n    } else setToNode(null);\n\n    query_call(\n      \"allNodes\",\n      {},\n      { title: 0, owner: { screenName: 0, profilePicURL: 0 }, ID: 0 },\n      (res) => setAllNodes(res)\n    );\n  }, []);\n\n  if (!allNodes || toNode === undefined) return <div>Loading...</div>;\n\n  return (\n    <Typeahead\n      filterBy={filterByCallback}\n      defaultSelected={[toNode ? toNode.title : \"\"]}\n      labelKey=\"title\"\n      options={allNodes}\n      placeholder=\"(Leave Empty to Create New Page)\"\n      renderMenuItemChildren={(node) => (\n        <div onClick={() => callback(node.ID)}>\n          {node.title}\n          <div>\n            <small>\n              Author:{\" \"}\n              <img\n                src={\n                  node.owner.profilePicURL\n                    ? node.owner.profilePicURL\n                    : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                }\n                onError={(e) => {\n                  e.target.src =\n                    process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                }}\n                style={{\n                  border: \"1px solid #bbb\",\n                  height: \"2em\",\n                  width: \"2em\",\n                  \"object-fit\": \"cover\",\n                  \"border-radius\": \"50%\",\n                }}\n              />{\" \"}\n              {node.owner.screenName}\n            </small>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default SearchPage;\n","import React, { useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\n\nimport { escape, mutation_call, palette } from \"../index\";\n\nimport SearchImage from \"../SearchImage\";\n\nconst CreateNodeModal = (props) => {\n  const {\n    loggedInAs,\n    callback,\n    picture,\n    pictureUnsafe,\n    close,\n    featured,\n  } = props;\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [pictureField, setPictureField] = useState(picture);\n  const [showChangePic, setShowChangePic] = useState(false);\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n  const [shouldHide, setShouldHide] = useState(pictureUnsafe);\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = escape(pictureField);\n    mutation_call(\n      \"createNode\",\n      {\n        accountScreenName: loggedInAs.screenName,\n        title: esTitle,\n        content: `\"\"${esContent}\"\"`,\n        featured: featured || false,\n        ...(shouldHide ? { hidden: true, pictureUnsafe: true } : {}),\n        ...(esPicture && esPicture.length ? { pictureURL: esPicture } : {}),\n      },\n      { ID: 0 },\n      callback ||\n        (() => {\n          window.location.reload(false);\n        })\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Creating New Page</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {pictureField ? (\n            <>\n              <div\n                style={{\n                  border: \"1px solid #eee\",\n                  borderRadius: \"8px\",\n                }}\n              >\n                <img\n                  src={pictureField}\n                  onError={() => {\n                    setInfo(\n                      <span style={{ color: \"red\" }}>Picture not found!</span>\n                    );\n                    setPictureField(\"\");\n                    setShouldHide(false);\n                  }}\n                  alt=\"This shouldn't have happened\"\n                  style={{\n                    padding: \"1px\",\n                    width: \"100%\",\n                    \"object-fit\": \"contain\",\n                    borderRadius: \"8px\",\n                  }}\n                />\n                <span\n                  class=\"fa fa-times\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"1.5em\",\n                    right: \"1.5em\",\n                    color: \"#888\",\n                    cursor: \"pointer\",\n                    textShadow:\n                      \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                  }}\n                  onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                  onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                  onClick={() => {\n                    setPictureField(\"\");\n                    setShouldHide(false);\n                  }}\n                />\n              </div>\n\n              <br />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <div class=\"row no-gutters\">\n            <div class=\"col\">Picture:</div>\n            <div class=\"col small text-muted text-center\">\n              {!pictureField ? \"(Don't use any picture)\" : \"(Use new picture)\"}\n            </div>\n            <div class=\"col text-right\">\n              <Button\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                size=\"sm\"\n                onClick={() => setShowChangePic(!showChangePic)}\n              >\n                {pictureField ? \"Change\" : \"Select\"} Picture\n              </Button>\n            </div>\n          </div>\n          {showChangePic ? (\n            <SearchImage\n              loggedInAs={loggedInAs}\n              callback={(url, familyFriendly) => {\n                setPictureField(url);\n                setShowChangePic(false);\n                setShouldHide(!familyFriendly);\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n          <Form.Label>Title:</Form.Label>\n          <Form.Control\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          <Form.Label>Content:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            value={content}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            onChange={(e) => setContent(e.target.value)}\n          />\n          {info || \"\"}\n          {shouldHide ? (\n            <span style={{ color: \"red\" }}>\n              The image chosen will cause the page to automatically be hidden.\n              If you would like to not have this happen, change or remove the\n              image.\n            </span>\n          ) : (\n            \"\"\n          )}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              title\n                ? content\n                  ? createNode()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Content cannot be empty!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>Title cannot be empty!</span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Create Page!\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CreateNodeModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport SearchPage from \"../Node/SearchPage\";\n\nimport CreateNodeModal from \"./CreateNodeModal\";\n\nimport { mutation_call, escape, palette } from \"../index\";\n\nconst SuggestChoiceModal = (props) => {\n  const { loggedInAs, fromNode, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [toPage, setToPage] = useState(\"\");\n  const [suggestAction, setSuggestAction] = useState(\"\");\n  const [showingModal, showModal] = useState(\"\");\n\n  const createNewAction = (toID) => {\n    if (!toID) {\n      showModal(\n        <CreateNodeModal\n          loggedInAs={loggedInAs}\n          picture={fromNode.pictureURL}\n          pictureUnsafe={fromNode.pictureUnsafe}\n          callback={(node) => createNewAction(node.ID)}\n          close={() => showModal(undefined)}\n        />\n      );\n    } else {\n      const escaped = escape(suggestAction);\n      mutation_call(\n        \"suggestChoice\",\n        {\n          accountScreenName: loggedInAs.screenName,\n          fromID: fromNode.ID,\n          action: escaped,\n          toID,\n        },\n        { ID: 0 },\n        () => {\n          window.location.reload(false);\n        }\n      );\n    }\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Suggesting New Choice</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Action:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={suggestAction}\n            onChange={(e) => setSuggestAction(e.target.value)}\n          />\n          <Form.Label>Go to Page:</Form.Label>\n          <SearchPage callback={(nodeID) => setToPage(nodeID)} toID={toPage} />\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              suggestAction\n                ? createNewAction(toPage)\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Action cannot be empty!\n                    </span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Submit New Choice\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default SuggestChoiceModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport SearchPage from \"../Node/SearchPage\";\n\nimport CreateNodeModal from \"./CreateNodeModal\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nconst EditChoiceModal = (props) => {\n  const { choice, loggedInAs, fromNode, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [toPage, setToPage] = useState(choice.to.ID);\n  const [suggestAction, setSuggestAction] = useState(choice.action);\n  const [showingModal, showModal] = useState(\"\");\n  const [hidden, setHidden] = useState(choice.hidden);\n\n  const editChoice = (toID) => {\n    if (!toID) {\n      showModal(\n        <CreateNodeModal\n          loggedInAs={loggedInAs}\n          picture={fromNode.pictureURL}\n          callback={(node) => editChoice(node.ID)}\n          close={() => showModal(undefined)}\n        />\n      );\n    } else {\n      const escaped = escape(suggestAction);\n      mutation_call(\n        \"editSuggestion\",\n        {\n          choiceID: choice.ID,\n          action: escaped,\n          toID: toID,\n          ...(hidden !== undefined ? { hidden } : {}),\n        },\n        { ID: 0 },\n        () => {\n          window.location.reload(false);\n        }\n      );\n    }\n  };\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Choice</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Action:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={suggestAction}\n            onChange={(e) => setSuggestAction(e.target.value)}\n          ></Form.Control>\n          <Form.Label>Go to Page:</Form.Label>\n          <SearchPage callback={(nodeID) => setToPage(nodeID)} toID={toPage} />\n\n          {loggedInAs && loggedInAs.isAdmin ? (\n            <>\n              <Form.Label>Admin Controls:</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                checked={hidden || false}\n                onChange={(e) => setHidden(e.target.checked)}\n                label=\"Choice should be hidden\"\n                id=\"hide\"\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              suggestAction\n                ? editChoice(toPage)\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Action cannot be empty!\n                    </span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Choice\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default EditChoiceModal;\n","import React, { useState, useEffect, createRef, forceUpdate } from \"react\";\n\nimport {\n  CardColumns,\n  Card,\n  DropdownButton,\n  Dropdown,\n  Alert,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport EditChoiceModal from \"../Modals/EditChoiceModal\";\n\nimport { mutation_call, query_call, palette } from \"../index\";\n\nconst ChoiceColumns = (props) => {\n  const { node, loggedInAs, canon } = props;\n\n  const [choices, setChoices] = useState(\n    (canon ? node.canonChoices : node.nonCanonChoices).map(() => null)\n  );\n\n  const refs = [];\n\n  const [showingModal, showModal] = useState(undefined);\n\n  const like = (idx) => {\n    if (loggedInAs) {\n      const choice = choices[idx];\n\n      if (choice.liked) {\n        choice.liked = false;\n        choice.score--;\n      } else {\n        choice.liked = true;\n        choice.score++;\n        if (choice.disliked) choice.score++;\n      }\n      choice.disliked = false;\n      setChoices([\n        ...choices.slice(0, idx),\n        choice,\n        ...choices.slice(idx + 1, choices.length),\n      ]);\n\n      mutation_call(\n        \"likeSuggestion\",\n        { accountScreenName: loggedInAs.screenName, choiceID: choice.ID },\n        { ID: 0 },\n        () => {}\n      );\n    }\n  };\n\n  const dislike = (idx) => {\n    if (loggedInAs) {\n      const choice = choices[idx];\n\n      if (choice.disliked) {\n        choice.disliked = false;\n        choice.score++;\n      } else {\n        choice.disliked = true;\n        choice.score--;\n        if (choice.liked) choice.score--;\n      }\n      choice.liked = false;\n      setChoices([\n        ...choices.slice(0, idx),\n        choice,\n        ...choices.slice(idx + 1, choices.length),\n      ]);\n\n      mutation_call(\n        \"dislikeSuggestion\",\n        { accountScreenName: loggedInAs.screenName, choiceID: choice.ID },\n        { ID: 0 },\n        () => {}\n      );\n    }\n  };\n\n  const makeCanon = (choiceID) => {\n    mutation_call(\"makeCanon\", { choiceID: choiceID }, { ID: 0 }, () =>\n      setTimeout(() => window.location.reload(false), 100)\n    );\n  };\n\n  const makeNonCanon = (choiceID) => {\n    mutation_call(\"makeNonCanon\", { choiceID: choiceID }, { ID: 0 }, () =>\n      setTimeout(() => window.location.reload(false), 100)\n    );\n  };\n\n  const removeSuggestion = (choiceID) => {\n    mutation_call(\"removeSuggestion\", { choiceID: choiceID }, {}, () =>\n      window.location.reload(false)\n    );\n  };\n\n  const reportSuggestion = (choiceID) => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Choice\",\n        reportingObjectID: choiceID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported action!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (\n      choices.length !==\n        (canon ? node.canonChoices : node.nonCanonChoices).length ||\n      choices.some(\n        (choice, i) =>\n          choice !== null &&\n          choice.ID !== (canon ? node.canonChoices : node.nonCanonChoices)[i].ID\n      )\n    )\n      setChoices(\n        (canon ? node.canonChoices : node.nonCanonChoices).map(() => null)\n      );\n\n    if (choices.some((choice) => choice === null)) {\n      (canon ? node.canonChoices : node.nonCanonChoices).forEach(\n        (choiceID, i) => {\n          if (choices[i] !== null) return;\n\n          query_call(\n            \"getChoice\",\n            { ID: choiceID.ID },\n            {\n              ID: 0,\n              action: 0,\n              likedBy: { screenName: 0 },\n              dislikedBy: { screenName: 0 },\n              score: 0,\n              suggestedBy: {\n                hidden: 0,\n                screenName: 0,\n                profilePicURL: 0,\n              },\n              hidden: 0,\n              to: {\n                owner: {\n                  screenName: 0,\n                  hidden: 0,\n                },\n                ID: 0,\n                hidden: 0,\n              },\n              from: {\n                ID: 0,\n              },\n            },\n            (choice) => {\n              choice.liked =\n                loggedInAs &&\n                choice.likedBy.some(\n                  (account) => account.screenName === loggedInAs.screenName\n                );\n              choice.disliked =\n                loggedInAs &&\n                choice.dislikedBy.some(\n                  (account) => account.screenName === loggedInAs.screenName\n                );\n              choices[i] = choice;\n              showModal({});\n            }\n          );\n        }\n      );\n    }\n  });\n\n  if (!choices)\n    return (\n      <Alert\n        variant={\n          (loggedInAs && loggedInAs.unsafeMode) ||\n          new Cookies().get(\"unsafeMode\") === \"true\"\n            ? \"dark\"\n            : \"light\"\n        }\n      >\n        <title>Loading Page...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n\n  if (choices.length > 0)\n    return (\n      <CardColumns>\n        {choices.map((choice, idx) => {\n          refs.push(createRef());\n          if (choice === null)\n            return (\n              <Card\n                className=\"mt-2 text-center\"\n                style={{\n                  boxShadow: `0 0 3px ${palette[0]}`,\n                  overflow: \"hidden\",\n                  ...(loggedInAs && loggedInAs.unsafeMode\n                    ? { backgroundColor: palette[4] }\n                    : {}),\n                }}\n                ref={refs[idx]}\n              >\n                <Card.Body style={{ paddingTop: \"2em\" }}>\n                  <Card.Title>Loading...</Card.Title>\n                </Card.Body>\n              </Card>\n            );\n\n          if (\n            (choice.hidden || choice.suggestedBy.hidden) &&\n            (!loggedInAs ||\n              (!loggedInAs.unsafeMode &&\n                loggedInAs.screenName !== choice.suggestedBy.screenName &&\n                (loggedInAs.screenName !== node.owner.screenName || !canon)))\n          )\n            return <span />;\n\n          const disabled =\n            !choice.to ||\n            ((choice.to.hidden || choice.to.owner.hidden) &&\n              (!loggedInAs ||\n                (!loggedInAs.unsafeMode &&\n                  choice.to.owner.screenName !== loggedInAs.screenName)));\n\n          return (\n            <Card\n              className=\"text-center mt-2\"\n              style={{\n                boxShadow: `0 0 3px ${palette[0]}`,\n                overflow: \"hidden\",\n                ...(loggedInAs && loggedInAs.unsafeMode\n                  ? { backgroundColor: palette[4] }\n                  : {}),\n              }}\n              ref={refs[idx]}\n            >\n              <a\n                href={!disabled ? `/node/${choice.to.ID}` : \"\"}\n                onClick={() =>\n                  window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n                }\n                style={{\n                  pointerEvents: !disabled ? \"auto\" : \"none\",\n                  color: !disabled\n                    ? loggedInAs && loggedInAs.unsafeMode\n                      ? palette[0]\n                      : palette[2]\n                    : \"grey\",\n                }}\n                onMouseEnter={(e) => {\n                  refs[idx].current.style.boxShadow = `0 0 6px ${palette[2]}`;\n                }}\n                onMouseLeave={(e) => {\n                  refs[idx].current.style.boxShadow = `0 0 3px ${palette[0]}`;\n                }}\n              >\n                <Card.Body style={{ cursor: \"pointer\", paddingTop: \"2em\" }}>\n                  <Card.Title>{choice.action}</Card.Title>\n                </Card.Body>\n              </a>\n              {choice.hidden || choice.suggestedBy.hidden ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This action is hidden, because it has been marked as\n                      unsafe! You can see it because you are{\" \"}\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n              {!choice.hidden &&\n              (choice.to.hidden || choice.to.owner.hidden) &&\n              !disabled ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page this action leads to is hidden, because it has\n                      been marked as unsafe! You will be able to see it because\n                      you are\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n              <DropdownButton\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                style={{\n                  position: \"absolute\",\n                  top: \"0px\",\n                  right: \"0px\",\n                }}\n                size=\"sm\"\n                drop=\"right\"\n                title={<span class=\"fa\">&#xf013;</span>}\n              >\n                <Dropdown.Item\n                  disabled={\n                    !loggedInAs ||\n                    (loggedInAs.screenName !== node.owner.screenName &&\n                      !loggedInAs.isAdmin)\n                  }\n                  onClick={() =>\n                    canon ? makeNonCanon(choice.ID) : makeCanon(choice.ID)\n                  }\n                >\n                  Make {canon ? \"Nonc\" : \"C\"}anon\n                </Dropdown.Item>\n                <Dropdown.Item\n                  disabled={\n                    !loggedInAs ||\n                    (loggedInAs.screenName !== choice.suggestedBy.screenName &&\n                      loggedInAs.screenName !== node.owner.screenName &&\n                      !loggedInAs.isAdmin)\n                  }\n                  onClick={() => removeSuggestion(choice.ID)}\n                >\n                  Delete\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() =>\n                    showModal(\n                      <EditChoiceModal\n                        choice={choice}\n                        loggedInAs={loggedInAs}\n                        fromNode={node}\n                        close={() => showModal(undefined)}\n                      />\n                    )\n                  }\n                  disabled={\n                    !(\n                      loggedInAs &&\n                      (loggedInAs.isAdmin ||\n                        (canon &&\n                          loggedInAs.screenName === node.owner.screenName) ||\n                        (!canon &&\n                          loggedInAs.screenName ===\n                            choice.suggestedBy.screenName))\n                    )\n                  }\n                >\n                  Edit\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => reportSuggestion(choice.ID)}>\n                  Report\n                </Dropdown.Item>\n              </DropdownButton>\n              <Card.Footer\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5] } }\n                  : {})}\n              >\n                <a\n                  href={`/node/${node.ID}`}\n                  style={{\n                    pointerEvents: loggedInAs ? \"auto\" : \"none\",\n                    color: loggedInAs\n                      ? choice.disliked\n                        ? \"red\"\n                        : loggedInAs.unsafeMode\n                        ? \"white\"\n                        : \"black\"\n                      : \"grey\",\n                  }}\n                  className=\"fa fa-thumbs-down\"\n                  onClick={() => dislike(idx)}\n                ></a>\n                {\" \" + (choice.score || 0) + \" \"}\n                <a\n                  href={`/node/${node.ID}`}\n                  style={{\n                    pointerEvents: loggedInAs ? \"auto\" : \"none\",\n                    color: loggedInAs\n                      ? choice.liked\n                        ? \"green\"\n                        : loggedInAs.unsafeMode\n                        ? \"white\"\n                        : \"black\"\n                      : \"grey\",\n                  }}\n                  className=\"fa fa-thumbs-up\"\n                  onClick={() => like(idx)}\n                ></a>\n                <br />\n                <small className=\"text-muted\">\n                  Suggested By:{\" \"}\n                  <a\n                    href={`/account/${choice.suggestedBy.screenName}`}\n                    style={{\n                      color:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[0]\n                          : palette[2],\n                    }}\n                  >\n                    <img\n                      src={\n                        choice.suggestedBy.profilePicURL\n                          ? choice.suggestedBy.profilePicURL\n                          : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                      }\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {choice.suggestedBy.screenName}\n                  </a>\n                </small>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n        {showingModal && Object.keys(showingModal).length > 0\n          ? showingModal\n          : \"\"}\n      </CardColumns>\n    );\n\n  return null;\n};\n\nexport default ChoiceColumns;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Container,\n  Button,\n  Alert,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\n\nimport PictureModal from \"../Modals/PictureModal\";\nimport EditNodeModal from \"../Modals/EditNodeModal\";\nimport SuggestChoiceModal from \"../Modals/SuggestChoiceModal\";\n\nimport ChoiceColumns from \"./ChoiceColumns\";\n\nimport { escape, palette, query_call, mutation_call } from \"../index\";\n\nconst Node = (props) => {\n  const { history, match, loggedInAs } = props;\n  const [showingModal, showModal] = useState(undefined);\n  const [node, setNode] = useState(undefined);\n  const BLURAMOUNT = 40;\n\n  const reportNode = () => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Node\",\n        reportingObjectID: node.ID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported page!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  useEffect(() => {\n    const pageID = escape(match.params.id);\n\n    if (!node || pageID !== node.ID) {\n      query_call(\n        \"getNode\",\n        { ID: pageID },\n        {\n          hidden: 0,\n          pictureURL: 0,\n          pictureUnsafe: 0,\n          fgColor: 0,\n          bgColor: 0,\n          ID: 0,\n          title: 0,\n          content: 0,\n          views: 0,\n          owner: { screenName: 0, profilePicURL: 0, hidden: 0 },\n          canonChoices: {\n            ID: 0,\n          },\n          nonCanonChoices: {\n            ID: 0,\n          },\n        },\n        (returnNode) => {\n          if (returnNode) setNode(returnNode);\n          else setNode(null);\n        }\n      );\n    }\n  });\n\n  if (node === undefined) {\n    return (\n      <Alert\n        variant={\n          (loggedInAs && loggedInAs.unsafeMode) ||\n          new Cookies().get(\"unsafeMode\") === \"true\"\n            ? \"dark\"\n            : \"light\"\n        }\n      >\n        <title>Loading Page...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (node === null)\n    return (\n      <Alert variant=\"danger\">\n        <title>Error! Node: {match.params.id}</title>\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  if (\n    node.hidden &&\n    (!loggedInAs ||\n      (node.owner.screenName !== loggedInAs.screenName &&\n        !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>Crowdventure! - {node.title}</title>\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the content has\n          been deemed unsafe. If you would like to see it, log in and turn on{\" \"}\n          <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  if (\n    node.owner.hidden &&\n    (!loggedInAs ||\n      (node.owner.screenName !== loggedInAs.screenName &&\n        !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>Crowdventure! - {node.title}</title>\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the author has\n          been flagged as unsafe for the general public. If you would like to\n          see it, log in and turn on <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>Crowdventure! - {node.title}</title>\n\n      {(node.hidden || node.owner.hidden) &&\n      loggedInAs &&\n      node.owner.screenName === loggedInAs.screenName &&\n      !loggedInAs.unsafeMode ? (\n        <Alert\n          variant=\"danger\"\n          dismissible\n          onClose={() => {\n            setNode({ ...node, hidden: false });\n          }}\n        >\n          <Alert.Heading>Unsafe!</Alert.Heading>\n          <p>\n            This page has been hidden from general users, because the content\n            has been deemed unsafe. Users in unsafe mode can see this page and\n            its content. Since you own this page, you can see it. If you believe\n            this page should be considered safe, click <a href=\"\">Here</a>.\n          </p>\n        </Alert>\n      ) : (\n        \"\"\n      )}\n\n      <h1 class=\"display-4 text-center\">{node.title}</h1>\n      {node.pictureURL ? (\n        <img\n          src={node.pictureURL}\n          onLoad={(e) => {\n            e.target.style.display = \"block\";\n          }}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n          }}\n          style={{\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            padding: \"1px\",\n            border: \"1px solid #eee\",\n            \"border-radius\": \"8px\",\n            width: \"90%\",\n            maxHeight: \"30vh\",\n            \"object-fit\": \"cover\",\n            cursor: \"pointer\",\n            ...(node.pictureUnsafe\n              ? {\n                  \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                  filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                }\n              : {}),\n          }}\n          onClick={() =>\n            showModal(\n              <PictureModal\n                loggedInAs={loggedInAs}\n                pictureURL={node.pictureURL}\n                title={node.title}\n                close={() => showModal(undefined)}\n              />\n            )\n          }\n        />\n      ) : (\n        \"\"\n      )}\n      <br />\n      <Container>\n        {node.content.split(\"\\n\").map((line) => (\n          <p style={{ textIndent: \"5%\" }}>{line}</p>\n        ))}\n      </Container>\n      <Container\n        className=\"row\"\n        style={{ paddingRight: \"0px\", paddingBottom: \"5px\" }}\n      >\n        <div class=\"col\">\n          <h3 class=\"text-muted\">Choices:</h3>\n        </div>\n        <div class=\"col\" style={{ paddingRight: \"0px\" }}>\n          <Button\n            onClick={() => {\n              history.back();\n              window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n            }}\n            size=\"lg\"\n            className=\"float-right\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Go back!\n          </Button>\n        </div>\n      </Container>\n      {node.canonChoices.length ? (\n        <ChoiceColumns node={node} loggedInAs={loggedInAs} canon={true} />\n      ) : (\n        <p className=\"text-muted\">\n          By decree of <strong>{node.owner.screenName}</strong>, this journey\n          ends here.\n        </p>\n      )}\n\n      <p />\n\n      <Container className=\"row\" style={{ paddingRight: \"0px\" }}>\n        <div class=\"col align-bottom\">\n          <h3 class=\"align-bottom text-muted\">Other options:</h3>\n        </div>\n        <div class=\"col text-right\" style={{ paddingRight: \"0px\" }}>\n          <small class=\"text-muted\">\n            Author:{\" \"}\n            <a\n              href={`/account/${node.owner.screenName}`}\n              style={{\n                color:\n                  loggedInAs && loggedInAs.unsafeMode ? palette[0] : palette[2],\n              }}\n            >\n              <img\n                src={\n                  node.owner.profilePicURL\n                    ? node.owner.profilePicURL\n                    : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                }\n                onError={(e) => {\n                  e.target.src =\n                    process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                }}\n                style={{\n                  border: \"1px solid #bbb\",\n                  height: \"2em\",\n                  width: \"2em\",\n                  \"object-fit\": \"cover\",\n                  \"border-radius\": \"50%\",\n                }}\n              />{\" \"}\n              {node.owner.screenName}{\" \"}\n            </a>{\" \"}\n            <br />\n            Views: {node.views}\n          </small>\n          {loggedInAs &&\n          (node.owner.screenName === loggedInAs.screenName ||\n            loggedInAs.isAdmin) ? (\n            <p>\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={() => {\n                  showModal(\n                    <EditNodeModal\n                      close={() => showModal(undefined)}\n                      node={node}\n                      loggedInAs={loggedInAs}\n                    />\n                  );\n                }}\n              >\n                Edit Page\n              </Button>\n            </p>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Container>\n      <p />\n      <OverlayTrigger\n        overlay={\n          !loggedInAs ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => {\n              showModal(\n                <SuggestChoiceModal\n                  loggedInAs={loggedInAs}\n                  fromNode={node}\n                  close={() => showModal(undefined)}\n                />\n              );\n            }}\n            disabled={!loggedInAs}\n            style={{\n              width: \"100%\",\n              pointerEvents: loggedInAs ? \"auto\" : \"none\",\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Suggest New Choice\n          </Button>\n        </span>\n      </OverlayTrigger>\n      <p />\n\n      {node.nonCanonChoices.length ? (\n        <ChoiceColumns node={node} loggedInAs={loggedInAs} canon={false} />\n      ) : (\n        <p className=\"text-muted\">\n          There are currently no options! You can help expand the story by\n          adding to it!\n        </p>\n      )}\n\n      <Container>\n        <Button\n          style={{ marginRight: \"0\", marginLeft: \"auto\", display: \"block\" }}\n          variant=\"danger\"\n          size=\"sm\"\n          onClick={reportNode}\n        >\n          Report Page\n        </Button>\n      </Container>\n\n      {showingModal ? showingModal : \"\"}\n    </Container>\n  );\n};\n\nexport default Node;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { mutation_call, query_call, escape, palette } from \"../index\";\n\nimport ConfirmModal from \"./ConfirmModal\";\n\nimport Cookies from \"universal-cookie\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst EditAccountModal = (props) => {\n  const {\n    screenName,\n    bio,\n    profilePicture,\n    close,\n    account,\n    setAccount,\n    setRedirect,\n    loggedInAs,\n  } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [showingModal, showModal] = useState(undefined);\n\n  const [bioField, setBioField] = useState(bio || \"\");\n  const [profilePictureField, setProfilePictureField] = useState(\n    profilePicture || \"\"\n  );\n  const [nameField, setNameField] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n  const [hidden, setHidden] = useState(account.hidden);\n  const [isAdmin, setAdmin] = useState(account.isAdmin);\n\n  const editPage = (checkedIfExists = false) => {\n    if (pass1 && pass1 !== pass2) {\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n      return;\n    }\n    const esBio = bioField.length > 0 ? `\"\"${escape(bioField, true)}\"\"` : null;\n    const esPicture =\n      profilePictureField.length > 0 ? escape(profilePictureField) : null;\n\n    const params = { screenName };\n    if (bioField !== bio) params.bio = esBio;\n    if (profilePictureField !== profilePicture)\n      params.profilePicURL = esPicture;\n    if (nameField !== screenName && !nameField.match(/^\\s*$/)) {\n      if (!checkedIfExists) {\n        const esScreenName = escape(nameField);\n        query_call(\n          \"getAccount\",\n          { screenName: esScreenName },\n          { screenName: 0 },\n          (res) => {\n            if (res) {\n              setInfo(\n                <div style={{ color: \"red\" }}>That account already exists!</div>\n              );\n            } else {\n              editPage(true);\n            }\n          }\n        );\n        return;\n      } else {\n        params.newScreenName = escape(nameField);\n      }\n    }\n    if (pass1) params.newPassword = escape(pass1);\n    if (hidden !== undefined) params.hidden = hidden;\n    if (isAdmin !== undefined) params.isAdmin = isAdmin;\n\n    mutation_call(\n      \"editAccount\",\n      params,\n      {\n        bio: 0,\n        screenName: 0,\n        profilePicURL: 0,\n        totalNodeViews: 0,\n        totalSuggestionScore: 0,\n        hidden: 0,\n        isAdmin: 0,\n        featuredNodes: {\n          owner: { screenName: 0, profilePicURL: 0 },\n          featured: 0,\n          hidden: 0,\n          ID: 0,\n          title: 0,\n          views: 0,\n          pictureURL: 0,\n          pictureUnsafe: 0,\n        },\n        nodes: {\n          owner: { screenName: 0, profilePicURL: 0 },\n          featured: 0,\n          hidden: 0,\n          ID: 0,\n          title: 0,\n          content: 0,\n          views: 0,\n          pictureURL: 0,\n          pictureUnsafe: 0,\n        },\n      },\n      // I shouldnt need any of the parameters if it just reloads the page\n      (res) => {\n        if (params.newScreenName) {\n          setRedirect(<Redirect to={`/account/${params.newScreenName}`} />);\n          new Cookies().set(\"account\", params.newScreenName, { path: \"/\" });\n          window.location.reload(false);\n        }\n        if (params.isAdmin !== account.isAdmin) {\n          window.location.reload(false);\n        }\n        setAccount(res);\n        setShow(false);\n        close();\n      }\n    );\n  };\n\n  const deleteAccount = () => {\n    new Cookies().set(\"account\", \"\", { path: \"/\" });\n    mutation_call(\"deleteAccount\", { screenName }, {}, () => {\n      setRedirect(<Redirect to=\"/\" />);\n      window.location.reload(false);\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setPass1(\"\");\n      setNameField(\"\");\n    }, 1000);\n  }, []);\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Account</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {profilePicture ? (\n            <img\n              src={profilePicture}\n              alt={screenName + \"'s Profile Pic\"}\n              onError={(e) => {\n                e.target.style.display = \"none\";\n                setInfo(\n                  <span style={{ color: \"red\" }}>Picture not found!</span>\n                );\n              }}\n              style={{\n                opacity: profilePicture === profilePictureField ? 1 : 0.2,\n                width: \"100%\",\n                \"object-fit\": \"contain\",\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n          <Form.Label>Profile Pic URL:</Form.Label>\n          <Form.Control\n            value={profilePictureField}\n            onChange={(e) => setProfilePictureField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          <Form.Label>Bio:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            value={bioField}\n            onChange={(e) => setBioField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n\n          <Form.Label>Change your screen name:</Form.Label>\n          <Form.Control\n            placeholder={screenName}\n            value={nameField}\n            onChange={(e) => setNameField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n\n          <Form.Label>Change your password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"••••••••\"\n            value={pass1}\n            onChange={(e) => setPass1(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          {pass1 ? (\n            <>\n              <Form.Label>Confirm password:</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"••••••••\"\n                value={pass2}\n                onChange={(e) => setPass2(e.target.value)}\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                  : {})}\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n          {loggedInAs && loggedInAs.isAdmin ? (\n            <>\n              <Form.Label>Admin Controls:</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                checked={hidden || false}\n                onChange={(e) => setHidden(e.target.checked)}\n                label=\"Account should be hidden\"\n                id=\"hide\"\n              />\n              <Form.Check\n                type=\"checkbox\"\n                checked={isAdmin || false}\n                onChange={(e) => setAdmin(e.target.checked)}\n                label=\"Account is an admin\"\n                id=\"adm\"\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() => editPage()}\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Account\n          </Button>\n          <Button\n            onClick={() => {\n              showModal(\n                <ConfirmModal\n                  loggedInAs={loggedInAs}\n                  title=\"Delete Account\"\n                  content=\"This will erase all content created by this account, including all pages and suggested choices, and liked and disliked content. Are you sure you wish to continue?\"\n                  onConfirm={() => deleteAccount()}\n                  close={() => {\n                    showModal(undefined);\n                  }}\n                />\n              );\n            }}\n            variant=\"danger\"\n          >\n            Delete Account\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\nexport default EditAccountModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst ConfirmModal = (props) => {\n  const { onConfirm, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n\n  const [understand, setUnderstand] = useState(false);\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Turn on Unsafe Mode</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        Unsafe Mode allows you to see <b>ALL</b> of the content on Crowdventure,\n        including content that has been classified as \"unsafe\". Before you can\n        continue, you must acknowledge and agree to the terms of service:\n        <p />\n        <Form>\n          <Form.Control\n            disabled\n            as=\"textarea\"\n            rows=\"5\"\n            value={`Please read these terms of service (\"terms\", \"terms of service\") carefully before using the Crowdventure website (the \"service\").\n            \nI. Conditions of Use\n  We will provide their services to you, which are subject to the conditions stated below in this document. Every time you visit this website, use its services or make a purchase, you accept the following conditions. This is why we urge you to read them carefully.\n            \nII. Privacy Policy\n  Before you continue using our website we advise you to read our privacy policy [link to privacy policy] regarding our user data collection. It will help you better understand our practices.\n            \nIII. Copyright\n  Content published on this website (digital downloads, images, texts, graphics, logos) is the property of Crowdventure and/or its content creators and protected by international copyright laws. The entire compilation of the content found on this website is the exclusive property of [name], with copyright authorship for this compilation by [name].\n            \nIV. Communication\n  The entire communication with us is electronic. Every time you send us an email or visit our website, you are going to be communicating with us. You hereby consent to receive communications from us. If you subscribe to the news on our website, you are going to receive regular emails from us. We will continue to communicate with you by posting news and notices on our website and by sending you emails. You also agree that all notices, disclosures, agreements and other communications we provide to you electronically meet the legal requirements that such communications be in writing.\n            \nV. Applicable Law\n  By visiting this website, you agree that the laws of the United States of America, without regard to principles of conflict laws, will govern these terms of service, or any dispute of any sort that might come between [name] and you, or its business partners and associates.\n            \nVI. Disputes\n  Any dispute related in any way to your visit to this website or to products you purchase from us shall be arbitrated by state or federal court [your location] and you consent to exclusive jurisdiction and venue of such courts.\n            \nVII. Comments, Reviews, and Emails\n  Visitors may post content as long as it is not obscene, illegal, defamatory, threatening, infringing of intellectual property rights, invasive of privacy or injurious in any other way to third parties. Content has to be free of software viruses, political campaign, and commercial solicitation.\n  We reserve all rights (but not the obligation) to remove and/or edit such content. When you post your content, you grant Crowdventure non-exclusive, royalty-free and irrevocable right to use, reproduce, publish, modify such content throughout the world in any media.\n            \nVIII. License and Site Access\n  We grant you a limited license to access and make personal use of this website. You are not allowed to download or modify it. This may be done only with written consent from us.\n            \nIX. User Account\n  If you are an owner of an account on this website, you are solely responsible for maintaining the confidentiality of your private user details (username and password). You are responsible for all activities that occur under your account or password.\n  We reserve all rights to terminate accounts, edit or remove content and cancel orders in their sole discretion.`}\n          />\n          <Form.Check\n            style={{ float: \"right\" }}\n            type=\"checkbox\"\n            label=\"I agree to the terms of service.\"\n            checked={understand}\n            id=\"check\"\n            onChange={(e) => {\n              setUnderstand(e.target.checked);\n            }}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          variant=\"primary\"\n          onClick={onConfirm}\n          disabled={!understand}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Turn on Unsafe Mode\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useState, createRef } from \"react\";\n\nimport { mutation_call, palette } from \"./index\";\n\nimport {\n  CardColumns,\n  Card,\n  OverlayTrigger,\n  Tooltip,\n  DropdownButton,\n  Dropdown,\n  Alert,\n  Container,\n} from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport ConfirmModal from \"./Modals/ConfirmModal\";\n\nconst NodeViewer = (props) => {\n  const { nodes, loggedInAs } = props;\n\n  const [showingModal, showModal] = useState(undefined);\n  const refs = [];\n  const BLURAMOUNT = 20;\n\n  const reportNode = (nodeID) => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Node\",\n        reportingObjectID: nodeID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported page!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  const hidePage = (node) => {\n    mutation_call(\n      \"editNode\",\n      { nodeID: node.ID, hidden: !node.hidden },\n      { title: 0 },\n      () => window.location.reload(false)\n    );\n  };\n\n  const featurePage = (node, alreadyFeatured) => {\n    mutation_call(\n      \"editNode\",\n      { nodeID: node.ID, featured: !alreadyFeatured },\n      { title: 0 },\n      () => window.location.reload(false)\n    );\n  };\n\n  const deletePage = (node) => {\n    mutation_call(\"deleteNode\", { nodeID: node.ID }, 0, () => {\n      window.location.reload(false);\n    });\n  };\n\n  return nodes ? (\n    <CardColumns style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n      <Container />\n      {nodes\n        .filter(\n          (node) =>\n            (loggedInAs &&\n              (loggedInAs.unsafeMode ||\n                loggedInAs.screenName === node.owner.screenName)) ||\n            !node.hidden\n        )\n        .map((node, i) => {\n          refs.push(createRef());\n          return (\n            <Card\n              className=\"mt-2\"\n              style={{\n                boxShadow: `0 0 3px ${palette[0]}`,\n                overflow: \"hidden\",\n                ...(loggedInAs && loggedInAs.unsafeMode\n                  ? { backgroundColor: palette[4] }\n                  : {}),\n              }}\n              ref={refs[i]}\n            >\n              <a\n                href={`/#/node/${node.ID}`}\n                style={{\n                  color:\n                    loggedInAs && loggedInAs.unsafeMode\n                      ? palette[0]\n                      : palette[2],\n                }}\n                onMouseEnter={(e) => {\n                  refs[i].current.style.boxShadow = `0 0 6px ${palette[2]}`;\n                }}\n                onMouseLeave={(e) => {\n                  refs[i].current.style.boxShadow = `0 0 3px ${palette[0]}`;\n                }}\n              >\n                {node.pictureURL ? (\n                  <Card.Header\n                    style={{\n                      backgroundColor:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[5]\n                          : \"white\",\n                      padding: \"1px\",\n                    }}\n                  >\n                    <Card.Img\n                      src={node.pictureURL}\n                      style={{\n                        \"max-height\": \"30vh\",\n                        \"object-fit\": \"cover\",\n                        ...(node.pictureUnsafe\n                          ? {\n                              \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                              filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                            }\n                          : {}),\n                      }}\n                      onError={(e) => {\n                        e.target.parentNode.style.display = \"none\";\n                      }}\n                    />\n                  </Card.Header>\n                ) : (\n                  \"\"\n                )}\n                <Card.Body\n                  className=\"text-center\"\n                  style={{ paddingTop: \"2em\" }}\n                >\n                  <Card.Title>{node.title}</Card.Title>\n                </Card.Body>\n              </a>\n\n              {node.featured && node && node.owner ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page has been starred by {node.owner.screenName}!\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"5px\",\n                      color: \"yellow\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf005;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n\n              {node.hidden ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page is hidden, because it has been marked as unsafe!\n                      You can see it because you are{\" \"}\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: (node.featured ? \"2\" : \"\") + \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n\n              <DropdownButton\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n                size=\"sm\"\n                drop=\"right\"\n                title={<span class=\"fa\">&#xf013;</span>}\n              >\n                {loggedInAs && node.featured !== undefined ? (\n                  <>\n                    <Dropdown.Item\n                      onClick={() => featurePage(node, node.featured)}\n                      disabled={loggedInAs.screenName !== node.owner.screenName}\n                    >\n                      {node.featured ? \"Un-f\" : \"F\"}eature page\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={() =>\n                        showModal(\n                          <ConfirmModal\n                            loggedInAs={loggedInAs}\n                            close={() => showModal(undefined)}\n                            onConfirm={() => deletePage(node)}\n                            title=\"Delete Page\"\n                            content=\"This will erase all suggested choices of this page, and their associated scores. This will NOT delete sub-pages of this page. Are you sure you wish to continue?\"\n                          />\n                        )\n                      }\n                      disabled={loggedInAs.screenName !== node.owner.screenName}\n                    >\n                      Delete\n                    </Dropdown.Item>\n                    <Dropdown.Item disabled>Make Private</Dropdown.Item>\n                    <Dropdown.Divider />\n                  </>\n                ) : (\n                  \"\"\n                )}\n                <Dropdown.Item onClick={() => reportNode(node.ID)}>\n                  Report\n                </Dropdown.Item>\n                {loggedInAs && loggedInAs.isAdmin ? (\n                  <>\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={() => hidePage(node)}>\n                      {node.hidden ? \"Un-h\" : \"H\"}ide page\n                    </Dropdown.Item>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </DropdownButton>\n              <Card.Footer\n                className=\"text-muted text-center\"\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5] } }\n                  : {})}\n              >\n                <small>\n                  Author:{\" \"}\n                  <a\n                    href={`/#/account/${node.owner.screenName}`}\n                    style={{\n                      color:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[0]\n                          : palette[2],\n                    }}\n                  >\n                    <img\n                      src={\n                        node.owner.profilePicURL\n                          ? node.owner.profilePicURL\n                          : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                      }\n                      alt={node.owner.screenName + \" Profile Pic\"}\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {node.owner.screenName}\n                  </a>\n                  <br />\n                  Views:{\" \" + node.views}\n                </small>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n      {showingModal || \"\"}\n    </CardColumns>\n  ) : (\n    <Alert\n      variant={\n        (loggedInAs && loggedInAs.unsafeMode) ||\n        new Cookies().get(\"unsafeMode\") === \"true\"\n          ? \"dark\"\n          : \"light\"\n      }\n    >\n      <Alert.Heading>Loading...</Alert.Heading>\n    </Alert>\n  );\n};\n\nexport default NodeViewer;\n","import React, { useState, useEffect } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport {\n  Container,\n  Button,\n  Alert,\n  OverlayTrigger,\n  Tooltip,\n  Form,\n} from \"react-bootstrap\";\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\n\nimport { escape, query_call, palette, mutation_call } from \"./index\";\nimport CreateNodeModal from \"./Modals/CreateNodeModal\";\nimport EditAccountModal from \"./Modals/EditAccountModal\";\nimport PictureModal from \"./Modals/PictureModal\";\nimport UnsafeModal from \"./Modals/UnsafeModal\";\n\nimport NodeViewer from \"./NodeViewer\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst Account = (props) => {\n  const { loggedInAs, setLoggedInAs, match } = props;\n\n  const [redirect, setRedirect] = useState(undefined);\n  const [account, setAccount] = useState(undefined);\n  const [showingModal, showModal] = useState(undefined);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchedNodes, setSearchedNodes] = useState([]);\n\n  const reportAccount = () => {\n    if (account)\n      mutation_call(\n        \"createFeedback\",\n        {\n          ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n          info: \"This is inappropriate\",\n          reportingObjectType: \"Account\",\n          reportingObjectID: account.screenName,\n        },\n        { info: 0, reporting: 0 },\n        () => {\n          alert(\"Successfully reported account!\");\n          window.location.reload(false);\n        }\n      );\n  };\n\n  useEffect(() => {\n    const pageID = escape(match.params.id);\n    if (!account || pageID !== account.screenName) {\n      query_call(\n        \"getAccount\",\n        { screenName: pageID },\n        {\n          bio: 0,\n          screenName: 0,\n          profilePicURL: 0,\n          totalNodeViews: 0,\n          totalSuggestionScore: 0,\n          hidden: 0,\n          isAdmin: 0,\n          featuredNodes: {\n            owner: { screenName: 0, profilePicURL: 0 },\n            featured: 0,\n            hidden: 0,\n            ID: 0,\n            title: 0,\n            views: 0,\n            pictureURL: 0,\n            pictureUnsafe: 0,\n          },\n          nodes: {\n            owner: { screenName: 0, profilePicURL: 0 },\n            featured: 0,\n            hidden: 0,\n            ID: 0,\n            title: 0,\n            content: 0,\n            views: 0,\n            pictureURL: 0,\n            pictureUnsafe: 0,\n          },\n        },\n        (res) => {\n          setAccount(res);\n          setSearchQuery(\"\");\n          setSearchedNodes([]);\n        }\n      );\n    }\n  });\n\n  if (account === undefined) {\n    return (\n      <Alert\n        variant={\n          (loggedInAs && loggedInAs.unsafeMode) ||\n          new Cookies().get(\"unsafeMode\") === \"true\"\n            ? \"dark\"\n            : \"light\"\n        }\n      >\n        <title>Loading Account...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (account === null)\n    return (\n      <Alert variant=\"danger\">\n        <title>Error! Account: {match.params.id}</title>\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  if (\n    account.hidden &&\n    (!loggedInAs ||\n      (account.screenName !== loggedInAs.screenName && !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>{account.screenName} on Crowdventure!</title>\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the content has\n          been deemed unsafe. If you would like to see it, log in and turn on{\" \"}\n          <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>{account.screenName} on Crowdventure!</title>\n      {account.hidden &&\n      loggedInAs &&\n      account.screenName === loggedInAs.screenName &&\n      !loggedInAs.unsafeMode ? (\n        <Alert\n          variant=\"danger\"\n          dismissible\n          onClose={() => {\n            setAccount({ ...node, hidden: false });\n          }}\n        >\n          <Alert.Heading>Unsafe!</Alert.Heading>\n          <p>\n            This page has been hidden from general users, because the content\n            has been deemed unsafe. Users in unsafe mode can see this page and\n            its content. Since you own this page, you can see it. If you believe\n            this page should be considered safe, click <a href=\"\">Here</a>.\n          </p>\n        </Alert>\n      ) : (\n        \"\"\n      )}\n\n      <h1>\n        <img\n          src={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          alt={account.screenName + \" Profile Pic\"}\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            border: \"1px solid #bbb\",\n            height: \"3em\",\n            width: \"3em\",\n            \"object-fit\": \"cover\",\n            \"border-radius\": \"50%\",\n            \"margin-right\": \"5px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            showModal(\n              <PictureModal\n                loggedInAs={loggedInAs}\n                title={account.screenName}\n                pictureURL={\n                  account.profilePicURL\n                    ? account.profilePicURL\n                    : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                }\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n        />{\" \"}\n        <span className=\"display-4 align-middle\">{account.screenName}</span>\n      </h1>\n\n      {account.bio ||\n      (loggedInAs && loggedInAs.screenName === account.screenName) ? (\n        <Container>\n          {account.bio\n            ? account.bio\n                .split(\"\\n\")\n                .map((line) => <p style={{ textIndent: \"5%\" }}>{line}</p>)\n            : \"\"}\n          {loggedInAs && loggedInAs.screenName === account.screenName ? (\n            <p style={{ textIndent: \"1%\" }} class=\"text-muted\">\n              Unsafe Mode:{\" \"}\n              <BootstrapSwitchButton\n                checked={loggedInAs.unsafeMode}\n                onstyle=\"secondary\"\n                size=\"sm\"\n                onChange={(checked) => {\n                  if (checked) {\n                    showModal(\n                      <UnsafeModal\n                        close={() => showModal(undefined)}\n                        loggedInAs={loggedInAs}\n                        onConfirm={() => {\n                          new Cookies().set(\"unsafeMode\", true, {\n                            path: \"/\",\n                          });\n                          setLoggedInAs({\n                            ...loggedInAs,\n                            unsafeMode: true,\n                          });\n                          showModal(undefined);\n                        }}\n                      />\n                    );\n                  } else {\n                    new Cookies().set(\"unsafeMode\", false, {\n                      path: \"/\",\n                    });\n                    setLoggedInAs({\n                      ...loggedInAs,\n                      unsafeMode: false,\n                    });\n                  }\n                }}\n              />\n              <OverlayTrigger\n                overlay={\n                  <Tooltip id=\"tooltip-unsafe\">\n                    Unsafe mode allows you to see all content on Crowdventure,\n                    including content that has been flagged as unsafe for the\n                    general public!\n                  </Tooltip>\n                }\n              >\n                <Button\n                  style={{\n                    backgroundColor: \"#00000000\",\n                    borderColor: \"#00000000\",\n                    borderRadius: \"50%\",\n                    color: loggedInAs.unsafeMode ? \"white\" : \"black\",\n                  }}\n                  size=\"xs\"\n                >\n                  <span className=\"fa fa-info-circle\" />\n                </Button>\n              </OverlayTrigger>\n            </p>\n          ) : (\n            \"\"\n          )}\n        </Container>\n      ) : (\n        \"\"\n      )}\n\n      <Container>\n        {loggedInAs &&\n        (loggedInAs.screenName === account.screenName || loggedInAs.isAdmin) ? (\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              showModal(\n                <EditAccountModal\n                  account={account}\n                  loggedInAs={loggedInAs}\n                  screenName={account.screenName}\n                  bio={account.bio}\n                  profilePicture={account.profilePicURL}\n                  setAccount={setAccount}\n                  setRedirect={setRedirect}\n                  close={() => showModal(undefined)}\n                />\n              );\n            }}\n            size=\"sm\"\n          >\n            Edit Account\n          </Button>\n        ) : (\n          \"\"\n        )}{\" \"}\n        {loggedInAs && loggedInAs.screenName === account.screenName ? (\n          <Button\n            size=\"sm\"\n            onClick={() => {\n              new Cookies().set(\"account\", \"\", { path: \"/\" });\n              new Cookies().set(\"unsafeMode\", \"false\", { path: \"/\" });\n              window.location.reload(false);\n            }}\n            variant=\"secondary\"\n          >\n            Log out\n          </Button>\n        ) : (\n          \"\"\n        )}\n        <div style={{ float: \"right\" }} class=\"text-muted\">\n          Total views: {account.totalNodeViews} Total score:{\" \"}\n          {account.totalSuggestionScore}\n        </div>\n      </Container>\n      <br />\n\n      {loggedInAs && loggedInAs.screenName === account.screenName ? (\n        <Button\n          onClick={() => {\n            showModal(\n              <CreateNodeModal\n                close={() => showModal(undefined)}\n                loggedInAs={loggedInAs}\n                featured={true}\n                callback={(res) =>\n                  setRedirect(<Redirect to={`/node/${res.ID}`} />)\n                }\n              />\n            );\n          }}\n          style={{\n            width: \"100%\",\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Create a New Adventure!\n        </Button>\n      ) : (\n        \"\"\n      )}\n\n      <p />\n\n      <h3>Featured Pages:</h3>\n      <NodeViewer nodes={account.featuredNodes} loggedInAs={loggedInAs} />\n      <h3>Search All Pages Authored by {account.screenName}:</h3>\n      <Form>\n        <Form.Control\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5], color: \"white\" } }\n            : {})}\n          value={searchQuery}\n          placeholder={\"Search for a page...\"}\n          onChange={(e) => {\n            setSearchQuery(e.target.value);\n            if (e.target.value.length >= 2) {\n              setSearchedNodes([\n                ...account.nodes.filter((node) =>\n                  node.title\n                    .toLowerCase()\n                    .includes(e.target.value.toLowerCase())\n                ),\n                ...account.nodes.filter(\n                  (node) =>\n                    !node.title\n                      .toLowerCase()\n                      .includes(e.target.value.toLowerCase()) &&\n                    node.content\n                      .toLowerCase()\n                      .includes(e.target.value.toLowerCase())\n                ),\n              ]);\n            } else {\n              setSearchedNodes([]);\n            }\n          }}\n        />\n      </Form>\n      {searchQuery ? (\n        <NodeViewer nodes={searchedNodes} loggedInAs={loggedInAs} />\n      ) : (\n        \"\"\n      )}\n\n      <Container>\n        <Button\n          style={{ marginRight: \"0\", marginLeft: \"auto\", display: \"block\" }}\n          variant=\"danger\"\n          size=\"sm\"\n          onClick={reportAccount}\n        >\n          Report Account\n        </Button>\n      </Container>\n\n      {showingModal || \"\"}\n      {redirect || \"\"}\n    </Container>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nimport NodeViewer from \"./NodeViewer\";\n\nimport { query_call, palette } from \"./index\";\nimport { Redirect } from \"react-router-dom\";\nimport CreateNodeModal from \"./Modals/CreateNodeModal\";\n\nconst Home = (props) => {\n  const { loggedInAs } = props;\n\n  const [topNodes, setTopNodes] = useState(undefined);\n  const [showingModal, showModal] = useState(undefined);\n  const [redirect, setRedirect] = useState(undefined);\n\n  useEffect(() => {\n    query_call(\n      \"featuredNodes\",\n      {},\n      {\n        hidden: 0,\n        ID: 0,\n        title: 0,\n        owner: { screenName: 0, profilePicURL: 0 },\n        views: 0,\n        size: 0,\n        pictureURL: 0,\n        pictureUnsafe: 0,\n      },\n      (res) => setTopNodes(res)\n    );\n  }, []);\n\n  return (\n    <Container>\n      <title>Crowdventure!</title>\n      <h1 className=\"display-4 text-center\">Welcome!</h1>\n      <Container className=\"text-center\">\n        Crowdventure is a Crowd-Sourced\n        Choose-and-Create-Your-Own-Adventure-Game!\n      </Container>\n      <p />\n\n      <OverlayTrigger\n        overlay={\n          !loggedInAs ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => {\n              showModal(\n                <CreateNodeModal\n                  featured={true}\n                  loggedInAs={loggedInAs}\n                  close={() => showModal(undefined)}\n                  callback={(res) =>\n                    setRedirect(<Redirect to={`/node/${res.ID}`} />)\n                  }\n                />\n              );\n            }}\n            disabled={!loggedInAs}\n            style={{\n              width: \"100%\",\n              pointerEvents: loggedInAs ? \"auto\" : \"none\",\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Create a New Adventure!\n          </Button>\n        </span>\n      </OverlayTrigger>\n      <p />\n\n      <h3>Featured Pages:</h3>\n      <NodeViewer nodes={topNodes} loggedInAs={loggedInAs} />\n      {showingModal || \"\"}\n      {redirect || \"\"}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nimport Cookies from \"universal-cookie\";\n\nconst LoginModal = (props) => {\n  const { loggedInAs, setLoggedInAs, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(password);\n\n    mutation_call(\n      \"loginAccount\",\n      { screenName: esScreenName, password: esPass },\n      { screenName: 0, profilePicURL: 0, isAdmin: 0 },\n      (res) => {\n        if (res) {\n          new Cookies().set(\"account\", screenName, { path: \"/\" });\n          setLoggedInAs(res);\n          setShow(false);\n          close();\n        } else {\n          setInfo(\n            <div style={{ color: \"red\" }}>\n              That account does not exist or the password did not match!\n            </div>\n          );\n        }\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Log in</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Screen Name:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={screenName}\n            onChange={(e) => setScreenName(e.target.value)}\n          />\n          <Form.Label>Password:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            variant=\"primary\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n            onClick={() =>\n              screenName\n                ? password\n                  ? login()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Please enter your screenName!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Please enter your password!\n                    </span>\n                  )\n            }\n          >\n            Log in\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default LoginModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { query_call, mutation_call, palette } from \"../index\";\n\nimport Cookies from \"universal-cookie\";\n\nconst SignUpModal = (props) => {\n  const { loggedInAs, setLoggedInAs, close } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n\n  const handleSubmitSignUp = () => {\n    if (pass1 !== pass2)\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n    else {\n      const esScreenName = escape(screenName);\n      query_call(\n        \"getAccount\",\n        { screenName: esScreenName },\n        { screenName: 0 },\n        (res) => {\n          if (res) {\n            setInfo(\n              <div style={{ color: \"red\" }}>That account already exists!</div>\n            );\n          } else {\n            createAccount();\n          }\n        }\n      );\n    }\n  };\n\n  const createAccount = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(pass1);\n    mutation_call(\n      \"createAccount\",\n      { screenName: esScreenName, password: esPass },\n      { screenName: 0, profilePicURL: 0, isAdmin: 0 },\n      (res) => {\n        if (res) {\n          new Cookies().set(\"account\", screenName, { path: \"/\" });\n          setLoggedInAs(res);\n          setShow(false);\n          close();\n        }\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Sign Up for Crowdventure!</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Group>\n            <Form.Label>Screen Name:</Form.Label>\n            <Form.Control\n              value={screenName}\n              onChange={(e) => setScreenName(e.target.value)}\n            />\n            <Form.Label>Create Password:</Form.Label>\n            <Form.Control\n              {...(loggedInAs && loggedInAs.unsafeMode\n                ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                : {})}\n              type=\"password\"\n              value={pass1}\n              onChange={(e) => setPass1(e.target.value)}\n            />\n            <Form.Label>Confirm Password:</Form.Label>\n            <Form.Control\n              {...(loggedInAs && loggedInAs.unsafeMode\n                ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                : {})}\n              type=\"password\"\n              value={pass2}\n              onChange={(e) => setPass2(e.target.value)}\n            />\n          </Form.Group>\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            variant=\"primary\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n            onClick={() =>\n              screenName\n                ? pass1\n                  ? handleSubmitSignUp()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Please enter a screen name!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Please enter a password!\n                    </span>\n                  )\n            }\n          >\n            Sign Up\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default SignUpModal;\n","import React, { useState } from \"react\";\nimport { Navbar, Button } from \"react-bootstrap\";\n\nimport LoginModal from \"./Modals/LoginModal\";\nimport SignUpModal from \"./Modals/SignUpModal\";\n\nconst AccountManager = (props) => {\n  const { loggedInAs, setLoggedInAs } = props;\n  const [showingModal, showModal] = useState(undefined);\n\n  if (loggedInAs === undefined || loggedInAs === null) {\n    return (\n      <Navbar.Text>\n        You are not logged in.{\" \"}\n        <Button\n          variant=\"light\"\n          onClick={() => {\n            showModal(\n              <LoginModal\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n          size=\"sm\"\n        >\n          Log In\n        </Button>{\" \"}\n        or{\" \"}\n        <Button\n          variant=\"light\"\n          onClick={() => {\n            showModal(\n              <SignUpModal\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n          size=\"sm\"\n        >\n          Sign Up\n        </Button>\n        {showingModal || \"\"}\n      </Navbar.Text>\n    );\n  }\n\n  return (\n    <Navbar.Text\n      style={{ color: loggedInAs && loggedInAs.unsafeMode ? \"grey\" : \"\" }}\n    >\n      You are logged in as:{\" \"}\n      <a\n        href={`/#/account/${loggedInAs.screenName}`}\n        style={{ color: loggedInAs && loggedInAs.unsafeMode ? \"white\" : \"\" }}\n      >\n        <img\n          src={\n            loggedInAs.profilePicURL\n              ? loggedInAs.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            border: \"1px solid #bbb\",\n            height: \"2em\",\n            width: \"2em\",\n            \"object-fit\": \"cover\",\n            \"border-radius\": \"50%\",\n          }}\n        />{\" \"}\n        {loggedInAs.screenName}\n      </a>\n    </Navbar.Text>\n  );\n};\n\nexport default AccountManager;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Node from \"./Node/Node\";\nimport Account from \"./Account\";\nimport Home from \"./Home\";\nimport AccountManager from \"./AccountManager\";\n\nimport { Navbar, Container } from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport history from \"history/browser\";\n\nimport { mutation_call, palette } from \"./index\";\nconst packageJson = require(\"../package.json\");\n\nconst App = () => {\n  const [loggedInAs, setLoggedInAs] = useState(undefined);\n\n  useEffect(() => {\n    if (loggedInAs === undefined) {\n      const cookies = new Cookies();\n      const savedAccount = escape(cookies.get(\"account\"));\n\n      if (!savedAccount || savedAccount === \"\")\n        cookies.set(\"unsafeMode\", \"false\", { path: \"/\" });\n\n      mutation_call(\n        \"loginAccount\",\n        { screenName: savedAccount },\n        { screenName: 0, profilePicURL: 0, isAdmin: 0 },\n        (res) => {\n          if (res) {\n            res.unsafeMode = cookies.get(\"unsafeMode\") === \"true\";\n            setLoggedInAs(res);\n          } else {\n            cookies.set(\"account\", \"\", { path: \"/\" });\n            cookies.set(\"unsafeMode\", \"false\", { path: \"/\" });\n          }\n        }\n      );\n    }\n\n    if (\n      new Cookies().get(\"unsafeMode\") === \"true\" ||\n      (loggedInAs && loggedInAs.unsafeMode)\n    ) {\n      document.getElementById(\"root\").style.backgroundImage = `linear-gradient(\n      to right,\n      rgb(158, 232, 255),\n      ${palette[3]} 10%,\n      ${palette[3]} 90%,\n      rgb(158, 232, 255)\n    )`;\n      document.getElementById(\"root\").style.color = \"rgb(225, 240, 255)\";\n    } else {\n      document.getElementById(\"root\").style.backgroundImage = `linear-gradient(\n        to right,\n        rgb(158, 232, 255),\n        rgb(245,250,255) 10%,\n        rgb(245,250,255) 90%,\n        rgb(158, 232, 255)\n      )`;\n      document.getElementById(\"root\").style.color = \"\";\n    }\n  });\n\n  return (\n    <Container>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img\n            href=\"/\"\n            src={process.env.PUBLIC_URL + \"/logo.png\"}\n            alt=\"Crowdventure Logo\"\n            style={{ width: \"100%\" }}\n          />\n        </Navbar.Brand>\n        <a href=\"https://github.com/benjaminjkern/crowdventure/blob/master/CHANGELOG.md\">\n          <small class=\"text-muted\">Version: {packageJson.version}</small>\n        </a>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"bg-light\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n          <AccountManager\n            loggedInAs={loggedInAs}\n            setLoggedInAs={setLoggedInAs}\n          />\n        </Navbar.Collapse>\n      </Navbar>\n      <HashRouter>\n        <Switch>\n          <Route\n            path=\"/\"\n            render={(props) => <Home {...props} loggedInAs={loggedInAs} />}\n            exact\n          />\n          <Route\n            path=\"/node/:id\"\n            render={(props) => (\n              <Node {...props} loggedInAs={loggedInAs} history={history} />\n            )}\n          />\n          <Route\n            path=\"/account/:id\"\n            render={(props) => (\n              <Account\n                {...props}\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n              />\n            )}\n          />\n        </Switch>\n      </HashRouter>\n      <Navbar className=\"text-right\">\n        <small class=\"text-muted\">@ 2020 Copyright: (MIT) Benjamin Kern</small>\n      </Navbar>\n      <title>Crowdventure! - Page not found!</title>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nconst { createApolloFetch } = require(\"apollo-fetch\");\n\nconst app_fetch = createApolloFetch({\n  uri: require(\"./apolloURL.js\").backendURL,\n});\n\nconst query_call = (query, parameters, attributes, callback) => {\n  app_fetch({\n    query: `query{${query}${formatParameters(parameters)}${formatAttributes(\n      attributes\n    )}}`,\n  }).then((res, err) => {\n    if (err) alert(err);\n    if (res.data) callback(res.data[query]);\n    else alert(\"Something went wrong when calling query\");\n  });\n};\n\nconst mutation_call = (query, parameters, attributes, callback, setInfo) => {\n  if (setInfo)\n    setInfo(\n      `mutation{${query}${formatParameters(parameters)}${formatAttributes(\n        attributes\n      )}}`\n    );\n  app_fetch({\n    query: `mutation{${query}${formatParameters(parameters)}${formatAttributes(\n      attributes\n    )}}`,\n  }).then((res, err) => {\n    if (err) alert(err);\n    if (res.data) callback(res.data[query]);\n    else alert(\"Something went wrong when calling mutation\");\n  });\n};\n\nconst formatParameters = (parameters) =>\n  Object.keys(parameters).length > 0\n    ? `(${Object.keys(parameters)\n        .map(\n          (param) =>\n            `${param}:${typeof parameters[param] === \"string\" ? '\"' : \"\"}${\n              parameters[param]\n            }${typeof parameters[param] === \"string\" ? '\"' : \"\"}`\n        )\n        .join(\",\")})`\n    : \"\";\n\nconst formatAttributes = (attributes) =>\n  Object.keys(attributes).length > 0\n    ? `{${Object.keys(attributes)\n        .map((attribute) => attribute + formatAttributes(attributes[attribute]))\n        .join(\",\")}}`\n    : \"\";\n\nconst escape = (text, newlines = false) =>\n  text\n    ? newlines\n      ? text.replace(/\"$/, ' \" ').replace(/^\"/, ' \" ').replace(/\"\"\"/g, ` \"\" \" `)\n      : text.replace(/\\n/g, \"\").replace(/\\\\/g, `\\\\\\\\`).replace(/\"/g, `\\\\\"`)\n    : text;\n\nconst palette = [\n  \"rgb(100, 180, 244)\", // original\n  \"rgb(158, 232, 255)\", // light\n  \"rgb(80, 160, 224)\", //dark\n  \"rgb(34,34,34)\", // darker grey\n  \"rgb(41,41,41)\", // original grey\n  \"rgb(50,50,50)\",\n];\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport { app_fetch, escape, palette, query_call, mutation_call };\n","const backendURL =\n    \"https://3yfp7ejc0m.execute-api.us-east-1.amazonaws.com/dev/graphql\";\n\nconst BING_API_KEY = \"8300cebe5f0d452a9ccb4bca67af4659\";\n\nmodule.exports = { backendURL, BING_API_KEY };"],"sourceRoot":""}