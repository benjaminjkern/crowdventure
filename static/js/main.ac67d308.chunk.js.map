{"version":3,"sources":["Node.jsx","Account.jsx","Home.jsx","App.jsx","index.jsx","apolloURL.js"],"names":["ChoiceColumns","props","owner","account","choices","nodeID","canon","onEdit","useState","info","undefined","likeMap","setLikeMap","thisNode","setThisNode","thisAccount","setThisAccount","useEffect","reduce","p","choice","idx","disliked","dislikedBy","map","screenName","includes","liked","likedBy","score","CardColumns","Card","className","href","to","ID","style","pointerEvents","color","Body","cursor","paddingTop","Title","action","DropdownButton","variant","position","top","right","size","drop","title","class","Dropdown","Item","disabled","onClick","choiceID","app_fetch","query","then","res","err","alert","data","makeNonCanon","window","location","reload","makeCanon","setTimeout","suggestedBy","Divider","Footer","e","src","profilePicURL","process","onError","target","border","height","width","SearchPage","callback","toID","allNodes","setAllNodes","toNode","setToNode","getNode","filterBy","node","text","toLowerCase","defaultSelected","labelKey","options","placeholder","renderMenuItemChildren","Node","history","match","redirect","setAccount","setNode","setInfo","showSuggest","setShowSuggest","suggestAction","setSuggestAction","toPage","setToPage","showCreateNode","setShowCreateNode","setTitle","content","setContent","picture","setPicture","createNodeCallback","setCreateNodeCallback","showEditNode","setShowEditNode","showConfirm","setShowConfirm","showEditSuggest","setShowEditSuggest","setChoiceID","showPicture","setShowPicture","showChangePic","setShowChangePic","pageID","escape","params","id","setBgColor","bgColor","setFgColor","fgColor","cookies","Cookies","loggedInAs","get","loginAccount","set","path","Alert","Heading","Container","pictureURL","onLoad","display","marginLeft","marginRight","padding","maxHeight","split","line","textIndent","paddingRight","paddingBottom","Button","back","palette","backgroundColor","onMouseEnter","onMouseLeave","canonChoices","length","views","OverlayTrigger","overlay","Tooltip","nonCanonChoices","Modal","show","onHide","Header","closeButton","Form","Label","Control","value","onChange","editChoice","escaped","createNewAction","borderRadius","textShadow","url","as","rows","esTitle","esContent","esPicture","createNode","editNode","Math","random","Account","setRedirect","setLoggedInAs","showEditPage","setShowEditPage","bio","setBio","profilePicture","setProfilePicture","getAccount","loggedInAsID","alt","float","totalNodeViews","totalSuggestionScore","nodes","Img","parentNode","featured","left","alreadyFeatured","featurePage","opacity","esBio","editAccount","Home","topNodes","setTopNodes","featuredNodes","packageJson","require","AccountManager","showLogin","setShowLogin","showSignUp","setShowSignUp","setScreenName","pass1","setPass1","pass2","setPass2","createAccount","esScreenName","esPass","Navbar","Text","type","login","Group","handleSubmitSignUp","App","expand","Brand","version","Toggle","aria-controls","Collapse","component","exact","render","createApolloFetch","API_KEY","uri","backendURL","newlines","replace","SearchImage","isLoading","setIsLoading","setOptions","page","setPage","lastQuery","setLastQuery","handleSearch","fetch","encodeURIComponent","headers","json","newOptions","hit","i","urls","thumbnailUrl","longUrls","contentUrl","isFamilyFriendly","slice","catch","console","log","minLength","onSearch","maxResults","onPaginate","useCache","option","filter","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ac67d308.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport {\n  Container,\n  Button,\n  Modal,\n  Form,\n  Alert,\n  Card,\n  CardColumns,\n  DropdownButton,\n  Dropdown,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { app_fetch, escape, palette, SearchImage } from \"./index\";\n\nconst Node = (props) => {\n  const { history, match } = props;\n  const [redirect] = useState(undefined);\n  const [account, setAccount] = useState(undefined);\n  const [node, setNode] = useState(undefined);\n\n  const [info, setInfo] = useState(\"\");\n\n  const [showSuggest, setShowSuggest] = useState(false);\n  const [suggestAction, setSuggestAction] = useState(\"\");\n  const [toPage, setToPage] = useState(\"\");\n\n  const [showCreateNode, setShowCreateNode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [picture, setPicture] = useState(undefined);\n  const [createNodeCallback, setCreateNodeCallback] = useState(undefined);\n\n  const [showEditNode, setShowEditNode] = useState(false);\n\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  const [showEditSuggest, setShowEditSuggest] = useState(false);\n  const [choiceID, setChoiceID] = useState(\"\");\n\n  const [showPicture, setShowPicture] = useState(false);\n  const [showChangePic, setShowChangePic] = useState(false);\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = escape(picture);\n    app_fetch({\n      query: `mutation{createNode(accountScreenName:\"${account.screenName}\",title:\"${esTitle}\",content:\"\"\"${esContent}\"\"\",pictureURL:\"${esPicture}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createNode) {\n        createNodeCallback[0](res.data.createNode.ID);\n      } else alert(\"Something went wrong when creating node\");\n    });\n  };\n\n  const editNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = escape(picture);\n    app_fetch({\n      query: `mutation{editNode(nodeID:\"${node.ID}\",title:\"${esTitle}\",content:\"\"\"${esContent}\"\"\",pictureURL:\"${esPicture}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.editNode) {\n        setShowEditNode(false);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when editing node\");\n    });\n  };\n\n  const createNewAction = (toID) => {\n    if (!toID) {\n      setShowSuggest(false);\n      setShowCreateNode(true);\n      setTitle(\"\");\n      setContent(\"\");\n      setInfo(\"\");\n      setPicture(node.pictureURL || \"\");\n      setCreateNodeCallback([createNewAction]);\n    } else {\n      const escaped = escape(suggestAction);\n      app_fetch({\n        query: `mutation{suggestChoice(accountScreenName:\"${account.screenName}\",fromID:\"${node.ID}\",action:\"${escaped}\",toID:\"${toID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) {\n          setShowSuggest(false);\n          setShowCreateNode(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when creating choice!\");\n      });\n    }\n  };\n\n  const deletePage = () => {\n    app_fetch({\n      query: `mutation{deleteNode(nodeID:\"${node.ID}\")}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) {\n        history.back();\n        setTimeout(() => window.location.reload(false), 100);\n      } else alert(\"Something went wrong when deleting node\");\n    });\n  };\n\n  const editChoice = (toID) => {\n    if (!toID) {\n      setShowEditSuggest(false);\n      setShowCreateNode(true);\n      setInfo(\"\");\n      setTitle(\"\");\n      setContent(\"\");\n      setPicture(node.pictureURL || \"\");\n      setCreateNodeCallback([editChoice]);\n    } else {\n      let escaped = escape(suggestAction);\n      app_fetch({\n        query: `mutation{editSuggestion(choiceID:\"${choiceID}\",action:\"${escaped}\",toID:\"${toID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) {\n          setShowEditSuggest(false);\n          setShowCreateNode(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when editing choice!\");\n      });\n    }\n  };\n\n  useEffect(() => {\n    const pageID = escape(match.params.id);\n    if (!node || pageID !== node.ID)\n      app_fetch({\n        query: `query{getNode(ID:\"${pageID}\"){pictureURL,fgColor,bgColor,ID,title,content,views,owner{screenName,profilePicURL},canonChoices{suggestedBy{screenName,profilePicURL},ID,action,to{ID},score,likedBy{screenName},dislikedBy{screenName}},nonCanonChoices{suggestedBy{screenName,profilePicURL},ID,action,to{ID},score,likedBy{screenName},dislikedBy{screenName}}}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.getNode) {\n          setNode(res.data.getNode);\n          props.setBgColor(res.data.getNode.bgColor);\n          props.setFgColor(res.data.getNode.fgColor);\n        } else setNode(null);\n      });\n\n    if (account === undefined) {\n      const cookies = new Cookies();\n      const loggedInAs = escape(cookies.get(\"account\"));\n      if (loggedInAs)\n        app_fetch({\n          query: `mutation{loginAccount(screenName:\"${loggedInAs}\"){screenName}}`,\n        }).then((res, err) => {\n          if (err) alert(err);\n          if (res.data) setAccount(res.data.loginAccount);\n          else {\n            alert(\"Something went wrong when retrieving account, logging out\");\n            cookies.set(\"account\", \"\", { path: \"/\" });\n            setAccount(null);\n          }\n        });\n      else setAccount(null);\n    }\n  });\n\n  if (node === undefined) {\n    return (\n      <Alert variant=\"light\">\n        <title>Loading Page...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (node === null)\n    return (\n      <Alert variant=\"danger\">\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>Crowdventure! - {node.title}</title>\n      <h1 class=\"display-4 text-center\">{node.title}</h1>\n      {node.pictureURL ? (\n        <img\n          src={node.pictureURL}\n          onLoad={(e) => {\n            e.target.style.display = \"block\";\n          }}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n          }}\n          style={{\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            padding: \"1px\",\n            border: \"1px solid #eee\",\n            \"border-radius\": \"8px\",\n            width: \"90%\",\n            maxHeight: \"30vh\",\n            \"object-fit\": \"cover\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            setShowPicture(true);\n            setInfo(\"\");\n          }}\n        />\n      ) : (\n        \"\"\n      )}\n      <br />\n      <Container>\n        {node.content.split(\"\\n\").map((line) => (\n          <p style={{ textIndent: \"5%\" }}>{line}</p>\n        ))}\n      </Container>\n      <Container\n        className=\"row\"\n        style={{ paddingRight: \"0px\", paddingBottom: \"5px\" }}\n      >\n        <div class=\"col\">\n          <h3>Choices:</h3>\n        </div>\n        <div class=\"col\" style={{ paddingRight: \"0px\" }}>\n          <Button\n            onClick={() => {\n              history.back();\n            }}\n            size=\"lg\"\n            className=\"float-right\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Go back!\n          </Button>\n        </div>\n      </Container>\n      {node.canonChoices.length ? (\n        <ChoiceColumns\n          owner={node.owner}\n          choices={node.canonChoices}\n          account={account}\n          canon={true}\n          nodeID={node.ID}\n          onEdit={(choice) => {\n            setSuggestAction(choice.action);\n            setToPage(choice.to.ID);\n            setChoiceID(choice.ID);\n            setShowEditSuggest(true);\n            setInfo(\"\");\n          }}\n        />\n      ) : (\n        <p className=\"text-muted\">\n          By decree of <strong>{node.owner.screenName}</strong>, this journey\n          ends here.\n        </p>\n      )}\n\n      <p />\n\n      <Container className=\"row\" style={{ paddingRight: \"0px\" }}>\n        <div class=\"col align-bottom\">\n          <h3 class=\"align-bottom\">Other options:</h3>\n        </div>\n        <div class=\"col text-right\" style={{ paddingRight: \"0px\" }}>\n          <small class=\"text-muted\">\n            Author:{\" \"}\n            <a href={`/crowdventure/#/account/${node.owner.screenName}`}>\n              <img\n                src={\n                  node.owner.profilePicURL\n                    ? node.owner.profilePicURL\n                    : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                }\n                onError={(e) => {\n                  e.target.src =\n                    process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                }}\n                style={{\n                  border: \"1px solid #bbb\",\n                  height: \"2em\",\n                  width: \"2em\",\n                  \"object-fit\": \"cover\",\n                  \"border-radius\": \"50%\",\n                }}\n              />{\" \"}\n              {node.owner.screenName}{\" \"}\n            </a>{\" \"}\n            <br />\n            Views: {node.views}\n          </small>\n          {account && node.owner.screenName === account.screenName ? (\n            <p>\n              <Button\n                variant=\"light\"\n                size=\"sm\"\n                onClick={() => {\n                  setTitle(node.title);\n                  setContent(node.content);\n                  setPicture(node.pictureURL || \"\");\n                  setShowEditNode(true);\n                  setInfo(\"\");\n                }}\n              >\n                Edit Page\n              </Button>\n            </p>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Container>\n      <p />\n      <OverlayTrigger\n        overlay={\n          !account ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => {\n              setShowSuggest(true);\n              setToPage(\"\");\n              setChoiceID(\"\");\n              setSuggestAction(\"\");\n              setInfo(\"\");\n            }}\n            disabled={!account}\n            style={{\n              width: \"100%\",\n              pointerEvents: account ? \"auto\" : \"none\",\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Suggest New Choice\n          </Button>\n        </span>\n      </OverlayTrigger>\n      <p />\n\n      <ChoiceColumns\n        owner={node.owner}\n        choices={node.nonCanonChoices}\n        account={account}\n        canon={false}\n        nodeID={node.ID}\n        onEdit={(choice) => {\n          setSuggestAction(choice.action);\n          setToPage(choice.to.ID);\n          setChoiceID(choice.ID);\n          setShowEditSuggest(true);\n          setInfo(\"\");\n        }}\n      />\n\n      {/******************************************\n                         MODALS \n        ******************************************/}\n\n      <Modal show={showEditSuggest} onHide={() => setShowEditSuggest(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Editing Choice</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Action:</Form.Label>\n            <Form.Control\n              value={suggestAction}\n              onChange={(e) => setSuggestAction(e.target.value)}\n            ></Form.Control>\n            <Form.Label>Go to Page:</Form.Label>\n            <SearchPage\n              callback={(nodeID) => setToPage(nodeID)}\n              toID={toPage}\n            />\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={() =>\n                suggestAction\n                  ? editChoice(toPage)\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Action cannot be empty!\n                      </span>\n                    )\n              }\n            >\n              Edit Choice\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showSuggest} onHide={() => setShowSuggest(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Suggesting New Choice</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Action:</Form.Label>\n            <Form.Control\n              value={suggestAction}\n              onChange={(e) => setSuggestAction(e.target.value)}\n            />\n            <Form.Label>Go to Page:</Form.Label>\n            <SearchPage\n              callback={(nodeID) => setToPage(nodeID)}\n              toID={toPage}\n            />\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={() =>\n                suggestAction\n                  ? createNewAction(toPage)\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Action cannot be empty!\n                      </span>\n                    )\n              }\n            >\n              Submit New Choice\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showCreateNode} onHide={() => setShowCreateNode(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Creating New Page</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            {picture ? (\n              <>\n                <div\n                  style={{\n                    border: \"1px solid #eee\",\n                    borderRadius: \"8px\",\n                  }}\n                >\n                  <img\n                    src={picture}\n                    onError={(e) => {\n                      setInfo(\n                        <span style={{ color: \"red\" }}>Picture not found!</span>\n                      );\n                      setPicture(\"\");\n                    }}\n                    style={{\n                      padding: \"1px\",\n                      width: \"100%\",\n                      \"object-fit\": \"contain\",\n                      borderRadius: \"8px\",\n                    }}\n                  />\n                  <span\n                    class=\"fa fa-times\"\n                    style={{\n                      position: \"absolute\",\n                      top: \"1.5em\",\n                      right: \"1.5em\",\n                      color: \"#888\",\n                      cursor: \"pointer\",\n                      textShadow:\n                        \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                    }}\n                    onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                    onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                    onClick={() => {\n                      setPicture(\"\");\n                    }}\n                  />\n                </div>\n\n                <br />\n              </>\n            ) : (\n              \"\"\n            )}\n\n            <div class=\"row no-gutters\">\n              <div class=\"col\">Picture:</div>\n              <div class=\"col small text-muted text-center\">\n                {!picture\n                  ? \"(Don't use any picture)\"\n                  : picture === node.pictureURL\n                  ? \"(Use existing picture)\"\n                  : \"(Use new picture)\"}\n              </div>\n              <div class=\"col text-right\">\n                <Button\n                  variant=\"light\"\n                  size=\"sm\"\n                  onClick={() => setShowChangePic(true)}\n                >\n                  {picture ? \"Change\" : \"Select\"} Picture\n                </Button>\n              </div>\n            </div>\n            {showChangePic ? (\n              <SearchImage\n                callback={(url) => {\n                  setPicture(url);\n                  setShowChangePic(false);\n                }}\n              />\n            ) : (\n              \"\"\n            )}\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={() =>\n                title\n                  ? content\n                    ? createNode()\n                    : setInfo(\n                        <span style={{ color: \"red\" }}>\n                          Content cannot be empty!\n                        </span>\n                      )\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Title cannot be empty!\n                      </span>\n                    )\n              }\n            >\n              Create Page!\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showEditNode} onHide={() => setShowEditNode(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Editing Page</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            {picture ? (\n              <>\n                <div\n                  style={{\n                    border: \"1px solid #eee\",\n                    borderRadius: \"8px\",\n                  }}\n                >\n                  <img\n                    src={picture}\n                    onError={(e) => {\n                      setInfo(\n                        <span style={{ color: \"red\" }}>Picture not found!</span>\n                      );\n                      setPicture(\"\");\n                    }}\n                    style={{\n                      padding: \"1px\",\n                      width: \"100%\",\n                      \"object-fit\": \"contain\",\n                      borderRadius: \"8px\",\n                    }}\n                  />\n                  <span\n                    class=\"fa fa-times\"\n                    style={{\n                      position: \"absolute\",\n                      top: \"1.5em\",\n                      right: \"1.5em\",\n                      color: \"#888\",\n                      cursor: \"pointer\",\n                      textShadow:\n                        \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                    }}\n                    onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                    onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                    onClick={() => {\n                      setPicture(\"\");\n                    }}\n                  />\n                </div>\n\n                <br />\n              </>\n            ) : (\n              \"\"\n            )}\n\n            <div class=\"row no-gutters\">\n              <div class=\"col\">Picture:</div>\n              <div class=\"col small text-muted text-center\">\n                {!picture\n                  ? \"(Don't use any picture)\"\n                  : picture === node.pictureURL\n                  ? \"(Use existing picture)\"\n                  : \"(Use new picture)\"}\n              </div>\n              <div class=\"col text-right\">\n                <Button\n                  variant=\"light\"\n                  size=\"sm\"\n                  onClick={() => setShowChangePic(true)}\n                >\n                  {picture ? \"Change\" : \"Select\"} Picture\n                </Button>\n              </div>\n            </div>\n            {showChangePic ? (\n              <SearchImage\n                callback={(url) => {\n                  setPicture(url);\n                  setShowChangePic(false);\n                }}\n              />\n            ) : (\n              \"\"\n            )}\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={() =>\n                title\n                  ? content\n                    ? editNode()\n                    : setInfo(\n                        <span style={{ color: \"red\" }}>\n                          Content cannot be empty!\n                        </span>\n                      )\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Title cannot be empty!\n                      </span>\n                    )\n              }\n            >\n              Edit Page!\n            </Button>\n            <Button\n              variant=\"danger\"\n              onClick={() => {\n                setShowConfirm(true);\n                setInfo(\"\");\n              }}\n            >\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Page</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={() => setShowConfirm(false)}>\n            No!\n          </Button>\n          <Button variant=\"primary\" onClick={deletePage}>\n            Yes!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showPicture} onHide={() => setShowPicture(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{node.title}</Modal.Title>\n        </Modal.Header>\n        <img\n          src={node.pictureURL}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n            setInfo(<span style={{ color: \"red\" }}>Picture not found!</span>);\n          }}\n          style={{\n            width: \"100%\",\n            maxHeight: \"70vh\",\n            \"object-fit\": \"contain\",\n          }}\n        />\n        {\n          info\n            ? info\n            : \"\" /* it acctually shouldnt ever get here but whatever */\n        }\n        <Modal.Footer>\n          <Button size=\"sm\" onClick={() => setShowPicture(false)}>\n            Thanks for showing me this {Math.random() < 0.5 ? \"cool\" : \"neat\"}{\" \"}\n            picture!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {redirect ? redirect : \"\"}\n    </Container>\n  );\n};\n\nconst ChoiceColumns = (props) => {\n  const { owner, account, choices, nodeID, canon, onEdit } = props;\n  const [info, setInfo] = useState(\"\");\n  const [likeMap, setLikeMap] = useState(undefined);\n  const [thisNode, setThisNode] = useState(undefined);\n  const [thisAccount, setThisAccount] = useState(undefined);\n\n  const like = (choiceID) => {\n    if (account)\n      app_fetch({\n        query: `mutation{likeSuggestion(accountScreenName:\"${account.screenName}\",choiceID:\"${choiceID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n      });\n  };\n  const dislike = (choiceID) => {\n    if (account)\n      app_fetch({\n        query: `mutation{dislikeSuggestion(accountScreenName:\"${account.screenName}\",choiceID:\"${choiceID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n      });\n  };\n\n  const makeCanon = (choiceID) => {\n    app_fetch({\n      query: `mutation{makeCanon(choiceID:\"${choiceID}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.makeCanon)\n        setTimeout(() => window.location.reload(false), 100); // TODO: Figure out why this is necessary\n    });\n  };\n\n  const makeNonCanon = (choiceID) => {\n    app_fetch({\n      query: `mutation{makeNonCanon(choiceID:\"${choiceID}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.makeNonCanon) window.location.reload(false);\n    });\n  };\n\n  const removeSuggestion = (choiceID) => {\n    app_fetch({\n      query: `mutation{removeSuggestion(choiceID:\"${choiceID}\")}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) window.location.reload(false);\n    });\n  };\n\n  useEffect(() => {\n    if (!thisNode || thisNode !== nodeID || thisAccount === undefined) {\n      setLikeMap({\n        ...choices.reduce(\n          (p, choice, idx) => ({\n            ...p,\n            [idx]: {\n              disliked: account\n                ? choice.dislikedBy\n                    .map((account) => account.screenName)\n                    .includes(account.screenName)\n                : false,\n              liked: account\n                ? choice.likedBy\n                    .map((account) => account.screenName)\n                    .includes(account.screenName)\n                : false,\n              score: choice.score,\n            },\n          }),\n          {}\n        ),\n      });\n      setThisNode(nodeID);\n      setThisAccount(account);\n    }\n  });\n\n  if (likeMap && thisNode === nodeID && thisAccount !== undefined)\n    return (\n      <CardColumns>\n        {info ? info : \"\"}\n        {choices.map((choice, idx) => {\n          return (\n            <Card className=\"text-center\">\n              <a\n                href={choice.to ? `/crowdventure/#/node/${choice.to.ID}` : \"\"}\n                style={{\n                  pointerEvents: choice.to ? \"auto\" : \"none\",\n                  color: choice.to ? undefined : \"grey\",\n                }}\n              >\n                <Card.Body style={{ cursor: \"pointer\", paddingTop: \"2em\" }}>\n                  <Card.Title>{choice.action}</Card.Title>\n                </Card.Body>\n              </a>\n              <DropdownButton\n                variant=\"light\"\n                style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n                size=\"sm\"\n                drop=\"right\"\n                title={<span class=\"fa\">&#xf013;</span>}\n              >\n                <Dropdown.Item\n                  disabled={!account || account.screenName !== owner.screenName}\n                  onClick={() =>\n                    canon ? makeNonCanon(choice.ID) : makeCanon(choice.ID)\n                  }\n                >\n                  Make {canon ? \"Nonc\" : \"C\"}anon\n                </Dropdown.Item>\n                <Dropdown.Item\n                  disabled={\n                    !account ||\n                    (account.screenName !== choice.suggestedBy.screenName &&\n                      account.screenName !== owner.screenName)\n                  }\n                  onClick={() => removeSuggestion(choice.ID)}\n                >\n                  Delete\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => onEdit(choice)}\n                  disabled={\n                    !account ||\n                    (account.screenName !== choice.suggestedBy.screenName &&\n                      (!canon || account.screenName !== owner.screenName))\n                  }\n                >\n                  Edit\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item disabled>Report</Dropdown.Item>\n              </DropdownButton>\n              <Card.Footer>\n                <a\n                  href={`/crowdventure/#/node/${nodeID}`}\n                  style={{\n                    pointerEvents: account ? \"auto\" : \"none\",\n                    color: account\n                      ? likeMap[idx].disliked\n                        ? \"red\"\n                        : \"black\"\n                      : \"grey\",\n                  }}\n                  className=\"fa fa-thumbs-down\"\n                  onClick={(e) => {\n                    if (account) {\n                      setLikeMap({\n                        ...likeMap,\n                        [idx]: {\n                          liked: false,\n                          disliked: !likeMap[idx].disliked,\n                          score:\n                            likeMap[idx].score +\n                            (likeMap[idx].liked\n                              ? -2\n                              : likeMap[idx].disliked\n                              ? 1\n                              : -1),\n                        },\n                      });\n                    }\n                    dislike(choice.ID);\n                  }}\n                ></a>\n                {\" \" + (likeMap[idx] ? likeMap[idx].score : 0) + \" \"}\n                <a\n                  href={`/crowdventure/#/node/${nodeID}`}\n                  style={{\n                    pointerEvents: account ? \"auto\" : \"none\",\n                    color:\n                      account && likeMap[idx]\n                        ? likeMap[idx].liked\n                          ? \"green\"\n                          : \"black\"\n                        : \"grey\",\n                  }}\n                  className=\"fa fa-thumbs-up\"\n                  onClick={() => {\n                    if (account) {\n                      setLikeMap({\n                        ...likeMap,\n                        [idx]: {\n                          disliked: false,\n                          liked: !likeMap[idx].liked,\n                          score:\n                            likeMap[idx].score +\n                            (likeMap[idx].disliked\n                              ? 2\n                              : likeMap[idx].liked\n                              ? -1\n                              : 1),\n                        },\n                      });\n                    }\n                    like(choice.ID);\n                  }}\n                ></a>\n                <br />\n                <small className=\"text-muted\">\n                  Suggested By:{\" \"}\n                  <a\n                    href={`/crowdventure/#/account/${choice.suggestedBy.screenName}`}\n                  >\n                    <img\n                      src={\n                        choice.suggestedBy.profilePicURL\n                          ? choice.suggestedBy.profilePicURL\n                          : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                      }\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {choice.suggestedBy.screenName}\n                  </a>\n                </small>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n      </CardColumns>\n    );\n  return null;\n};\n\nconst SearchPage = (props) => {\n  const { callback, toID } = props;\n  const [allNodes, setAllNodes] = useState(undefined);\n  const [toNode, setToNode] = useState(undefined);\n\n  const filterByCallback = (node, props) => {\n    if (props.text === \"\") {\n      callback(\"\");\n      return true;\n    }\n    return (\n      node.title.toLowerCase().includes(props.text.toLowerCase()) ||\n      node.owner.screenName.toLowerCase().includes(props.text.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    if (toID) {\n      app_fetch({\n        query: `query{getNode(ID:\"${toID}\"){title,ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.getNode) setToNode(res.data.getNode);\n        else alert(\"Something went wrong when retrieving node\");\n      });\n    } else setToNode(null);\n\n    app_fetch({\n      query: `query{allNodes{title,owner{screenName,profilePicURL},ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.allNodes) setAllNodes(res.data.allNodes);\n      else alert(\"Something went wrong when retrieving all nodes\");\n    });\n  }, []);\n\n  if (!allNodes || toNode === undefined) return <div>Loading...</div>;\n\n  return (\n    <Typeahead\n      filterBy={filterByCallback}\n      defaultSelected={[toNode ? toNode.title : \"\"]}\n      labelKey=\"title\"\n      options={allNodes}\n      placeholder=\"(Leave Empty to Create New Page)\"\n      renderMenuItemChildren={(node) => (\n        <div onClick={() => callback(node.ID)}>\n          {node.title}\n          <div>\n            <small>\n              Author:{\" \"}\n              <img\n                src={\n                  node.owner.profilePicURL\n                    ? node.owner.profilePicURL\n                    : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                }\n                onError={(e) => {\n                  e.target.src =\n                    process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                }}\n                style={{\n                  border: \"1px solid #bbb\",\n                  height: \"2em\",\n                  width: \"2em\",\n                  \"object-fit\": \"cover\",\n                  \"border-radius\": \"50%\",\n                }}\n              />{\" \"}\n              {node.owner.screenName}\n            </small>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default Node;\n","import React, { useState, useEffect } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport {\n  Container,\n  Button,\n  Modal,\n  Form,\n  Alert,\n  Card,\n  CardColumns,\n  DropdownButton,\n  Dropdown,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { app_fetch, escape, palette, SearchImage } from \"./index\";\n\nconst Account = (props) => {\n  const [redirect, setRedirect] = useState(undefined);\n  const [account, setAccount] = useState(undefined);\n  const [loggedInAs, setLoggedInAs] = useState(undefined);\n\n  const [showCreateNode, setShowCreateNode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const [showChangePic, setShowChangePic] = useState(false);\n\n  const [showEditPage, setShowEditPage] = useState(false);\n  const [bio, setBio] = useState(\"\");\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [profilePicture, setProfilePicture] = useState(\"\");\n\n  const [showPicture, setShowPicture] = useState(false);\n\n  useEffect(() => {\n    const pageID = escape(props.match.params.id);\n    if (!account || pageID !== account.screenName) {\n      app_fetch({\n        // TODO: EITHER IMPLEMENT SUGGESTED CHOICES OR GET RID OF IT\n        query: `query{getAccount(screenName:\"${pageID}\"){bio,screenName,profilePicURL,totalNodeViews,totalSuggestionScore,nodes{featured,ID,title,views,pictureURL}}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.getAccount) {\n          setAccount(res.data.getAccount);\n        } else alert(\"Something went wrong when retrieving account\");\n      });\n    }\n\n    if (!loggedInAs) {\n      const cookies = new Cookies();\n      const loggedInAsID = escape(cookies.get(\"account\"));\n      app_fetch({\n        query: `mutation{loginAccount(screenName:\"${loggedInAsID}\"){screenName}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) setLoggedInAs(res.data.loginAccount);\n        else {\n          alert(\"Something went wrong when logging in account, logging out\");\n          cookies.set(\"account\", \"\", { path: \"/\" });\n        }\n      });\n    }\n  });\n\n  const editPage = () => {\n    const esBio = escape(bio, true);\n    const esPicture = escape(profilePicture);\n    app_fetch({\n      query: `mutation{editAccount(screenName:\"${account.screenName}\",bio:\"\"\"${esBio}\"\"\",profilePicURL:\"${esPicture}\"){bio,screenName,suggestedChoices{action, from{title}, to{title}},totalNodeViews,totalSuggestionScore, nodes{featured,ID,title,views}}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.editAccount) {\n        setAccount(res.data.editAccount);\n        setShowEditPage(false);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when editing account\");\n    });\n  };\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content);\n    const esPicture = escape(picture);\n    app_fetch({\n      query: `mutation{createNode(accountScreenName:\"${account.screenName}\",title:\"${esTitle}\",content:\"${esContent}\",featured:true,pictureURL:\"${esPicture}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createNode) {\n        setShowCreateNode(false);\n        setRedirect(<Redirect to={`/node/${res.data.createNode.ID}`} />);\n      } else alert(\"Something went wrong when creating node\");\n    });\n  };\n\n  const deleteAccount = () => {\n    if (loggedInAs && loggedInAs.screenName === account.screenName) {\n      new Cookies().set(\"account\", \"\", { path: \"/\" });\n\n      app_fetch({\n        query: `mutation{deleteAccount(screenName:\"${loggedInAs.screenName}\")}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) {\n          setRedirect(<Redirect to=\"/\" />);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when deleting account\");\n      });\n    }\n  };\n\n  const featurePage = (node, alreadyFeatured) => {\n    app_fetch({\n      query: `mutation{editNode(nodeID:\"${\n        node.ID\n      }\", featured:${!alreadyFeatured}){title}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) window.location.reload(false);\n      else alert(\"Something went wrong when featuring page\");\n    });\n  };\n\n  if (account === undefined) {\n    return (\n      <Alert variant=\"light\">\n        <title>Loading Account...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (account === null)\n    return (\n      <Alert variant=\"danger\">\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>{account.screenName} on Crowdventure!</title>\n      <h1>\n        <img\n          src={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          alt={account.screenName + \" Profile Pic\"}\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            border: \"1px solid #bbb\",\n            height: \"3em\",\n            width: \"3em\",\n            \"object-fit\": \"cover\",\n            \"border-radius\": \"50%\",\n            \"margin-right\": \"5px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            setShowPicture(true);\n            setInfo(\"\");\n          }}\n        />{\" \"}\n        <span className=\"display-4 align-middle\">{account.screenName}</span>\n      </h1>\n      {account.bio ? (\n        <Container>\n          {account.bio.split(\"\\n\").map((line) => (\n            <p style={{ textIndent: \"5%\" }}>{line}</p>\n          ))}\n        </Container>\n      ) : (\n        \"\"\n      )}\n\n      <Container>\n        {loggedInAs && loggedInAs.screenName === account.screenName ? (\n          <Button\n            variant=\"light\"\n            onClick={() => {\n              setBio(account.bio);\n              setProfilePicture(account.profilePicURL);\n              setShowEditPage(true);\n              setInfo(\"\");\n            }}\n            size=\"sm\"\n          >\n            Edit Account\n          </Button>\n        ) : (\n          \"\"\n        )}\n        <div style={{ float: \"right\" }} class=\"text-muted\">\n          Total views: {account.totalNodeViews} Total score:{\" \"}\n          {account.totalSuggestionScore}\n        </div>\n      </Container>\n      <br />\n\n      {loggedInAs && loggedInAs.screenName === account.screenName ? (\n        <Button\n          onClick={() => {\n            setShowCreateNode(true);\n            setTitle(\"\");\n            setContent(\"\");\n            setPicture(\"\");\n            setInfo(\"\");\n          }}\n          style={{\n            width: \"100%\",\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Create a New Adventure!\n        </Button>\n      ) : (\n        \"\"\n      )}\n      <p />\n      <h3>Featured Pages:</h3>\n      <CardColumns>\n        {account.nodes.map((node, idx) => {\n          return (\n            <Card>\n              <a href={`/crowdventure/#/node/${node.ID}`}>\n                {node.pictureURL ? (\n                  <Card.Header\n                    style={{\n                      \"background-color\": \"white\",\n                      padding: \"1px\",\n                    }}\n                  >\n                    <Card.Img\n                      src={node.pictureURL}\n                      style={{\n                        \"max-height\": \"30vh\",\n                        \"object-fit\": \"cover\",\n                      }}\n                      onError={(e) => {\n                        e.target.parentNode.style.display = \"none\";\n                      }}\n                    />\n                  </Card.Header>\n                ) : (\n                  \"\"\n                )}\n                <Card.Body\n                  className=\"text-center\"\n                  style={{ paddingTop: \"2em\" }}\n                >\n                  <Card.Title>{node.title}</Card.Title>\n                </Card.Body>\n              </a>\n              {node.featured ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>This page has been starred by this user!</Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"5px\",\n                      color: \"yellow\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf005;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n\n              <DropdownButton\n                variant=\"light\"\n                style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n                size=\"sm\"\n                drop=\"right\"\n                title={<span class=\"fa\">&#xf013;</span>}\n              >\n                <Dropdown.Item\n                  onClick={() => featurePage(node, node.featured)}\n                  disabled={\n                    !loggedInAs || loggedInAs.screenName !== account.screenName\n                  }\n                >\n                  {node.featured ? \"Un-f\" : \"F\"}eature page\n                </Dropdown.Item>\n                <Dropdown.Item disabled>Delete</Dropdown.Item>\n                <Dropdown.Item disabled>Make Private</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item disabled>Report</Dropdown.Item>\n              </DropdownButton>\n              <Card.Footer className=\"text-muted text-center\">\n                <small>\n                  Author:{\" \"}\n                  <img\n                    src={\n                      account.profilePicURL\n                        ? account.profilePicURL\n                        : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                    }\n                    alt={account.screenName + \" Profile Pic\"}\n                    onError={(e) => {\n                      e.target.src =\n                        process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                    }}\n                    style={{\n                      border: \"1px solid #bbb\",\n                      height: \"2em\",\n                      width: \"2em\",\n                      \"object-fit\": \"cover\",\n                      \"border-radius\": \"50%\",\n                    }}\n                  />{\" \"}\n                  {account.screenName}\n                  <br />\n                  Views:{\" \" + node.views}\n                </small>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n      </CardColumns>\n\n      <Modal show={showPicture} onHide={() => setShowPicture(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{account.screenName}</Modal.Title>\n        </Modal.Header>\n        <img\n          src={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          alt={account.screenName + \" Profile Pic\"}\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            width: \"100%\",\n            height: \"70vh\",\n            \"object-fit\": \"contain\",\n          }}\n        />\n        {info ? info : \"\" /* it actually shouldnt ever get here but whatever */}\n        <Modal.Footer>\n          <Button size=\"sm\" onClick={() => setShowPicture(false)}>\n            Wow, {account.screenName} has a{\" \"}\n            {Math.random() < 0.5 ? \"cool\" : \"neat\"} profile picture!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <p />\n      {loggedInAs && loggedInAs.screenName === account.screenName ? (\n        <Container>\n          <Modal show={showCreateNode} onHide={() => setShowCreateNode(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Creating New Page</Modal.Title>\n            </Modal.Header>\n            <Form>\n              <Modal.Body>\n                {picture ? (\n                  <>\n                    <div\n                      style={{\n                        border: \"1px solid #eee\",\n                        borderRadius: \"8px\",\n                      }}\n                    >\n                      <img\n                        src={picture}\n                        onError={(e) => {\n                          setInfo(\n                            <span style={{ color: \"red\" }}>\n                              Picture not found!\n                            </span>\n                          );\n                          setPicture(\"\");\n                        }}\n                        alt=\"New Image\"\n                        style={{\n                          padding: \"1px\",\n                          width: \"100%\",\n                          \"object-fit\": \"contain\",\n                          borderRadius: \"8px\",\n                        }}\n                      />\n                      <span\n                        class=\"fa fa-times\"\n                        style={{\n                          position: \"absolute\",\n                          top: \"1.5em\",\n                          right: \"1.5em\",\n                          color: \"#888\",\n                          cursor: \"pointer\",\n                          textShadow:\n                            \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                        }}\n                        onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                        onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                        onClick={() => {\n                          setPicture(\"\");\n                        }}\n                      />\n                    </div>\n\n                    <br />\n                  </>\n                ) : (\n                  \"\"\n                )}\n\n                <div class=\"row no-gutters\">\n                  <div class=\"col\">Picture:</div>\n                  <div class=\"col small text-muted text-center\">\n                    {!picture ? \"(Don't use any picture)\" : \"(Use new picture)\"}\n                  </div>\n                  <div class=\"col text-right\">\n                    <Button\n                      variant=\"light\"\n                      size=\"sm\"\n                      onClick={() => setShowChangePic(true)}\n                    >\n                      {picture ? \"Change\" : \"Select\"} Picture\n                    </Button>\n                  </div>\n                </div>\n                {showChangePic ? (\n                  <SearchImage\n                    callback={(url) => {\n                      setPicture(url);\n                      setShowChangePic(false);\n                    }}\n                  />\n                ) : (\n                  \"\"\n                )}\n                <Form.Label>Title:</Form.Label>\n                <Form.Control\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n                <Form.Label>Content:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  value={content}\n                  onChange={(e) => setContent(e.target.value)}\n                />\n                {info ? info : \"\"}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  onClick={() =>\n                    title\n                      ? content\n                        ? createNode()\n                        : setInfo(\n                            <span style={{ color: \"red\" }}>\n                              Content cannot be empty!\n                            </span>\n                          )\n                      : setInfo(\n                          <span style={{ color: \"red\" }}>\n                            Title cannot be empty!\n                          </span>\n                        )\n                  }\n                >\n                  Create Page!\n                </Button>\n              </Modal.Footer>\n            </Form>\n          </Modal>\n          <Modal show={showEditPage} onHide={() => setShowEditPage(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Editing Account</Modal.Title>\n            </Modal.Header>\n            <Form>\n              <Modal.Body>\n                {account.profilePicURL ? (\n                  <img\n                    src={account.profilePicURL}\n                    alt={account.screenName + \" Profile Pic\"}\n                    onError={(e) => {\n                      e.target.style.display = \"none\";\n                      setInfo(\n                        <span style={{ color: \"red\" }}>Picture not found!</span>\n                      );\n                    }}\n                    style={{\n                      opacity: account.profilePicURL === picture ? 1 : 0.2,\n                      width: \"100%\",\n                      \"object-fit\": \"contain\",\n                    }}\n                  />\n                ) : (\n                  \"\"\n                )}\n                <Form.Label>Profile Pic URL:</Form.Label>\n                <Form.Control\n                  value={profilePicture}\n                  onChange={(e) => setProfilePicture(e.target.value)}\n                />\n                <Form.Label>Bio:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  value={bio}\n                  onChange={(e) => setBio(e.target.value)}\n                />\n                {info ? info : \"\"}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={editPage}>Edit Account</Button>\n                <Button\n                  onClick={() => {\n                    new Cookies().set(\"account\", \"\", { path: \"/\" });\n                    window.location.reload(false);\n                  }}\n                  variant=\"secondary\"\n                >\n                  Log out\n                </Button>\n                <Button\n                  onClick={() => {\n                    setShowConfirm(true);\n                    setInfo(\"\");\n                  }}\n                  variant=\"danger\"\n                >\n                  Delete Account\n                </Button>\n              </Modal.Footer>\n            </Form>\n          </Modal>\n          <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Delete Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure?</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"danger\" onClick={() => setShowConfirm(false)}>\n                No!\n              </Button>\n              <Button variant=\"primary\" onClick={deleteAccount}>\n                Yes!\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      ) : (\n        \"\"\n      )}\n      {redirect ? redirect : \"\"}\n    </Container>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Card,\n  CardColumns,\n  Form,\n  Button,\n  Modal,\n  OverlayTrigger,\n  Tooltip,\n  Alert,\n} from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"react-aspect-ratio/aspect-ratio.css\";\n\nimport { app_fetch, escape, palette, SearchImage } from \"./index\";\n\nconst Home = () => {\n  const [topNodes, setTopNodes] = useState(undefined);\n  const [account, setAccount] = useState(false);\n\n  const [showCreateNode, setShowCreateNode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n\n  const [showChangePic, setShowChangePic] = useState(false);\n\n  const [redirect, setRedirect] = useState(undefined);\n\n  useEffect(() => {\n    app_fetch({\n      query: `query{featuredNodes{ID,title,owner{screenName,profilePicURL},views,size,pictureURL}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.featuredNodes)\n        setTopNodes(res.data.featuredNodes);\n      else alert(\"Something went wrong when retrieving featured nodes\");\n    });\n\n    const cookies = new Cookies();\n    const loggedInAs = escape(cookies.get(\"account\"));\n\n    app_fetch({\n      query: `mutation{loginAccount(screenName:\"${loggedInAs}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setAccount(res.data.loginAccount);\n      else {\n        alert(\"Something went wrong when retrieving account, logging out\");\n        cookies.set(\"account\", \"\", { path: \"/\" });\n      }\n    });\n  }, []);\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content);\n    const esPicture = escape(picture);\n    app_fetch({\n      query: `mutation{createNode(accountScreenName:\"${account.screenName}\",title:\"${esTitle}\",content:\"${esContent}\",featured:true,pictureURL:\"${esPicture}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createNode) {\n        setShowCreateNode(false);\n        setRedirect(<Redirect to={`/node/${res.data.createNode.ID}`} />);\n      } else alert(\"Something went wrong when creating node\");\n    });\n  };\n\n  return (\n    <Container>\n      <title>Crowdventure!</title>\n      <h1 className=\"display-4 text-center\">Welcome!</h1>\n      <Container className=\"text-center\">\n        Crowdventure is a Crowd-Sourced\n        Choose-and-Create-Your-Own-Adventure-Game!\n      </Container>\n      <p />\n\n      <OverlayTrigger\n        overlay={\n          !account ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => {\n              setShowCreateNode(true);\n              setTitle(\"\");\n              setContent(\"\");\n              setPicture(\"\");\n              setInfo(\"\");\n            }}\n            disabled={!account}\n            style={{\n              width: \"100%\",\n              pointerEvents: account ? \"auto\" : \"none\",\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Create a New Adventure!\n          </Button>\n        </span>\n      </OverlayTrigger>\n      <p />\n\n      <h3>Featured Pages:</h3>\n      {topNodes ? (\n        <CardColumns>\n          {topNodes.map((node) => (\n            <Card className=\"text-center\">\n              <a href={`/crowdventure/#/node/${node.ID}`}>\n                {node.pictureURL ? (\n                  <Card.Header\n                    style={{\n                      \"background-color\": \"white\",\n                      padding: \"1px\",\n                    }}\n                  >\n                    <Card.Img\n                      src={node.pictureURL}\n                      style={{\n                        \"max-height\": \"30vh\",\n                        \"object-fit\": \"cover\",\n                      }}\n                      onError={(e) => {\n                        e.target.parentNode.style.display = \"none\";\n                      }}\n                    />\n                  </Card.Header>\n                ) : (\n                  \"\"\n                )}\n                <Card.Body style={{ paddingTop: \"2em\" }}>\n                  <Card.Title>{node.title}</Card.Title>\n                </Card.Body>\n              </a>\n              <Card.Footer>\n                <small className=\"text-muted\">\n                  Author:{\" \"}\n                  <a href={`/crowdventure/#/account/${node.owner.screenName}`}>\n                    <img\n                      src={\n                        node.owner.profilePicURL\n                          ? node.owner.profilePicURL\n                          : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                      }\n                      alt={node.owner.screenName + \" Profile Pic\"}\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {node.owner.screenName}\n                  </a>\n                  <br />\n                  Views: {node.views}\n                </small>\n              </Card.Footer>\n            </Card>\n          ))}\n        </CardColumns>\n      ) : (\n        <Alert variant=\"light\">\n          <Alert.Heading>Loading...</Alert.Heading>\n        </Alert>\n      )}\n      <Modal show={showCreateNode} onHide={() => setShowCreateNode(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Creating New Page</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            {picture ? (\n              <>\n                <div\n                  style={{\n                    border: \"1px solid #eee\",\n                    borderRadius: \"8px\",\n                  }}\n                >\n                  <img\n                    src={picture}\n                    onError={(e) => {\n                      setInfo(\n                        <span style={{ color: \"red\" }}>Picture not found!</span>\n                      );\n                      setPicture(\"\");\n                    }}\n                    alt=\"This shouldn't have happened\"\n                    style={{\n                      padding: \"1px\",\n                      width: \"100%\",\n                      \"object-fit\": \"contain\",\n                      borderRadius: \"8px\",\n                    }}\n                  />\n                  <span\n                    class=\"fa fa-times\"\n                    style={{\n                      position: \"absolute\",\n                      top: \"1.5em\",\n                      right: \"1.5em\",\n                      color: \"#888\",\n                      cursor: \"pointer\",\n                      textShadow:\n                        \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                    }}\n                    onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                    onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                    onClick={() => {\n                      setPicture(\"\");\n                    }}\n                  />\n                </div>\n\n                <br />\n              </>\n            ) : (\n              \"\"\n            )}\n\n            <div class=\"row no-gutters\">\n              <div class=\"col\">Picture:</div>\n              <div class=\"col small text-muted text-center\">\n                {!picture ? \"(Don't use any picture)\" : \"(Use new picture)\"}\n              </div>\n              <div class=\"col text-right\">\n                <Button\n                  variant=\"light\"\n                  size=\"sm\"\n                  onClick={() => setShowChangePic(true)}\n                >\n                  {picture ? \"Change\" : \"Select\"} Picture\n                </Button>\n              </div>\n            </div>\n            {showChangePic ? (\n              <SearchImage\n                callback={(url) => {\n                  setPicture(url);\n                  setShowChangePic(false);\n                }}\n              />\n            ) : (\n              \"\"\n            )}\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={() =>\n                title\n                  ? content\n                    ? createNode()\n                    : setInfo(\n                        <span style={{ color: \"red\" }}>\n                          Content cannot be empty!\n                        </span>\n                      )\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Title cannot be empty!\n                      </span>\n                    )\n              }\n            >\n              Create Page!\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n      {redirect ? redirect : \"\"}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route, Switch, Redirect, Router } from \"react-router-dom\";\n\nimport Node from \"./Node\";\nimport Account from \"./Account\";\nimport Home from \"./Home\";\n\nimport Cookies from \"universal-cookie\";\nimport { Navbar, Container, Button, Modal, Form } from \"react-bootstrap\";\n\nimport { app_fetch, escape } from \"./index\";\n\nimport history from \"history/browser\";\nconst packageJson = require(\"../package.json\");\n\nconst App = () => {\n  const [bgColor, setBgColor] = useState(undefined);\n  const [fgColor, setFgColor] = useState(undefined);\n  return (\n    <Container>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/crowdventure\">\n          <img\n            href=\"/crowdventure\"\n            src={process.env.PUBLIC_URL + \"/logo.png\"}\n            alt=\"Crowdventure Logo\"\n            style={{ width: \"100%\" }}\n          />\n        </Navbar.Brand>\n        <a href=\"https://github.com/benjaminjkern/crowdventure/blob/master/CHANGELOG.md\">\n          <small class=\"text-muted\">Version: {packageJson.version}</small>\n        </a>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"bg-light\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n          <AccountManager />\n        </Navbar.Collapse>\n      </Navbar>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route\n            path=\"/node/:id\"\n            render={(props) => (\n              <Node\n                {...props}\n                history={history}\n                setBgColor={setBgColor}\n                setFgColor={setFgColor}\n              />\n            )}\n          />\n          <Route path=\"/account/:id\" component={Account} />\n        </Switch>\n      </HashRouter>\n      <Navbar className=\"text-right\">\n        <small class=\"text-muted\">@ 2020 Copyright: (MIT) Benjamin Kern</small>\n      </Navbar>\n      <title>Crowdventure! - Page not found!</title>\n    </Container>\n  );\n};\n\nconst AccountManager = () => {\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [account, setAccount] = useState(undefined);\n  const [info, setInfo] = useState(undefined);\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n\n  const handleSubmitSignUp = () => {\n    if (pass1 !== pass2)\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n    else {\n      const esScreenName = escape(screenName);\n      app_fetch({\n        query: `query{getAccount(screenName:\"${esScreenName}\"){screenName}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.getAccount)\n          setInfo(\n            <div style={{ color: \"red\" }}>That account already exists!</div>\n          );\n        else {\n          createAccount();\n        }\n      });\n    }\n  };\n\n  const createAccount = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(pass1);\n    app_fetch({\n      query: `mutation{createAccount(screenName:\"${esScreenName}\",password:\"${esPass}\"){screenName,profilePicURL}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createAccount) {\n        new Cookies().set(\"account\", screenName, { path: \"/\" });\n        setAccount(res.data.createAccount);\n        setShowSignUp(false);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when creating account\");\n    });\n  };\n\n  const login = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(pass1);\n    app_fetch({\n      query: `mutation{loginAccount(screenName:\"${esScreenName}\",password:\"${esPass}\"){screenName,profilePicURL}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.loginAccount) {\n        new Cookies().set(\"account\", screenName, { path: \"/\" });\n        setAccount(res.data.getAccount);\n        setShowLogin(false);\n        window.location.reload(false);\n      } else\n        setInfo(\n          <div style={{ color: \"red\" }}>\n            That account does not exist or the password did not match!\n          </div>\n        );\n    });\n  };\n\n  useEffect(() => {\n    let loggedInAs = escape(new Cookies().get(\"account\"));\n    if (loggedInAs)\n      app_fetch({\n        query: `mutation{loginAccount(screenName:\"${loggedInAs}\"){screenName,profilePicURL}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) setAccount(res.data.loginAccount);\n        else {\n          alert(\"Something went wrong when logging in\");\n          new Cookies().set(\"account\", \"\", { path: \"/\" });\n        }\n      });\n  }, []);\n\n  if (account === undefined || account === null) {\n    return (\n      <Navbar.Text>\n        You are not logged in.{\" \"}\n        <Button\n          variant=\"light\"\n          onClick={() => {\n            setShowLogin(true);\n            setInfo(\"\");\n          }}\n          size=\"sm\"\n        >\n          Log In\n        </Button>{\" \"}\n        or{\" \"}\n        <Button\n          variant=\"light\"\n          onClick={() => {\n            setShowSignUp(true);\n            setInfo(\"\");\n          }}\n          size=\"sm\"\n        >\n          Sign Up\n        </Button>\n        <Modal show={showLogin} onHide={() => setShowLogin(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Log in</Modal.Title>\n          </Modal.Header>\n          <Form>\n            <Modal.Body>\n              <Form.Label>Screen Name:</Form.Label>\n              <Form.Control\n                value={screenName}\n                onChange={(e) => setScreenName(e.target.value)}\n              />\n              <Form.Label>Password:</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={pass1}\n                onChange={(e) => setPass1(e.target.value)}\n              />\n              {info ? info : \"\"}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant=\"primary\"\n                onClick={() =>\n                  screenName\n                    ? pass1\n                      ? login()\n                      : setInfo(\n                          <span style={{ color: \"red\" }}>\n                            Please enter your screenName!\n                          </span>\n                        )\n                    : setInfo(\n                        <span style={{ color: \"red\" }}>\n                          Please enter your password!\n                        </span>\n                      )\n                }\n              >\n                Log in\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n        <Modal show={showSignUp} onHide={() => setShowSignUp(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Sign Up for Crowdventure!</Modal.Title>\n          </Modal.Header>\n          <Form>\n            <Modal.Body>\n              <Form.Group>\n                <Form.Label>Screen Name:</Form.Label>\n                <Form.Control\n                  value={screenName}\n                  onChange={(e) => setScreenName(e.target.value)}\n                />\n                <Form.Label>Create Password:</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  value={pass1}\n                  onChange={(e) => setPass1(e.target.value)}\n                />\n                <Form.Label>Confirm Password:</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  value={pass2}\n                  onChange={(e) => setPass2(e.target.value)}\n                />\n              </Form.Group>\n              {info ? info : \"\"}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant=\"primary\"\n                onClick={() =>\n                  screenName\n                    ? pass1\n                      ? handleSubmitSignUp()\n                      : setInfo(\n                          <span style={{ color: \"red\" }}>\n                            Please enter a screen name!\n                          </span>\n                        )\n                    : setInfo(\n                        <span style={{ color: \"red\" }}>\n                          Please enter a password!\n                        </span>\n                      )\n                }\n              >\n                Sign Up\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n      </Navbar.Text>\n    );\n  }\n\n  return (\n    <Navbar.Text>\n      You are logged in as:{\" \"}\n      <a\n        href={`/crowdventure/#/account/${account.screenName}`}\n        onClick={() => setTimeout(() => window.location.reload(false), 100)}\n      >\n        <img\n          src={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            border: \"1px solid #bbb\",\n            height: \"2em\",\n            width: \"2em\",\n            \"object-fit\": \"cover\",\n            \"border-radius\": \"50%\",\n          }}\n        />{\" \"}\n        {account.screenName}\n      </a>\n    </Navbar.Text>\n  );\n};\n\nexport default App;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\n\nconst { createApolloFetch } = require(\"apollo-fetch\");\n\nconst { API_KEY } = require(\"./apolloURL\");\n\nconst app_fetch = createApolloFetch({\n  uri: require(\"./apolloURL.js\").backendURL,\n});\n\nconst escape = (text, newlines = false) =>\n  text\n    ? newlines\n      ? text.replace(/\"\"\"/g, ` \"\" \" `)\n      : text.replace(/\\n/g, \"\").replace(/\\\\/g, `\\\\\\\\`).replace(/\"/g, `\\\\\"`)\n    : text;\n\nconst palette = [\n  \"rgb(100, 180, 244)\",\n  \"rgb(158, 232, 255)\",\n  \"rgb(80, 160, 224)\",\n];\n\nconst SearchImage = (props) => {\n  const { callback } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [page, setPage] = useState(0);\n  const [lastQuery, setLastQuery] = useState(\"\");\n\n  const BLURAMOUNT = 10;\n\n  const handleSearch = (query) => {\n    setIsLoading(true);\n\n    fetch(\n      \"https://api.cognitive.microsoft.com/bing/v7.0/images/search?q=\" +\n        encodeURIComponent(query) +\n        \"&count=20&safeSearch=off&offset=\" +\n        (query !== lastQuery ? 0 : page * 20),\n      {\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": API_KEY,\n        },\n      }\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        const newOptions = data.value.reduce(\n          (p, hit, i) =>\n            (i + options.length) % 2 == 0\n              ? [\n                  ...p,\n                  {\n                    id: \"(Image Selected)\",\n                    urls: [hit.thumbnailUrl],\n                    longUrls: [hit.contentUrl],\n                    isFamilyFriendly: [hit.isFamilyFriendly],\n                  },\n                ]\n              : [\n                  ...p.slice(0, p.length - 1),\n                  {\n                    id: \"(Image Selected)\",\n                    urls: [p[p.length - 1].urls[0], hit.thumbnailUrl],\n                    longUrls: [p[p.length - 1].longUrls[0], hit.contentUrl],\n                    isFamilyFriendly: [\n                      p[p.length - 1].isFamilyFriendly[0],\n                      hit.isFamilyFriendly,\n                    ],\n                  },\n                ],\n          query !== lastQuery ? [] : options\n        );\n        setOptions(newOptions);\n\n        if (query !== lastQuery) {\n          setPage(1);\n        } else {\n          setPage(page + 1);\n        }\n        setLastQuery(query);\n        setIsLoading(false);\n      })\n      .catch(console.log);\n  };\n\n  return (\n    <AsyncTypeahead\n      id=\"async-example\"\n      isLoading={isLoading}\n      filterBy={() => true}\n      labelKey=\"id\"\n      minLength={2}\n      onSearch={handleSearch}\n      maxResults={9}\n      onPaginate={() => handleSearch(lastQuery)}\n      useCache={false}\n      options={options}\n      placeholder=\"Search for an image...\"\n      renderMenuItemChildren={(option, props) => (\n        <div>\n          <img\n            onClick={() => callback(option.longUrls[0])}\n            src={option.urls[0]}\n            style={{\n              marginRight: \"10px\",\n              borderRadius: \"4px\",\n              width: \"50%\",\n              height: \"auto\",\n              ...(option.isFamilyFriendly[0]\n                ? {}\n                : {\n                    \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                    filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                  }),\n            }}\n          />\n          {option.urls.length === 2 ? (\n            <img\n              onClick={() => callback(option.longUrls[1])}\n              src={option.urls[1]}\n              style={{\n                marginRight: \"10px\",\n                borderRadius: \"4px\",\n                width: \"50%\",\n                height: \"auto\",\n                ...(option.isFamilyFriendly[1]\n                  ? {}\n                  : {\n                      \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                      filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                    }),\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    />\n  );\n};\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport { app_fetch, escape, palette, SearchImage };\n","const backendURL =\n    \"https://3yfp7ejc0m.execute-api.us-east-1.amazonaws.com/dev/graphql\";\n\nconst API_KEY = \"8300cebe5f0d452a9ccb4bca67af4659\";\n\nmodule.exports = { backendURL, API_KEY };"],"sourceRoot":""}