{"version":3,"sources":["apolloURL.js","Node.jsx","Account.jsx","Home.jsx","App.jsx","index.jsx"],"names":["module","exports","ChoiceColumns","props","owner","account","choices","nodeID","canon","onEdit","CardColumns","map","choice","Card","className","href","to","ID","style","pointerEvents","color","undefined","onClick","setTimeout","window","location","reload","Body","cursor","Title","action","DropdownButton","variant","position","top","right","size","drop","title","class","Dropdown","Item","disabled","screenName","choiceID","app_fetch","query","then","res","err","alert","data","makeNonCanon","makeCanon","suggestedBy","Divider","Footer","dislikedBy","includes","dislikeSuggestion","score","likedBy","likeSuggestion","SearchPage","callback","toID","useState","allNodes","setAllNodes","toNode","setToNode","useEffect","getNode","filterBy","node","text","toLowerCase","defaultSelected","labelKey","options","placeholder","renderMenuItemChildren","Node","history","match","redirect","setRedirect","params","id","setAccount","setNode","info","setInfo","showSuggest","setShowSuggest","suggestAction","setSuggestAction","toPage","setToPage","showCreateNode","setShowCreateNode","setTitle","content","setContent","createNodeCallback","setCreateNodeCallback","showEditNode","setShowEditNode","editTitle","setEditTitle","editContent","setEditContent","showConfirm","setShowConfirm","showEditSuggest","setShowEditSuggest","setChoiceID","cookies","Cookies","loggedInAs","get","loginAccount","set","path","Alert","Heading","Container","canonChoices","length","Button","back","views","OverlayTrigger","overlay","Tooltip","width","nonCanonChoices","Modal","show","onHide","Header","closeButton","Form","Label","Control","required","value","onChange","e","target","editChoice","createNewAction","as","rows","createNode","editNode","Account","accountID","setLoggedInAs","showEditPage","setShowEditPage","bio","setBio","getAccount","left","totalNodeViews","totalSuggestionScore","nodes","featured","flag","featurePage","editAccount","Home","topNodes","setTopNodes","featuredNodes","AccountManager","showLogin","setShowLogin","showSignUp","setShowSignUp","setScreenName","pass1","setPass1","pass2","setPass2","createAccount","Navbar","Text","type","Group","App","expand","Brand","src","process","alt","Toggle","aria-controls","Collapse","component","exact","render","createApolloFetch","require","uri","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cca530fc.chunk.js","sourcesContent":["module.exports =\n    \"https://3yfp7ejc0m.execute-api.us-east-1.amazonaws.com/dev/graphql\";","import React, { useState, useEffect, useRef } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport {\n  Container,\n  Button,\n  Modal,\n  Form,\n  Alert,\n  Card,\n  CardColumns,\n  DropdownButton,\n  Dropdown,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport app_fetch from \"./index\";\n\nconst Node = (props) => {\n  const { history, match } = props;\n  const [redirect, setRedirect] = useState(undefined);\n  const nodeID = match.params.id;\n  const [account, setAccount] = useState(undefined);\n  const [node, setNode] = useState(undefined);\n\n  const [info, setInfo] = useState(\"\");\n\n  const [showSuggest, setShowSuggest] = useState(false);\n  const [suggestAction, setSuggestAction] = useState(\"\");\n  const [toPage, setToPage] = useState(\"\");\n\n  const [showCreateNode, setShowCreateNode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [createNodeCallback, setCreateNodeCallback] = useState(undefined);\n\n  const [showEditNode, setShowEditNode] = useState(false);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editContent, setEditContent] = useState(\"\");\n\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  const [showEditSuggest, setShowEditSuggest] = useState(false);\n  const [choiceID, setChoiceID] = useState(\"\");\n\n  const createNode = () => {\n    if (title.includes('\"'))\n      setInfo(\n        <p style={{ color: \"red\" }}>\n          The title cannot contain (\") character! Try using (') or (`) instead!\n        </p>\n      );\n    else if (content.includes('\"'))\n      setInfo(\n        <p style={{ color: \"red\" }}>\n          The content cannot contain (\") character! Try using (') or (`)\n          instead!\n        </p>\n      );\n    else\n      app_fetch({\n        query: `mutation{createNode(accountScreenName:\"${account.screenName}\",title:\"${title}\",content:\"${content}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.createNode) {\n          createNodeCallback[0](res.data.createNode.ID);\n        } else alert(\"Something went wrong when creating node\");\n      });\n  };\n\n  const editNode = () => {\n    if (editTitle.includes('\"'))\n      setInfo(\n        <p style={{ color: \"red\" }}>\n          The title cannot contain (\") character! Try using (') or (`) instead!\n        </p>\n      );\n    else if (editContent.includes('\"'))\n      setInfo(\n        <p style={{ color: \"red\" }}>\n          The content cannot contain (\") character! Try using (') or (`)\n          instead!\n        </p>\n      );\n    else\n      app_fetch({\n        query: `mutation{editNode(nodeID:\"${nodeID}\",title:\"${editTitle}\",content:\"${editContent}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.editNode) {\n          setShowEditNode(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when editing node\");\n      });\n  };\n\n  const createNewAction = (toID) => {\n    if (!toID) {\n      setShowSuggest(false);\n      setShowCreateNode(true);\n      setCreateNodeCallback([createNewAction]);\n    } else\n      app_fetch({\n        query: `mutation{suggestChoice(accountScreenName:\"${account.screenName}\",fromID:\"${nodeID}\",action:\"${suggestAction}\",toID:\"${toID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) {\n          setShowSuggest(false);\n          setShowCreateNode(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when creating choice!\");\n      });\n  };\n\n  const deletePage = () => {\n    app_fetch({\n      query: `mutation{deleteNode(nodeID:\"${nodeID}\")}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setRedirect(<Redirect to=\"/\" />);\n      else alert(\"Something went wrong when deleting node\");\n    });\n  };\n\n  const editChoice = (toID) => {\n    if (!toID) {\n      setShowEditSuggest(false);\n      setShowCreateNode(true);\n      setCreateNodeCallback([editChoice]);\n    } else {\n      app_fetch({\n        query: `mutation{editSuggestion(choiceID:\"${choiceID}\",action:\"${suggestAction}\",toID:\"${toID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) {\n          setShowEditSuggest(false);\n          setShowCreateNode(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when editing choice!\");\n      });\n    }\n  };\n\n  useEffect(() => {\n    const cookies = new Cookies();\n    const loggedInAs = cookies.get(\"account\");\n\n    app_fetch({\n      query: `query{getNode(ID:\"${nodeID}\"){ID,title,content,views,owner{screenName},canonChoices{suggestedBy{screenName},ID,action,to{ID},score,likedBy{screenName},dislikedBy{screenName}},nonCanonChoices{suggestedBy{screenName},ID,action,to{ID},score,likedBy{screenName},dislikedBy{screenName}}}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setNode(res.data.getNode);\n      else setNode(null);\n    });\n\n    app_fetch({\n      query: `mutation{loginAccount(screenName:\"${loggedInAs}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setAccount(res.data.loginAccount);\n      else {\n        alert(\"Something went wrong when retrieving account\");\n        cookies.set(\"account\", \"\", { path: \"/\" });\n      }\n    });\n  }, []);\n\n  if (node === undefined) {\n    return (\n      <Alert variant=\"light\">\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (node === null)\n    return (\n      <Alert variant=\"danger\">\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <h1>{node.title}</h1>\n      <Container>{node.content}</Container>\n      <p />\n      {node.canonChoices.length ? (\n        <ChoiceColumns\n          owner={node.owner}\n          choices={node.canonChoices}\n          account={account}\n          canon={true}\n          nodeID={node.ID}\n          onEdit={(choice) => {\n            setSuggestAction(choice.action);\n            setToPage(choice.to.ID);\n            setChoiceID(choice.ID);\n            setShowEditSuggest(true);\n          }}\n        />\n      ) : (\n        <p className=\"text-muted\">\n          By decree of <strong>{node.owner.screenName}</strong>, this journey\n          ends here.\n        </p>\n      )}\n      <p />\n\n      <Button\n        variant=\"light\"\n        className=\"text-primary\"\n        onClick={() => {\n          history.back();\n          setTimeout(() => window.location.reload(false), 100);\n        }}\n        size=\"sm\"\n      >\n        Go back!\n      </Button>\n\n      <p />\n      <p>\n        Owner:{\" \"}\n        <a href={`/crowdventure/#/account/${node.owner.screenName}`}>\n          {node.owner.screenName}\n        </a>{\" \"}\n        Views: {node.views}\n        {account && node.owner.screenName === account.screenName ? (\n          <p>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => {\n                setEditTitle(node.title);\n                setEditContent(node.content);\n                setShowEditNode(true);\n              }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"danger\"\n              size=\"sm\"\n              onClick={() => setShowConfirm(true)}\n            >\n              Delete\n            </Button>\n          </p>\n        ) : (\n          \"\"\n        )}\n      </p>\n      <h3>\n        Other options:\n        <p />\n        <OverlayTrigger\n          overlay={\n            !account ? (\n              <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n            ) : (\n              <p />\n            )\n          }\n          style={{ width: \"100%\" }}\n        >\n          <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n            <Button\n              onClick={() => setShowSuggest(true)}\n              disabled={!account}\n              style={{\n                width: \"100%\",\n                pointerEvents: account ? \"auto\" : \"none\",\n              }}\n            >\n              Suggest New Choice\n            </Button>\n          </span>\n        </OverlayTrigger>\n      </h3>\n      <p />\n\n      <ChoiceColumns\n        owner={node.owner}\n        choices={node.nonCanonChoices}\n        account={account}\n        canon={false}\n        nodeID={node.ID}\n        onEdit={(choice) => {\n          setSuggestAction(choice.action);\n          setToPage(choice.to.ID);\n          setChoiceID(choice.ID);\n          setShowEditSuggest(true);\n        }}\n      />\n\n      {/******************************************\n                         MODALS \n        ******************************************/}\n\n      <Modal show={showEditSuggest} onHide={() => setShowEditSuggest(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Editing Choice</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Action:</Form.Label>\n            <Form.Control\n              required\n              value={suggestAction}\n              onChange={(e) => setSuggestAction(e.target.value)}\n            ></Form.Control>\n            <Form.Label>Go to Page:</Form.Label>\n            <SearchPage\n              callback={(nodeID) => setToPage(nodeID)}\n              toID={toPage}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => editChoice(toPage)}>Edit Choice</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showSuggest} onHide={() => setShowSuggest(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Suggesting New Choice</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Action:</Form.Label>\n            <Form.Control\n              required\n              value={suggestAction}\n              onChange={(e) => setSuggestAction(e.target.value)}\n            />\n            <Form.Label>Go to Page:</Form.Label>\n            <SearchPage\n              callback={(nodeID) => setToPage(nodeID)}\n              toID={toPage}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => createNewAction(toPage)}>\n              Submit New Choice\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showCreateNode} onHide={() => setShowCreateNode(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Creating New Page</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              required\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            ></Form.Control>\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              required\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            ></Form.Control>\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={createNode}>Create Page!</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showEditNode} onHide={() => setShowEditNode(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Page</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              required\n              value={editTitle}\n              onChange={(e) => setEditTitle(e.target.value)}\n            ></Form.Control>\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              required\n              value={editContent}\n              onChange={(e) => setEditContent(e.target.value)}\n            ></Form.Control>\n            {info ? info : \"\"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={editNode}>Edit Page!</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Page</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={() => setShowConfirm(false)}>\n            No!\n          </Button>\n          <Button variant=\"primary\" onClick={deletePage}>\n            Yes!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {redirect ? redirect : \"\"}\n    </Container>\n  );\n};\n\nconst ChoiceColumns = (props) => {\n  const { owner, account, choices, nodeID, canon, onEdit } = props;\n\n  const like = (choiceID) => {\n    if (account)\n      app_fetch({\n        query: `mutation{likeSuggestion(accountScreenName:\"${account.screenName}\",choiceID:\"${choiceID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.likeSuggestion) window.location.reload(false);\n      });\n  };\n  const dislike = (choiceID) => {\n    if (account)\n      app_fetch({\n        query: `mutation{dislikeSuggestion(accountScreenName:\"${account.screenName}\",choiceID:\"${choiceID}\"){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.dislikeSuggestion)\n          window.location.reload(false);\n      });\n  };\n\n  const makeCanon = (choiceID) => {\n    app_fetch({\n      query: `mutation{makeCanon(choiceID:\"${choiceID}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.makeCanon) window.location.reload(false);\n    });\n  };\n  const makeNonCanon = (choiceID) => {\n    app_fetch({\n      query: `mutation{makeNonCanon(choiceID:\"${choiceID}\"){ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.makeNonCanon) window.location.reload(false);\n    });\n  };\n\n  const removeSuggestion = (choiceID) => {\n    app_fetch({\n      query: `mutation{removeSuggestion(choiceID:\"${choiceID}\")}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) window.location.reload(false);\n    });\n  };\n\n  return (\n    <CardColumns>\n      {choices.map((choice) => (\n        <Card className=\"text-center\">\n          <a\n            href={choice.to ? `/crowdventure/#/node/${choice.to.ID}` : \"\"}\n            style={{\n              pointerEvents: choice.to ? \"auto\" : \"none\",\n              color: choice.to ? undefined : \"grey\",\n            }}\n            onClick={() => setTimeout(() => window.location.reload(false), 100)}\n          >\n            <Card.Body style={{ cursor: \"pointer\" }}>\n              <Card.Title>{choice.action}</Card.Title>\n            </Card.Body>\n          </a>\n          <DropdownButton\n            variant=\"light\"\n            style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n            size=\"sm\"\n            drop=\"right\"\n            title={<span class=\"fa\">&#xf013;</span>}\n          >\n            <Dropdown.Item\n              disabled={!account || account.screenName !== owner.screenName}\n              onClick={() =>\n                canon ? makeNonCanon(choice.ID) : makeCanon(choice.ID)\n              }\n            >\n              Make {canon ? \"Nonc\" : \"C\"}anon\n            </Dropdown.Item>\n            <Dropdown.Item\n              disabled={\n                !account ||\n                (account.screenName !== choice.suggestedBy.screenName &&\n                  account.screenName !== owner.screenName)\n              }\n              onClick={() => removeSuggestion(choice.ID)}\n            >\n              Delete\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => onEdit(choice)}\n              disabled={\n                !account || choice.suggestedBy.screenName !== account.screenName\n              }\n            >\n              Edit\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item>Report</Dropdown.Item>\n          </DropdownButton>\n          <Card.Footer>\n            <a\n              href={`/crowdventure/#/node/${nodeID}`}\n              style={{\n                pointerEvents: account ? \"auto\" : \"none\",\n                color: account\n                  ? choice.dislikedBy\n                      .map((account) => account.screenName)\n                      .includes(account.screenName)\n                    ? \"red\"\n                    : \"black\"\n                  : \"grey\",\n              }}\n              className=\"fa fa-thumbs-down\"\n              onClick={() => dislike(choice.ID)}\n            ></a>\n            {\" \" + choice.score + \" \"}\n            <a\n              href={`/crowdventure/#/node/${nodeID}`}\n              style={{\n                pointerEvents: account ? \"auto\" : \"none\",\n                color: account\n                  ? choice.likedBy\n                      .map((account) => account.screenName)\n                      .includes(account.screenName)\n                    ? \"green\"\n                    : \"black\"\n                  : \"grey\",\n              }}\n              className=\"fa fa-thumbs-up\"\n              onClick={() => like(choice.ID)}\n            ></a>\n            <br />\n            <small className=\"text-muted\">\n              Suggested By:{\" \"}\n              <a\n                href={`/crowdventure/#/account/${choice.suggestedBy.screenName}`}\n              >\n                {choice.suggestedBy.screenName}\n              </a>\n            </small>\n          </Card.Footer>\n        </Card>\n      ))}\n    </CardColumns>\n  );\n};\n\nconst SearchPage = (props) => {\n  const { callback, toID } = props;\n  const [allNodes, setAllNodes] = useState(undefined);\n  const [toNode, setToNode] = useState(undefined);\n\n  const filterByCallback = (node, props) => {\n    if (props.text === \"\") {\n      callback(\"\");\n      return true;\n    }\n    return (\n      node.title.toLowerCase().includes(props.text) ||\n      node.owner.screenName.toLowerCase().includes(props.text)\n    );\n  };\n\n  useEffect(() => {\n    if (toID) {\n      app_fetch({\n        query: `query{getNode(ID:\"${toID}\"){title,ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.getNode) setToNode(res.data.getNode);\n        else alert(\"Something went wrong when retrieving node\");\n      });\n    } else setToNode(null);\n\n    app_fetch({\n      query: `query{allNodes{title,owner{screenName},ID}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.allNodes) setAllNodes(res.data.allNodes);\n      else alert(\"Something went wrong when retrieving all nodes\");\n    });\n  }, []);\n\n  if (!allNodes || toNode === undefined) return <div>Loading...</div>;\n\n  return (\n    <Typeahead\n      filterBy={filterByCallback}\n      defaultSelected={[toNode ? toNode.title : \"\"]}\n      labelKey=\"title\"\n      options={allNodes}\n      placeholder=\"(Leave Empty to Create New Page)\"\n      renderMenuItemChildren={(node) => (\n        <div onClick={() => callback(node.ID)}>\n          {node.title}\n          <div>\n            <small>Author: {node.owner.screenName}</small>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default Node;\n","import React, { useState, useEffect } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport {\n  Container,\n  Button,\n  Modal,\n  Form,\n  Alert,\n  Card,\n  CardColumns,\n  DropdownButton,\n  Dropdown,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nimport app_fetch from \"./index\";\n\nconst Account = (props) => {\n  const accountID = props.match.params.id;\n  const [redirect, setRedirect] = useState(undefined);\n  const [account, setAccount] = useState(undefined);\n  const [loggedInAs, setLoggedInAs] = useState(undefined);\n\n  const [showCreateNode, setShowCreateNode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n\n  const [showEditPage, setShowEditPage] = useState(false);\n  const [bio, setBio] = useState(\"\");\n\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  const [showProfilePic, setShowProfilePic] = useState(false);\n\n  useEffect(() => {\n    app_fetch({\n      query: `query{getAccount(screenName:\"${accountID}\"){bio,screenName,suggestedChoices{action, from{title}, to{title}},totalNodeViews,totalSuggestionScore, nodes{featured,ID,title,views}}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setAccount(res.data.getAccount);\n      else alert(\"Something went wrong when retrieving account\");\n    });\n\n    const cookies = new Cookies();\n\n    app_fetch({\n      query: `mutation{loginAccount(screenName:\"${cookies.get(\n        \"account\"\n      )}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) setLoggedInAs(res.data.loginAccount);\n      else {\n        alert(\"Something went wrong when logging in account\");\n        cookies.set(\"account\", \"\", { path: \"/\" });\n      }\n    });\n  }, []);\n\n  const editPage = () => {\n    if (bio.includes('\"'))\n      setInfo(\n        <p style={{ color: \"red\" }}>\n          Your bio cannot contain (\") character! Try using (') or (`) instead!\n        </p>\n      );\n    else {\n      app_fetch({\n        query: `mutation{editAccount(screenName:\"${account.screenName}\",bio:\"${bio}\"){bio,screenName,suggestedChoices{action, from{title}, to{title}},totalNodeViews,totalSuggestionScore, nodes{featured,ID,title,views}}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.editAccount) {\n          setAccount(res.data.editAccount);\n          setShowEditPage(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when editing account\");\n      });\n    }\n  };\n\n  const createNode = () => {\n    if (title.includes('\"'))\n      setInfo(\n        <p style={{ color: \"red\" }}>\n          The title cannot contain (\") character! Try using (') or (`) instead!\n        </p>\n      );\n    else if (content.includes('\"'))\n      setInfo(\n        <p style={{ color: \"red\" }}>\n          The content cannot contain (\") character! Try using (') or (`)\n          instead!\n        </p>\n      );\n    else\n      app_fetch({\n        query: `mutation{createNode(accountScreenName:\"${account.screenName}\",title:\"${title}\",content:\"${content}\",featured:true){ID}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.createNode) {\n          setShowCreateNode(false);\n          window.location.reload(false);\n        } else alert(\"Something went wrong when creating node\");\n      });\n  };\n\n  const deleteAccount = () => {\n    new Cookies().set(\"account\", \"\", { path: \"/\" });\n    app_fetch({\n      query: `mutation{deleteAccount(screenName:\"${accountID}\")}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) {\n        setRedirect(<Redirect to=\"/\" />);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when deleting account\");\n    });\n  };\n\n  const featurePage = (node, flag) => {\n    app_fetch({\n      query: `mutation{editNode(nodeID:\"${\n        node.ID\n      }\", featured:${!flag}){title}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data) window.location.reload(false);\n      else alert(\"Something went wrong when featuring page\");\n    });\n    node.featured = true;\n  };\n\n  if (account === undefined) {\n    return (\n      <Alert variant=\"light\">\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (account === null)\n    return (\n      <Alert variant=\"danger\">\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <h1 style={{ position: \"relative\", left: \"5px\" }}>\n        {account.screenName}\n      </h1>\n      {account.bio ? <Container>{account.bio}</Container> : \"\"}\n      <Container className=\"text-muted text-right\">\n        Total views: {account.totalNodeViews} Total score:{\" \"}\n        {account.totalSuggestionScore}\n      </Container>\n      <p />\n      <h3>Featured Pages:</h3>\n      <CardColumns>\n        {account.nodes.map((node) => (\n          <Card>\n            <a href={`/crowdventure/#/node/${node.ID}`}>\n              <Card.Body className=\"text-center\">\n                <Card.Title>{node.title}</Card.Title>\n              </Card.Body>\n            </a>\n            {node.featured ? (\n              <OverlayTrigger\n                overlay={\n                  <Tooltip>This page has been starred by this user!</Tooltip>\n                }\n              >\n                <div\n                  style={{\n                    position: \"absolute\",\n                    top: \"5px\",\n                    left: \"5px\",\n                    color: \"yellow\",\n                    \"-webkit-touch-callout\": \"none\",\n                    \"-webkit-user-select\": \"none\",\n                    \"-khtml-user-select\": \"none\",\n                    \"-moz-user-select\": \"none\",\n                    \"-ms-user-select\": \"none\",\n                    \"user-select\": \"none\",\n                    \"text-shadow\": \"0 0 1px black\",\n                  }}\n                  class=\"fa\"\n                >\n                  &#xf005;\n                </div>\n              </OverlayTrigger>\n            ) : (\n              \"\"\n            )}\n\n            <DropdownButton\n              variant=\"light\"\n              style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n              size=\"sm\"\n              drop=\"right\"\n              title={<span class=\"fa\">&#xf013;</span>}\n            >\n              <Dropdown.Item\n                onClick={() => featurePage(node, node.featured)}\n                disabled={\n                  !loggedInAs || loggedInAs.screenName !== account.screenName\n                }\n              >\n                {node.featured ? \"Un-f\" : \"F\"}eature page\n              </Dropdown.Item>\n              <Dropdown.Item\n                disabled={\n                  !loggedInAs || loggedInAs.screenName !== account.screenName\n                }\n              >\n                Delete\n              </Dropdown.Item>\n              <Dropdown.Item\n                disabled={\n                  !loggedInAs || loggedInAs.screenName !== account.screenName\n                }\n              >\n                Make Private\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item>Report</Dropdown.Item>\n            </DropdownButton>\n            <Card.Footer className=\"text-muted text-center\">\n              <small>\n                Created by: {account.screenName}\n                <br />\n                Views:{\" \" + node.views}\n              </small>\n            </Card.Footer>\n          </Card>\n        ))}\n      </CardColumns>\n      <p />\n      {loggedInAs && loggedInAs.screenName === account.screenName ? (\n        <Container>\n          <Button onClick={() => setShowCreateNode(true)}>\n            Create new Page\n          </Button>{\" \"}\n          <Button\n            variant=\"light\"\n            onClick={() => {\n              setBio(account.bio);\n              setShowEditPage(true);\n            }}\n          >\n            Edit Account\n          </Button>\n          <Modal show={showCreateNode} onHide={() => setShowCreateNode(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Creating New Page</Modal.Title>\n            </Modal.Header>\n            <Form>\n              <Modal.Body>\n                <Form.Label>Title:</Form.Label>\n                <Form.Control\n                  required\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                ></Form.Control>\n                <Form.Label>Content:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                  value={content}\n                  onChange={(e) => setContent(e.target.value)}\n                ></Form.Control>\n                {info ? info : \"\"}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={createNode}>Create Page!</Button>\n              </Modal.Footer>\n            </Form>\n          </Modal>\n          <Modal show={showEditPage} onHide={() => setShowEditPage(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Editing Account</Modal.Title>\n            </Modal.Header>\n            <Form>\n              <Modal.Body>\n                <Form.Label>Bio:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  value={bio}\n                  onChange={(e) => setBio(e.target.value)}\n                ></Form.Control>\n                {info ? info : \"\"}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={editPage}>Edit Account</Button>\n                <Button\n                  href=\"/crowdventure\"\n                  onClick={() =>\n                    new Cookies().set(\"account\", \"\", { path: \"/\" })\n                  }\n                  variant=\"danger\"\n                >\n                  Log out\n                </Button>\n                <Button onClick={() => setShowConfirm(true)} variant=\"danger\">\n                  Delete Account\n                </Button>\n              </Modal.Footer>\n            </Form>\n          </Modal>\n          <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Delete Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure?</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"danger\" onClick={() => setShowConfirm(false)}>\n                No!\n              </Button>\n              <Button variant=\"primary\" onClick={deleteAccount}>\n                Yes!\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      ) : (\n        \"\"\n      )}\n      {redirect ? redirect : \"\"}\n    </Container>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Card, CardColumns } from \"react-bootstrap\";\n\nimport app_fetch from \"./index\";\n\nconst Home = () => {\n  const [topNodes, setTopNodes] = useState(undefined);\n  const [topAccounts, setTopAccounts] = useState(undefined);\n\n  useEffect(() => {\n    app_fetch({\n      query: `query{featuredNodes{ID,title,owner{screenName},views}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.featuredNodes)\n        setTopNodes(res.data.featuredNodes);\n      else alert(\"Something went wrong when retrieving featured nodes\");\n    });\n\n    // app_fetch({\n    //   query: `query{allAccounts{screenName,totalNodeViews,totalSuggestionScore}}`,\n    // }).then((res, err) => {\n    //   if (err) alert(err);\n    //   if (res.data && res.data.allAccounts)\n    //     setTopAccounts(res.data.allAccounts);\n    //   else alert(\"Something went wrong when retrieving accounts\");\n    // });\n  }, []);\n\n  return (\n    <Container>\n      <h1>Welcome!</h1>\n      <Container>\n        Crowdventure is a Crowd-Sourced\n        Choose-and-Create-Your-Own-Adventure-Game!\n      </Container>\n      <p />\n      <h3>Featured Pages:</h3>\n      {topNodes ? (\n        <CardColumns>\n          {topNodes.map((node) => (\n            <Card className=\"text-center\">\n              <a href={`/crowdventure/#/node/${node.ID}`}>\n                <Card.Body>\n                  <Card.Title>{node.title}</Card.Title>\n                </Card.Body>\n              </a>\n              <Card.Footer>\n                <small className=\"text-muted\">\n                  Created by:{\" \"}\n                  <a href={`/crowdventure/#/account/${node.owner.screenName}`}>\n                    {node.owner.screenName}\n                  </a>\n                  <br />\n                  Views:{\" \" + node.views}\n                </small>\n              </Card.Footer>\n            </Card>\n          ))}\n        </CardColumns>\n      ) : (\n        \"\"\n      )}\n      {/* <h3>Featured Accounts:</h3>\n      {topAccounts ? (\n        <CardColumns>\n          {topAccounts.map((account) => (\n            <Card>\n              <a href={`/crowdventure/#/account/${account.screenName}`}>\n                <Card.Body>\n                  <Card.Title>{account.screenName}</Card.Title>\n                </Card.Body>\n              </a>\n              <Card.Footer>\n                Total Views:{account.totalNodeViews}\n                <br />\n                Total Score:{account.totalSuggestionScore}\n              </Card.Footer>\n            </Card>\n          ))}\n        </CardColumns>\n      ) : (\n        \"\"\n      )} */}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Node from \"./Node\";\nimport Account from \"./Account\";\nimport Home from \"./Home\";\n\nimport Cookies from \"universal-cookie\";\nimport { Navbar, Container, Button, Modal, Form } from \"react-bootstrap\";\n\nimport app_fetch from \"./index\";\n\nimport history from \"history/browser\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/crowdventure\">\n          <img\n            href=\"/crowdventure\"\n            src={process.env.PUBLIC_URL + \"/logo.png\"}\n            alt=\"Crowdventure Logo\"\n            style={{ width: \"100%\" }}\n          />\n        </Navbar.Brand>\n        <small class=\"text-muted\">Version: 0.1.3</small>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"bg-light\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n          <AccountManager />\n        </Navbar.Collapse>\n      </Navbar>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route\n            path=\"/node/:id\"\n            render={(props) => <Node {...props} history={history} />}\n          />\n          <Route path=\"/account/:id\" component={Account} />\n        </Switch>\n      </HashRouter>\n      <Navbar className=\"text-right\">\n        <small class=\"text-muted\">@ 2020 Copyright: (MIT) Benjamin Kern</small>\n      </Navbar>\n    </Container>\n  );\n};\n\nconst AccountManager = () => {\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [account, setAccount] = useState(undefined);\n  const [info, setInfo] = useState(undefined);\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n\n  const handleSubmitSignUp = () => {\n    if (pass1 !== pass2)\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n    else if (screenName.includes('\"'))\n      setInfo(\n        <div style={{ color: \"red\" }}>\n          Screen Name cannot include (\") character!\n        </div>\n      );\n    else if (pass1.includes('\"'))\n      setInfo(\n        <div style={{ color: \"red\" }}>\n          Password cannot include (\") character!\n        </div>\n      );\n    else\n      app_fetch({\n        query: `query{getAccount(screenName:\"${screenName}\"){screenName}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.getAccount)\n          setInfo(\n            <div style={{ color: \"red\" }}>That account already exists!</div>\n          );\n        else {\n          createAccount();\n        }\n      });\n  };\n\n  const createAccount = () =>\n    app_fetch({\n      query: `mutation{createAccount(screenName:\"${screenName}\",password:\"${pass1}\"){screenName}}`,\n    }).then((res, err) => {\n      if (err) alert(err);\n      if (res.data && res.data.createAccount) {\n        new Cookies().set(\"account\", screenName, { path: \"/\" });\n        setAccount(res.data.createAccount);\n        setShowSignUp(false);\n        window.location.reload(false);\n      } else alert(\"Something went wrong when creating account\");\n    });\n\n  const login = () => {\n    if (screenName.includes('\"'))\n      setInfo(\n        <div style={{ color: \"red\" }}>\n          Screen Name cannot include (\") character!\n        </div>\n      );\n    else if (pass1.includes('\"'))\n      setInfo(\n        <div style={{ color: \"red\" }}>\n          Password cannot include (\") character!\n        </div>\n      );\n    else {\n      app_fetch({\n        query: `mutation{loginAccount(screenName:\"${screenName}\",password:\"${pass1}\"){screenName}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data && res.data.loginAccount) {\n          new Cookies().set(\"account\", screenName, { path: \"/\" });\n          setAccount(res.data.getAccount);\n          setShowLogin(false);\n          window.location.reload(false);\n        } else\n          setInfo(\n            <div style={{ color: \"red\" }}>\n              That account does not exist or the password did not match!\n            </div>\n          );\n      });\n    }\n  };\n\n  useEffect(() => {\n    let loggedInAs = new Cookies().get(\"account\"); // INSECURE DOES NOT CHECK FOR PASSWORD WHEN YOU LOAD PAGE BUT WAHTEVER\n    if (loggedInAs)\n      app_fetch({\n        query: `mutation{loginAccount(screenName:\"${loggedInAs}\"){screenName}}`,\n      }).then((res, err) => {\n        if (err) alert(err);\n        if (res.data) setAccount(res.data.loginAccount);\n        else {\n          alert(\"Something went wrong when logging in\");\n          new Cookies().set(\"account\", \"\", { path: \"/\" });\n        }\n      });\n  }, []);\n\n  if (account === undefined || account === null) {\n    return (\n      <Navbar.Text>\n        You are not logged in.{\" \"}\n        <Button variant=\"light\" onClick={() => setShowLogin(true)} size=\"sm\">\n          Log In\n        </Button>{\" \"}\n        or{\" \"}\n        <Button variant=\"light\" onClick={() => setShowSignUp(true)} size=\"sm\">\n          Sign Up\n        </Button>\n        <Modal show={showLogin} onHide={() => setShowLogin(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Log in</Modal.Title>\n          </Modal.Header>\n          <Form>\n            <Modal.Body>\n              <Form.Label>Screen Name:</Form.Label>\n              <Form.Control\n                required\n                value={screenName}\n                onChange={(e) => setScreenName(e.target.value)}\n              />\n              <Form.Label>Password:</Form.Label>\n              <Form.Control\n                required\n                type=\"password\"\n                value={pass1}\n                onChange={(e) => setPass1(e.target.value)}\n              />\n              {info ? info : \"\"}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={() => login()}>\n                Log in\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n        <Modal show={showSignUp} onHide={() => setShowSignUp(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Sign Up for Crowdventure!</Modal.Title>\n          </Modal.Header>\n          <Form>\n            <Modal.Body>\n              <Form.Group>\n                <Form.Label>Screen Name:</Form.Label>\n                <Form.Control\n                  required\n                  value={screenName}\n                  onChange={(e) => setScreenName(e.target.value)}\n                />\n                <Form.Label>Create Password:</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  value={pass1}\n                  onChange={(e) => setPass1(e.target.value)}\n                />\n                <Form.Label>Confirm Password:</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  value={pass2}\n                  onChange={(e) => setPass2(e.target.value)}\n                />\n              </Form.Group>\n              {info ? info : \"\"}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={() => handleSubmitSignUp()}>\n                Sign Up\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n      </Navbar.Text>\n    );\n  }\n\n  return (\n    <Navbar.Text>\n      You are logged in as:{\" \"}\n      <a\n        href={`/crowdventure/#/account/${account.screenName}`}\n        onClick={() => setTimeout(() => window.location.reload(false), 100)}\n      >\n        {account.screenName}\n      </a>\n    </Navbar.Text>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst { createApolloFetch } = require(\"apollo-fetch\");\n\nconst app_fetch = createApolloFetch({\n  uri: require(\"./apolloURL.js\"),\n});\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport default app_fetch;\n"],"sourceRoot":""}