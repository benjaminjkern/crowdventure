{"version":3,"sources":["Modals/PictureModal.jsx","SearchImage.jsx","Modals/ConfirmModal.jsx","Modals/EditNodeModal.jsx","Node/SearchPage.jsx","Modals/CreateNodeModal.jsx","Modals/SuggestChoiceModal.jsx","Modals/EditChoiceModal.jsx","Node/ChoiceColumns.jsx","Node/Node.jsx","Modals/EditAccountModal.jsx","Modals/UnsafeModal.jsx","NodeViewer.jsx","Account.jsx","Home.jsx","Modals/LoginModal.jsx","Modals/SignUpModal.jsx","AccountManager.jsx","App.jsx","index.jsx","apolloURL.js"],"names":["PictureModal","props","title","pictureURL","close","loggedInAs","useState","show","setShow","info","setInfo","Modal","onHide","Header","unsafeMode","style","backgroundColor","palette","closeButton","Title","Body","src","onError","e","target","display","color","width","maxHeight","Footer","Button","size","onClick","border","onMouseEnter","onMouseLeave","Math","random","BING_API_KEY","require","SearchImage","callback","isLoading","setIsLoading","options","setOptions","page","setPage","lastQuery","setLastQuery","handleSearch","query","fetch","encodeURIComponent","headers","then","data","json","newOptions","value","reduce","p","hit","i","length","id","urls","thumbnailUrl","longUrls","contentUrl","isFamilyFriendly","slice","catch","console","log","filterBy","labelKey","minLength","onSearch","maxResults","onPaginate","useCache","placeholder","renderMenuItemChildren","option","marginRight","borderRadius","height","filter","ConfirmModal","content","onConfirm","variant","EditNodeModal","node","undefined","showingModal","showModal","setTitle","setContent","picture","setPicture","showChangePic","setShowChangePic","shouldHide","setShouldHide","deletePage","mutation_call","nodeID","ID","history","back","setTimeout","window","location","reload","Form","padding","class","position","top","right","cursor","textShadow","url","familyFriendly","Label","Control","onChange","as","rows","esTitle","escape","esContent","esPicture","hidden","res","editNode","SearchPage","toID","allNodes","setAllNodes","toNode","setToNode","useEffect","query_call","owner","screenName","profilePicURL","text","toLowerCase","includes","defaultSelected","process","CreateNodeModal","featured","pictureField","setPictureField","alt","accountScreenName","createNode","SuggestChoiceModal","fromNode","toPage","setToPage","suggestAction","setSuggestAction","createNewAction","escaped","fromID","action","EditChoiceModal","choice","to","editChoice","choiceID","ChoiceColumns","canon","canonChoices","nonCanonChoices","map","choices","setChoices","refs","some","forEach","likedBy","dislikedBy","score","suggestedBy","from","liked","account","disliked","CardColumns","idx","push","createRef","Card","className","boxShadow","overflow","ref","paddingTop","disabled","href","scrollTo","left","behavior","pointerEvents","current","OverlayTrigger","overlay","Tooltip","DropdownButton","drop","Dropdown","Item","makeCanon","Divider","reportingObjectType","reportingObjectID","reporting","alert","dislike","like","Alert","Cookies","get","Heading","Node","match","setNode","pageID","params","fgColor","bgColor","views","returnNode","Container","dismissible","onClose","onLoad","marginLeft","split","line","textIndent","paddingRight","paddingBottom","EditAccountModal","bio","profilePicture","setAccount","setRedirect","bioField","setBioField","profilePictureField","setProfilePictureField","nameField","setNameField","pass1","setPass1","pass2","setPass2","editPage","checkedIfExists","esBio","esScreenName","newScreenName","newPassword","totalNodeViews","totalSuggestionScore","nodes","set","path","opacity","type","understand","setUnderstand","Check","float","label","checked","NodeViewer","marginTop","marginBottom","Img","parentNode","alreadyFeatured","featurePage","Account","setLoggedInAs","redirect","searchQuery","setSearchQuery","searchedNodes","setSearchedNodes","featuredNodes","onstyle","UnsafeModal","borderColor","Home","topNodes","setTopNodes","LoginModal","setScreenName","password","setPassword","esPass","login","SignUpModal","createAccount","Group","handleSubmitSignUp","AccountManager","Navbar","Text","packageJson","App","cookies","savedAccount","document","getElementById","backgroundImage","expand","Brand","version","Toggle","aria-controls","Collapse","render","exact","app_fetch","createApolloFetch","uri","backendURL","parameters","attributes","formatParameters","formatAttributes","err","Object","keys","param","join","attribute","newlines","replace","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.e450eb9a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst PictureModal = (props) => {\n  const { title, pictureURL, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        <img\n          src={pictureURL}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n            setInfo(<span style={{ color: \"red\" }}>Picture not found!</span>);\n          }}\n          style={{\n            width: \"100%\",\n            maxHeight: \"70vh\",\n            \"object-fit\": \"contain\",\n          }}\n        />\n        {info ? info : \"\"}\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          size=\"sm\"\n          onClick={() => {\n            setShow(false);\n            close();\n          }}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Thanks for showing me this {Math.random() < 0.5 ? \"cool\" : \"neat\"}{\" \"}\n          picture!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default PictureModal;\n","import React, { useState } from \"react\";\n\nimport { AsyncTypeahead, TypeaheadMenu } from \"react-bootstrap-typeahead\";\n\nimport { palette } from \"./index\";\n\nconst { BING_API_KEY } = require(\"./apolloURL\");\n\nconst SearchImage = (props) => {\n  const { callback, loggedInAs } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [page, setPage] = useState(0);\n  const [lastQuery, setLastQuery] = useState(\"\");\n\n  const BLURAMOUNT = 10;\n\n  const handleSearch = (query) => {\n    setIsLoading(true);\n\n    fetch(\n      \"https://api.cognitive.microsoft.com/bing/v7.0/images/search?q=\" +\n        encodeURIComponent(query) +\n        `&count=20&safeSearch=${\n          loggedInAs && loggedInAs.unsafeMode ? \"Off\" : \"Strict\"\n        }&offset=` +\n        (query !== lastQuery ? 0 : page * 20),\n      {\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": BING_API_KEY,\n        },\n      }\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        const newOptions = data.value.reduce(\n          (p, hit, i) =>\n            (i + options.length) % 2 == 0\n              ? [\n                  ...p,\n                  {\n                    id: \"(Image Selected)\",\n                    urls: [hit.thumbnailUrl],\n                    longUrls: [hit.contentUrl],\n                    isFamilyFriendly: [hit.isFamilyFriendly],\n                  },\n                ]\n              : [\n                  ...p.slice(0, p.length - 1),\n                  {\n                    id: \"(Image Selected)\",\n                    urls: [p[p.length - 1].urls[0], hit.thumbnailUrl],\n                    longUrls: [p[p.length - 1].longUrls[0], hit.contentUrl],\n                    isFamilyFriendly: [\n                      p[p.length - 1].isFamilyFriendly[0],\n                      hit.isFamilyFriendly,\n                    ],\n                  },\n                ],\n          query !== lastQuery ? [] : options\n        );\n        setOptions(newOptions);\n\n        if (query !== lastQuery) {\n          setPage(1);\n        } else {\n          setPage(page + 1);\n        }\n        setLastQuery(query);\n        setIsLoading(false);\n      })\n      .catch(console.log);\n  };\n\n  return (\n    <AsyncTypeahead\n      id=\"async-example\"\n      isLoading={isLoading}\n      filterBy={() => true}\n      labelKey=\"id\"\n      minLength={2}\n      onSearch={handleSearch}\n      maxResults={9}\n      onPaginate={() => handleSearch(lastQuery)}\n      useCache={false}\n      options={options}\n      placeholder=\"Search for an image...\"\n      renderMenuItemChildren={(option) => (\n        <div>\n          <img\n            onClick={() =>\n              callback(option.longUrls[0], option.isFamilyFriendly[0])\n            }\n            src={option.urls[0]}\n            style={{\n              marginRight: \"10px\",\n              borderRadius: \"4px\",\n              width: \"50%\",\n              height: \"auto\",\n              ...(option.isFamilyFriendly[0]\n                ? {}\n                : {\n                    \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                    filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                  }),\n            }}\n          />\n          {option.urls.length === 2 ? (\n            <img\n              onClick={() =>\n                callback(option.longUrls[1], option.isFamilyFriendly[1])\n              }\n              src={option.urls[1]}\n              style={{\n                marginRight: \"10px\",\n                borderRadius: \"4px\",\n                width: \"50%\",\n                height: \"auto\",\n                ...(option.isFamilyFriendly[1]\n                  ? {}\n                  : {\n                      \"-webkit-filter\": \"blur(\" + BLURAMOUNT + \"px)\",\n                      filter: \"blur(\" + BLURAMOUNT + \"px)\",\n                    }),\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    />\n  );\n};\n\nexport default SearchImage;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst ConfirmModal = (props) => {\n  const { title, content, onConfirm, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        {content}\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            setShow(false);\n            close();\n          }}\n        >\n          No!\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={onConfirm}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Yes!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useState } from \"react\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nimport { Modal, Form, Button } from \"react-bootstrap\";\n\nimport SearchImage from \"../SearchImage\";\nimport ConfirmModal from \"./ConfirmModal\";\n\nconst EditNodeModal = (props) => {\n  const { node, close, loggedInAs } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n  const [showingModal, showModal] = useState(undefined);\n\n  const [title, setTitle] = useState(node.title);\n  const [content, setContent] = useState(node.content);\n  const [picture, setPicture] = useState(node.pictureURL);\n  const [showChangePic, setShowChangePic] = useState(false);\n\n  const [shouldHide, setShouldHide] = useState(false);\n\n  const deletePage = () => {\n    mutation_call(\"deleteNode\", { nodeID: node.ID }, 0, () => {\n      history.back();\n      setTimeout(() => window.location.reload(false), 100);\n    });\n  };\n\n  const editNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = escape(picture);\n\n    mutation_call(\n      \"editNode\",\n      {\n        nodeID: node.ID,\n        title: esTitle,\n        content: `\"\"${esContent}\"\"`,\n        pictureURL: esPicture,\n        ...(shouldHide ? { hidden: true } : {}),\n      },\n      { ID: 0 },\n      (res) => {\n        if (res) {\n          window.location.reload(false);\n        }\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Page</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {picture ? (\n            <>\n              <div\n                style={{\n                  border: \"1px solid #eee\",\n                  borderRadius: \"8px\",\n                }}\n              >\n                <img\n                  src={picture}\n                  onError={(e) => {\n                    setInfo(\n                      <span style={{ color: \"red\" }}>Picture not found!</span>\n                    );\n                    setPicture(\"\");\n                    setShouldHide(false);\n                  }}\n                  style={{\n                    padding: \"1px\",\n                    width: \"100%\",\n                    \"object-fit\": \"contain\",\n                    borderRadius: \"8px\",\n                  }}\n                />\n                <span\n                  class=\"fa fa-times\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"1.5em\",\n                    right: \"1.5em\",\n                    color: \"#888\",\n                    cursor: \"pointer\",\n                    textShadow:\n                      \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                  }}\n                  onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                  onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                  onClick={() => {\n                    setPicture(\"\");\n                    setShouldHide(false);\n                  }}\n                />\n              </div>\n\n              <br />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <div class=\"row no-gutters\">\n            <div class=\"col\">Picture:</div>\n            <div class=\"col small text-muted text-center\">\n              {!picture\n                ? \"(Don't use any picture)\"\n                : picture === node.pictureURL\n                ? \"(Use existing picture)\"\n                : \"(Use new picture)\"}\n            </div>\n            <div class=\"col text-right\">\n              <Button\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                size=\"sm\"\n                onClick={() => setShowChangePic(!showChangePic)}\n              >\n                {picture ? \"Change\" : \"Select\"} Picture\n              </Button>\n            </div>\n          </div>\n          {showChangePic ? (\n            <SearchImage\n              loggedInAs={loggedInAs}\n              callback={(url, familyFriendly) => {\n                setPicture(url);\n                setShowChangePic(false);\n                setShouldHide(!familyFriendly);\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n          <Form.Label>Title:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <Form.Label>Content:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            as=\"textarea\"\n            rows=\"3\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n          {info ? info : \"\"}\n          {shouldHide ? (\n            <span style={{ color: \"red\" }}>\n              The image chosen will cause the page to automatically be hidden.\n              If you would like to not have this happen, change or remove the\n              image.\n            </span>\n          ) : (\n            \"\"\n          )}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              title\n                ? content\n                  ? editNode()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Content cannot be empty!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>Title cannot be empty!</span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Page!\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              showModal(\n                <ConfirmModal\n                  loggedInAs={loggedInAs}\n                  close={() => showModal(undefined)}\n                  onConfirm={deletePage}\n                  title=\"Delete Page\"\n                  content=\"This will erase all suggested choices of this page, and their associated scores. This will NOT delete sub-pages of this page. Are you sure you wish to continue?\"\n                />\n              );\n            }}\n          >\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default EditNodeModal;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport { query_call } from \"../index\";\n\nconst SearchPage = (props) => {\n  const { callback, toID } = props;\n  const [allNodes, setAllNodes] = useState(undefined);\n  const [toNode, setToNode] = useState(undefined);\n\n  const filterByCallback = (node, props) => {\n    if (props.text === \"\") {\n      callback(\"\");\n      return true;\n    }\n    return (\n      node.title.toLowerCase().includes(props.text.toLowerCase()) ||\n      node.owner.screenName.toLowerCase().includes(props.text.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    if (toID) {\n      query_call(\"getNode\", { ID: toID }, { title: 0, ID: 0 }, (res) =>\n        setToNode(res)\n      );\n    } else setToNode(null);\n\n    query_call(\n      \"allNodes\",\n      {},\n      { title: 0, owner: { screenName: 0, profilePicURL: 0 }, ID: 0 },\n      (res) => setAllNodes(res)\n    );\n  }, []);\n\n  if (!allNodes || toNode === undefined) return <div>Loading...</div>;\n\n  return (\n    <Typeahead\n      filterBy={filterByCallback}\n      defaultSelected={[toNode ? toNode.title : \"\"]}\n      labelKey=\"title\"\n      options={allNodes}\n      placeholder=\"(Leave Empty to Create New Page)\"\n      renderMenuItemChildren={(node) => (\n        <div onClick={() => callback(node.ID)}>\n          {node.title}\n          <div>\n            <small>\n              Author:{\" \"}\n              <img\n                src={\n                  node.owner.profilePicURL\n                    ? node.owner.profilePicURL\n                    : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                }\n                onError={(e) => {\n                  e.target.src =\n                    process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                }}\n                style={{\n                  border: \"1px solid #bbb\",\n                  height: \"2em\",\n                  width: \"2em\",\n                  \"object-fit\": \"cover\",\n                  \"border-radius\": \"50%\",\n                }}\n              />{\" \"}\n              {node.owner.screenName}\n            </small>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default SearchPage;\n","import React, { useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\n\nimport { escape, mutation_call, palette } from \"../index\";\n\nimport SearchImage from \"../SearchImage\";\n\nconst CreateNodeModal = (props) => {\n  const { loggedInAs, callback, picture, close, featured } = props;\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [pictureField, setPictureField] = useState(picture);\n  const [showChangePic, setShowChangePic] = useState(false);\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n  const [shouldHide, setShouldHide] = useState(false);\n\n  const createNode = () => {\n    const esTitle = escape(title);\n    const esContent = escape(content, true);\n    const esPicture = escape(pictureField);\n    mutation_call(\n      \"createNode\",\n      {\n        accountScreenName: loggedInAs.screenName,\n        title: esTitle,\n        content: `\"\"${esContent}\"\"`,\n        featured: featured || false,\n        ...(shouldHide ? { hidden: true } : {}),\n        ...(esPicture && esPicture.length ? { pictureURL: esPicture } : {}),\n      },\n      { ID: 0 },\n      callback ||\n        (() => {\n          window.location.reload(false);\n        })\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Creating New Page</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {pictureField ? (\n            <>\n              <div\n                style={{\n                  border: \"1px solid #eee\",\n                  borderRadius: \"8px\",\n                }}\n              >\n                <img\n                  src={pictureField}\n                  onError={() => {\n                    setPictureField(\"\");\n                    setShouldHide(false);\n                  }}\n                  alt=\"This shouldn't have happened\"\n                  style={{\n                    padding: \"1px\",\n                    width: \"100%\",\n                    \"object-fit\": \"contain\",\n                    borderRadius: \"8px\",\n                  }}\n                />\n                <span\n                  class=\"fa fa-times\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"1.5em\",\n                    right: \"1.5em\",\n                    color: \"#888\",\n                    cursor: \"pointer\",\n                    textShadow:\n                      \"-1px 0 2px white, 0 1px 2px white, 1px 0 2px white, 0 -1px 2px white\",\n                  }}\n                  onMouseEnter={(e) => (e.target.style.color = \"#555\")}\n                  onMouseLeave={(e) => (e.target.style.color = \"#888\")}\n                  onClick={() => {\n                    setPictureField(\"\");\n                    setShouldHide(false);\n                  }}\n                />\n              </div>\n\n              <br />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <div class=\"row no-gutters\">\n            <div class=\"col\">Picture:</div>\n            <div class=\"col small text-muted text-center\">\n              {!pictureField ? \"(Don't use any picture)\" : \"(Use new picture)\"}\n            </div>\n            <div class=\"col text-right\">\n              <Button\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                size=\"sm\"\n                onClick={() => setShowChangePic(!showChangePic)}\n              >\n                {pictureField ? \"Change\" : \"Select\"} Picture\n              </Button>\n            </div>\n          </div>\n          {showChangePic ? (\n            <SearchImage\n              loggedInAs={loggedInAs}\n              callback={(url, familyFriendly) => {\n                setPictureField(url);\n                setShowChangePic(false);\n                setShouldHide(!familyFriendly);\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n          <Form.Label>Title:</Form.Label>\n          <Form.Control\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          <Form.Label>Content:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            value={content}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            onChange={(e) => setContent(e.target.value)}\n          />\n          {info || \"\"}\n          {shouldHide ? (\n            <span style={{ color: \"red\" }}>\n              The image chosen will cause the page to automatically be hidden.\n              If you would like to not have this happen, change or remove the\n              image.\n            </span>\n          ) : (\n            \"\"\n          )}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              title\n                ? content\n                  ? createNode()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Content cannot be empty!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>Title cannot be empty!</span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Create Page!\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CreateNodeModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport SearchPage from \"../Node/SearchPage\";\n\nimport CreateNodeModal from \"./CreateNodeModal\";\n\nimport { mutation_call, escape, palette } from \"../index\";\n\nconst SuggestChoiceModal = (props) => {\n  const { loggedInAs, fromNode, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [toPage, setToPage] = useState(\"\");\n  const [suggestAction, setSuggestAction] = useState(\"\");\n  const [showingModal, showModal] = useState(\"\");\n\n  const createNewAction = (toID) => {\n    if (!toID) {\n      showModal(\n        <CreateNodeModal\n          loggedInAs={loggedInAs}\n          picture={fromNode.pictureURL}\n          callback={(node) => createNewAction(node.ID)}\n          close={() => showModal(undefined)}\n        />\n      );\n    } else {\n      const escaped = escape(suggestAction);\n      mutation_call(\n        \"suggestChoice\",\n        {\n          accountScreenName: loggedInAs.screenName,\n          fromID: fromNode.ID,\n          action: escaped,\n          toID,\n        },\n        { ID: 0 },\n        () => {\n          window.location.reload(false);\n        }\n      );\n    }\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Suggesting New Choice</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Action:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={suggestAction}\n            onChange={(e) => setSuggestAction(e.target.value)}\n          />\n          <Form.Label>Go to Page:</Form.Label>\n          <SearchPage callback={(nodeID) => setToPage(nodeID)} toID={toPage} />\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              suggestAction\n                ? createNewAction(toPage)\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Action cannot be empty!\n                    </span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Submit New Choice\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default SuggestChoiceModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport SearchPage from \"../Node/SearchPage\";\n\nimport CreateNodeModal from \"./CreateNodeModal\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nconst EditChoiceModal = (props) => {\n  const { choice, loggedInAs, fromNode, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [toPage, setToPage] = useState(choice.to.ID);\n  const [suggestAction, setSuggestAction] = useState(choice.action);\n  const [showingModal, showModal] = useState(\"\");\n\n  const editChoice = (toID) => {\n    if (!toID) {\n      showModal(\n        <CreateNodeModal\n          loggedInAs={loggedInAs}\n          picture={fromNode.pictureURL}\n          callback={(node) => editChoice(node.ID)}\n          close={() => showModal(undefined)}\n        />\n      );\n    } else {\n      const escaped = escape(suggestAction);\n      mutation_call(\n        \"editSuggestion\",\n        { choiceID: choice.ID, action: escaped, toID: toID },\n        { ID: 0 },\n        () => {\n          window.location.reload(false);\n        }\n      );\n    }\n  };\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Choice</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Action:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={suggestAction}\n            onChange={(e) => setSuggestAction(e.target.value)}\n          ></Form.Control>\n          <Form.Label>Go to Page:</Form.Label>\n          <SearchPage callback={(nodeID) => setToPage(nodeID)} toID={toPage} />\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() =>\n              suggestAction\n                ? editChoice(toPage)\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Action cannot be empty!\n                    </span>\n                  )\n            }\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Choice\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\n\nexport default EditChoiceModal;\n","import React, { useState, useEffect, createRef } from \"react\";\n\nimport {\n  CardColumns,\n  Card,\n  DropdownButton,\n  Dropdown,\n  Alert,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport EditChoiceModal from \"../Modals/EditChoiceModal\";\n\nimport { mutation_call, query_call, palette } from \"../index\";\n\nconst ChoiceColumns = (props) => {\n  const { node, loggedInAs, canon } = props;\n\n  const [choices, setChoices] = useState(\n    (canon ? node.canonChoices : node.nonCanonChoices).map(() => null)\n  );\n\n  const refs = [];\n\n  const [showingModal, showModal] = useState(undefined);\n\n  const like = (idx) => {\n    if (loggedInAs) {\n      const choice = choices[idx];\n\n      if (choice.liked) {\n        choice.liked = false;\n        choice.score--;\n      } else {\n        choice.liked = true;\n        choice.score++;\n        if (choice.disliked) choice.score++;\n      }\n      choice.disliked = false;\n      setChoices([\n        ...choices.slice(0, idx),\n        choice,\n        ...choices.slice(idx + 1, choices.length),\n      ]);\n\n      mutation_call(\n        \"likeSuggestion\",\n        { accountScreenName: loggedInAs.screenName, choiceID: choice.ID },\n        { ID: 0 },\n        () => {}\n      );\n    }\n  };\n\n  const dislike = (idx) => {\n    if (loggedInAs) {\n      const choice = choices[idx];\n\n      if (choice.disliked) {\n        choice.disliked = false;\n        choice.score++;\n      } else {\n        choice.disliked = true;\n        choice.score--;\n        if (choice.liked) choice.score--;\n      }\n      choice.liked = false;\n      setChoices([\n        ...choices.slice(0, idx),\n        choice,\n        ...choices.slice(idx + 1, choices.length),\n      ]);\n\n      mutation_call(\n        \"dislikeSuggestion\",\n        { accountScreenName: loggedInAs.screenName, choiceID: choice.ID },\n        { ID: 0 },\n        () => {}\n      );\n    }\n  };\n\n  const makeCanon = (choiceID) => {\n    mutation_call(\"makeCanon\", { choiceID: choiceID }, { ID: 0 }, () =>\n      setTimeout(() => window.location.reload(false), 100)\n    );\n  };\n\n  const makeNonCanon = (choiceID) => {\n    mutation_call(\"makeNonCanon\", { choiceID: choiceID }, { ID: 0 }, () =>\n      setTimeout(() => window.location.reload(false), 100)\n    );\n  };\n\n  const removeSuggestion = (choiceID) => {\n    mutation_call(\"removeSuggestion\", { choiceID: choiceID }, {}, () =>\n      window.location.reload(false)\n    );\n  };\n\n  const reportSuggestion = (choiceID) => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Choice\",\n        reportingObjectID: choiceID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported action!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (\n      choices.length !==\n        (canon ? node.canonChoices : node.nonCanonChoices).length ||\n      choices.some(\n        (choice, i) =>\n          choice !== null &&\n          choice.ID !== (canon ? node.canonChoices : node.nonCanonChoices)[i].ID\n      )\n    )\n      setChoices(\n        (canon ? node.canonChoices : node.nonCanonChoices).map(() => null)\n      );\n\n    if (choices.some((choice) => choice === null)) {\n      (canon ? node.canonChoices : node.nonCanonChoices).forEach(\n        (choiceID, i) => {\n          if (choices[i] !== null) return;\n\n          query_call(\n            \"getChoice\",\n            { ID: choiceID.ID },\n            {\n              ID: 0,\n              action: 0,\n              likedBy: { screenName: 0 },\n              dislikedBy: { screenName: 0 },\n              score: 0,\n              suggestedBy: {\n                hidden: 0,\n                screenName: 0,\n                profilePicURL: 0,\n              },\n              hidden: 0,\n              to: {\n                owner: {\n                  screenName: 0,\n                  hidden: 0,\n                },\n                ID: 0,\n                hidden: 0,\n              },\n              from: {\n                ID: 0,\n              },\n            },\n            (choice) => {\n              choice.liked =\n                loggedInAs &&\n                choice.likedBy.some(\n                  (account) => account.screenName === loggedInAs.screenName\n                );\n              choice.disliked =\n                loggedInAs &&\n                choice.dislikedBy.some(\n                  (account) => account.screenName === loggedInAs.screenName\n                );\n              setChoices([\n                ...choices.slice(0, i),\n                choice,\n                ...choices.slice(i + 1, choices.length),\n              ]);\n            }\n          );\n        }\n      );\n    }\n  });\n\n  if (!choices)\n    return (\n      <Alert\n        variant={\n          (loggedInAs && loggedInAs.unsafeMode) ||\n          new Cookies().get(\"unsafeMode\") === \"true\"\n            ? \"dark\"\n            : \"light\"\n        }\n      >\n        <title>Loading Page...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n\n  if (choices.length > 0)\n    return (\n      <CardColumns>\n        {choices.map((choice, idx) => {\n          refs.push(createRef());\n          if (choice === null)\n            return (\n              <Card\n                className=\"mt-2 text-center\"\n                style={{\n                  boxShadow: `0 0 3px ${palette[0]}`,\n                  overflow: \"hidden\",\n                  ...(loggedInAs && loggedInAs.unsafeMode\n                    ? { backgroundColor: palette[4] }\n                    : {}),\n                }}\n                ref={refs[idx]}\n              >\n                <Card.Body style={{ paddingTop: \"2em\" }}>\n                  <Card.Title>Loading...</Card.Title>\n                </Card.Body>\n              </Card>\n            );\n\n          if (\n            (choice.hidden || choice.suggestedBy.hidden) &&\n            (!loggedInAs ||\n              (!loggedInAs.unsafeMode &&\n                loggedInAs.screenName !== choice.suggestedBy.screenName &&\n                (loggedInAs.screenName !== node.owner.screenName || !canon)))\n          )\n            return <span />;\n\n          const disabled =\n            !choice.to ||\n            ((choice.to.hidden || choice.to.owner.hidden) &&\n              (!loggedInAs ||\n                (!loggedInAs.unsafeMode &&\n                  choice.to.owner.screenName !== loggedInAs.screenName)));\n\n          return (\n            <Card\n              className=\"text-center mt-2\"\n              style={{\n                boxShadow: `0 0 3px ${palette[0]}`,\n                overflow: \"hidden\",\n                ...(loggedInAs && loggedInAs.unsafeMode\n                  ? { backgroundColor: palette[4] }\n                  : {}),\n              }}\n              ref={refs[idx]}\n            >\n              <a\n                href={!disabled ? `/crowdventure/#/node/${choice.to.ID}` : \"\"}\n                onClick={() =>\n                  window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n                }\n                style={{\n                  pointerEvents: !disabled ? \"auto\" : \"none\",\n                  color: !disabled\n                    ? loggedInAs && loggedInAs.unsafeMode\n                      ? palette[0]\n                      : palette[2]\n                    : \"grey\",\n                }}\n                onMouseEnter={(e) => {\n                  refs[idx].current.style.boxShadow = `0 0 6px ${palette[2]}`;\n                }}\n                onMouseLeave={(e) => {\n                  refs[idx].current.style.boxShadow = `0 0 3px ${palette[0]}`;\n                }}\n              >\n                <Card.Body style={{ cursor: \"pointer\", paddingTop: \"2em\" }}>\n                  <Card.Title>{choice.action}</Card.Title>\n                </Card.Body>\n              </a>\n              {choice.hidden || choice.suggestedBy.hidden ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This action is hidden, because it has been marked as\n                      unsafe! You can see it because you are{\" \"}\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n              {!choice.hidden &&\n              (choice.to.hidden || choice.to.owner.hidden) &&\n              !disabled ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page this action leads to is hidden, because it has\n                      been marked as unsafe! You will be able to see it because\n                      you are\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n              <DropdownButton\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                style={{\n                  position: \"absolute\",\n                  top: \"0px\",\n                  right: \"0px\",\n                }}\n                size=\"sm\"\n                drop=\"right\"\n                title={<span class=\"fa\">&#xf013;</span>}\n              >\n                <Dropdown.Item\n                  disabled={\n                    !loggedInAs ||\n                    loggedInAs.screenName !== node.owner.screenName\n                  }\n                  onClick={() =>\n                    canon ? makeNonCanon(choice.ID) : makeCanon(choice.ID)\n                  }\n                >\n                  Make {canon ? \"Nonc\" : \"C\"}anon\n                </Dropdown.Item>\n                <Dropdown.Item\n                  disabled={\n                    !loggedInAs ||\n                    (loggedInAs.screenName !== choice.suggestedBy.screenName &&\n                      loggedInAs.screenName !== node.owner.screenName)\n                  }\n                  onClick={() => removeSuggestion(choice.ID)}\n                >\n                  Delete\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() =>\n                    showModal(\n                      <EditChoiceModal\n                        choice={choice}\n                        loggedInAs={loggedInAs}\n                        fromNode={node}\n                        close={() => showModal(undefined)}\n                      />\n                    )\n                  }\n                  disabled={\n                    !(\n                      loggedInAs &&\n                      ((canon &&\n                        loggedInAs.screenName === node.owner.screenName) ||\n                        (!canon &&\n                          loggedInAs.screenName ===\n                            choice.suggestedBy.screenName))\n                    )\n                  }\n                >\n                  Edit\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => reportSuggestion(choice.ID)}>\n                  Report\n                </Dropdown.Item>\n              </DropdownButton>\n              <Card.Footer\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5] } }\n                  : {})}\n              >\n                <a\n                  href={`/crowdventure/#/node/${node.ID}`}\n                  style={{\n                    pointerEvents: loggedInAs ? \"auto\" : \"none\",\n                    color: loggedInAs\n                      ? choice.disliked\n                        ? \"red\"\n                        : loggedInAs.unsafeMode\n                        ? \"white\"\n                        : \"black\"\n                      : \"grey\",\n                  }}\n                  className=\"fa fa-thumbs-down\"\n                  onClick={() => dislike(idx)}\n                ></a>\n                {\" \" + (choice.score || 0) + \" \"}\n                <a\n                  href={`/crowdventure/#/node/${node.ID}`}\n                  style={{\n                    pointerEvents: loggedInAs ? \"auto\" : \"none\",\n                    color: loggedInAs\n                      ? choice.liked\n                        ? \"green\"\n                        : loggedInAs.unsafeMode\n                        ? \"white\"\n                        : \"black\"\n                      : \"grey\",\n                  }}\n                  className=\"fa fa-thumbs-up\"\n                  onClick={() => like(idx)}\n                ></a>\n                <br />\n                <small className=\"text-muted\">\n                  Suggested By:{\" \"}\n                  <a\n                    href={`/crowdventure/#/account/${choice.suggestedBy.screenName}`}\n                    style={{\n                      color:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[0]\n                          : palette[2],\n                    }}\n                  >\n                    <img\n                      src={\n                        choice.suggestedBy.profilePicURL\n                          ? choice.suggestedBy.profilePicURL\n                          : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                      }\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {choice.suggestedBy.screenName}\n                  </a>\n                </small>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n        {showingModal || \"\"}\n      </CardColumns>\n    );\n\n  return null;\n};\n\nexport default ChoiceColumns;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Container,\n  Button,\n  Alert,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\n\nimport PictureModal from \"../Modals/PictureModal\";\nimport EditNodeModal from \"../Modals/EditNodeModal\";\nimport SuggestChoiceModal from \"../Modals/SuggestChoiceModal\";\n\nimport ChoiceColumns from \"./ChoiceColumns\";\n\nimport { escape, palette, query_call, mutation_call } from \"../index\";\n\nconst Node = (props) => {\n  const { history, match, loggedInAs } = props;\n  const [showingModal, showModal] = useState(undefined);\n  const [node, setNode] = useState(undefined);\n\n  const reportNode = () => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Node\",\n        reportingObjectID: node.ID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported page!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  useEffect(() => {\n    const pageID = escape(match.params.id);\n\n    if (!node || pageID !== node.ID) {\n      query_call(\n        \"getNode\",\n        { ID: pageID },\n        {\n          hidden: 0,\n          pictureURL: 0,\n          fgColor: 0,\n          bgColor: 0,\n          ID: 0,\n          title: 0,\n          content: 0,\n          views: 0,\n          owner: { screenName: 0, profilePicURL: 0, hidden: 0 },\n          canonChoices: {\n            ID: 0,\n          },\n          nonCanonChoices: {\n            ID: 0,\n          },\n        },\n        (returnNode) => {\n          if (returnNode) setNode(returnNode);\n          else setNode(null);\n        }\n      );\n    }\n  });\n\n  if (node === undefined) {\n    return (\n      <Alert\n        variant={\n          (loggedInAs && loggedInAs.unsafeMode) ||\n          new Cookies().get(\"unsafeMode\") === \"true\"\n            ? \"dark\"\n            : \"light\"\n        }\n      >\n        <title>Loading Page...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (node === null)\n    return (\n      <Alert variant=\"danger\">\n        <title>Error! Node: {match.params.id}</title>\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  if (\n    node.hidden &&\n    (!loggedInAs ||\n      (node.owner.screenName !== loggedInAs.screenName &&\n        !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>Crowdventure! - {node.title}</title>\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the content has\n          been deemed unsafe. If you would like to see it, log in and turn on{\" \"}\n          <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  if (\n    node.owner.hidden &&\n    (!loggedInAs ||\n      (node.owner.screenName !== loggedInAs.screenName &&\n        !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>Crowdventure! - {node.title}</title>\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the author has\n          been flagged as unsafe for the general public. If you would like to\n          see it, log in and turn on <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>Crowdventure! - {node.title}</title>\n\n      {(node.hidden || node.owner.hidden) &&\n      loggedInAs &&\n      node.owner.screenName === loggedInAs.screenName &&\n      !loggedInAs.unsafeMode ? (\n        <Alert\n          variant=\"danger\"\n          dismissible\n          onClose={() => {\n            setNode({ ...node, hidden: false });\n          }}\n        >\n          <Alert.Heading>Unsafe!</Alert.Heading>\n          <p>\n            This page has been hidden from general users, because the content\n            has been deemed unsafe. Users in unsafe mode can see this page and\n            its content. Since you own this page, you can see it. If you believe\n            this page should be considered safe, click <a href=\"\">Here</a>.\n          </p>\n        </Alert>\n      ) : (\n        \"\"\n      )}\n\n      <h1 class=\"display-4 text-center\">{node.title}</h1>\n      {node.pictureURL ? (\n        <img\n          src={node.pictureURL}\n          onLoad={(e) => {\n            e.target.style.display = \"block\";\n          }}\n          onError={(e) => {\n            e.target.style.display = \"none\";\n          }}\n          style={{\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            padding: \"1px\",\n            border: \"1px solid #eee\",\n            \"border-radius\": \"8px\",\n            width: \"90%\",\n            maxHeight: \"30vh\",\n            \"object-fit\": \"cover\",\n            cursor: \"pointer\",\n          }}\n          onClick={() =>\n            showModal(\n              <PictureModal\n                loggedInAs={loggedInAs}\n                pictureURL={node.pictureURL}\n                title={node.title}\n                close={() => showModal(undefined)}\n              />\n            )\n          }\n        />\n      ) : (\n        \"\"\n      )}\n      <br />\n      <Container>\n        {node.content.split(\"\\n\").map((line) => (\n          <p style={{ textIndent: \"5%\" }}>{line}</p>\n        ))}\n      </Container>\n      <Container\n        className=\"row\"\n        style={{ paddingRight: \"0px\", paddingBottom: \"5px\" }}\n      >\n        <div class=\"col\">\n          <h3>Choices:</h3>\n        </div>\n        <div class=\"col\" style={{ paddingRight: \"0px\" }}>\n          <Button\n            onClick={() => {\n              history.back();\n            }}\n            size=\"lg\"\n            className=\"float-right\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Go back!\n          </Button>\n        </div>\n      </Container>\n      {node.canonChoices.length ? (\n        <ChoiceColumns node={node} loggedInAs={loggedInAs} canon={true} />\n      ) : (\n        <p className=\"text-muted\">\n          By decree of <strong>{node.owner.screenName}</strong>, this journey\n          ends here.\n        </p>\n      )}\n\n      <p />\n\n      <Container className=\"row\" style={{ paddingRight: \"0px\" }}>\n        <div class=\"col align-bottom\">\n          <h3 class=\"align-bottom\">Other options:</h3>\n        </div>\n        <div class=\"col text-right\" style={{ paddingRight: \"0px\" }}>\n          <small class=\"text-muted\">\n            Author:{\" \"}\n            <a\n              href={`/crowdventure/#/account/${node.owner.screenName}`}\n              style={{\n                color:\n                  loggedInAs && loggedInAs.unsafeMode ? palette[0] : palette[2],\n              }}\n            >\n              <img\n                src={\n                  node.owner.profilePicURL\n                    ? node.owner.profilePicURL\n                    : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                }\n                onError={(e) => {\n                  e.target.src =\n                    process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                }}\n                style={{\n                  border: \"1px solid #bbb\",\n                  height: \"2em\",\n                  width: \"2em\",\n                  \"object-fit\": \"cover\",\n                  \"border-radius\": \"50%\",\n                }}\n              />{\" \"}\n              {node.owner.screenName}{\" \"}\n            </a>{\" \"}\n            <br />\n            Views: {node.views}\n          </small>\n          {loggedInAs && node.owner.screenName === loggedInAs.screenName ? (\n            <p>\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={() => {\n                  showModal(\n                    <EditNodeModal\n                      close={() => showModal(undefined)}\n                      node={node}\n                      loggedInAs={loggedInAs}\n                    />\n                  );\n                }}\n              >\n                Edit Page\n              </Button>\n            </p>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Container>\n      <p />\n      <OverlayTrigger\n        overlay={\n          !loggedInAs ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => {\n              showModal(\n                <SuggestChoiceModal\n                  loggedInAs={loggedInAs}\n                  fromNode={node}\n                  close={() => showModal(undefined)}\n                />\n              );\n            }}\n            disabled={!loggedInAs}\n            style={{\n              width: \"100%\",\n              pointerEvents: loggedInAs ? \"auto\" : \"none\",\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Suggest New Choice\n          </Button>\n        </span>\n      </OverlayTrigger>\n      <p />\n\n      {node.nonCanonChoices.length ? (\n        <ChoiceColumns node={node} loggedInAs={loggedInAs} canon={false} />\n      ) : (\n        <p className=\"text-muted\">\n          There are currently no options! You can help expand the story by\n          adding to it!\n        </p>\n      )}\n\n      <Container>\n        <Button\n          style={{ marginRight: \"0\", marginLeft: \"auto\", display: \"block\" }}\n          variant=\"danger\"\n          size=\"sm\"\n          onClick={reportNode}\n        >\n          Report Page\n        </Button>\n      </Container>\n\n      {showingModal ? showingModal : \"\"}\n    </Container>\n  );\n};\n\nexport default Node;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { mutation_call, query_call, escape, palette } from \"../index\";\n\nimport ConfirmModal from \"./ConfirmModal\";\n\nimport Cookies from \"universal-cookie\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst EditAccountModal = (props) => {\n  const {\n    screenName,\n    bio,\n    profilePicture,\n    close,\n    setAccount,\n    setRedirect,\n    loggedInAs,\n  } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [showingModal, showModal] = useState(undefined);\n\n  const [bioField, setBioField] = useState(bio || \"\");\n  const [profilePictureField, setProfilePictureField] = useState(\n    profilePicture || \"\"\n  );\n  const [nameField, setNameField] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n\n  const editPage = (checkedIfExists = false) => {\n    if (pass1 && pass1 !== pass2) {\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n      return;\n    }\n    const esBio = escape(bioField, true);\n    const esPicture = escape(profilePictureField);\n\n    const params = { screenName };\n    if (bioField !== bio) params.bio = `\"\"${esBio}\"\"`;\n    if (profilePictureField !== profilePicture)\n      params.profilePicURL = esPicture;\n    if (nameField !== screenName && !nameField.match(/^\\s*$/)) {\n      if (!checkedIfExists) {\n        const esScreenName = escape(nameField);\n        query_call(\n          \"getAccount\",\n          { screenName: esScreenName },\n          { screenName: 0 },\n          (res) => {\n            if (res) {\n              setInfo(\n                <div style={{ color: \"red\" }}>That account already exists!</div>\n              );\n            } else {\n              editPage(true);\n            }\n          }\n        );\n        return;\n      } else {\n        params.newScreenName = escape(nameField);\n      }\n    }\n    if (pass1) params.newPassword = escape(pass1);\n\n    mutation_call(\n      \"editAccount\",\n      params,\n      {\n        bio: 0,\n        screenName: 0,\n        profilePicURL: 0,\n        totalNodeViews: 0,\n        totalSuggestionScore: 0,\n        hidden: 0,\n        nodes: {\n          owner: { screenName: 0, profilePicURL: 0 },\n          featured: 0,\n          hidden: 0,\n          ID: 0,\n          title: 0,\n          views: 0,\n          pictureURL: 0,\n        },\n      },\n      // I shouldnt need any of the parameters if it just reloads the page\n      (res) => {\n        if (params.newScreenName) {\n          setRedirect(<Redirect to={`/account/${params.newScreenName}`} />);\n          new Cookies().set(\"account\", params.newScreenName, { path: \"/\" });\n          window.location.reload(false);\n        }\n        setAccount(res);\n        setShow(false);\n        close();\n      }\n    );\n  };\n\n  const deleteAccount = () => {\n    new Cookies().set(\"account\", \"\", { path: \"/\" });\n    mutation_call(\"deleteAccount\", { screenName }, {}, () => {\n      setRedirect(<Redirect to=\"/\" />);\n      window.location.reload(false);\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Editing Account</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          {profilePicture ? (\n            <img\n              src={profilePicture}\n              alt={screenName + \"'s Profile Pic\"}\n              onError={(e) => {\n                e.target.style.display = \"none\";\n                setInfo(\n                  <span style={{ color: \"red\" }}>Picture not found!</span>\n                );\n              }}\n              style={{\n                opacity: profilePicture === profilePictureField ? 1 : 0.2,\n                width: \"100%\",\n                \"object-fit\": \"contain\",\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n          <Form.Label>Profile Pic URL:</Form.Label>\n          <Form.Control\n            value={profilePictureField}\n            onChange={(e) => setProfilePictureField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          <Form.Label>Bio:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            value={bioField}\n            onChange={(e) => setBioField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n\n          <Form.Label>Change your screen name:</Form.Label>\n          <Form.Control\n            placeholder={screenName}\n            value={nameField}\n            onChange={(e) => setNameField(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n\n          <Form.Label>Change your password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"••••••••\"\n            value={pass1}\n            onChange={(e) => setPass1(e.target.value)}\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n          />\n          {pass1 ? (\n            <>\n              <Form.Label>Confirm password:</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"••••••••\"\n                value={pass2}\n                onChange={(e) => setPass2(e.target.value)}\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                  : {})}\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            onClick={() => editPage()}\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Edit Account\n          </Button>\n          <Button\n            onClick={() => {\n              showModal(\n                <ConfirmModal\n                  loggedInAs={loggedInAs}\n                  title=\"Delete Account\"\n                  content=\"This will erase all content created by this account, including all pages and suggested choices, and liked and disliked content. Are you sure you wish to continue?\"\n                  onConfirm={() => deleteAccount()}\n                  close={() => {\n                    showModal(undefined);\n                  }}\n                />\n              );\n            }}\n            variant=\"danger\"\n          >\n            Delete Account\n          </Button>\n        </Modal.Footer>\n      </Form>\n      {showingModal || \"\"}\n    </Modal>\n  );\n};\nexport default EditAccountModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { palette } from \"../index\";\n\nconst ConfirmModal = (props) => {\n  const { onConfirm, close, loggedInAs } = props;\n  const [show, setShow] = useState(true);\n\n  const [understand, setUnderstand] = useState(false);\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Turn on Unsafe Mode</Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[4] } }\n          : {})}\n      >\n        Unsafe Mode allows you to see ALL of the content on Crowdventure,\n        including content that has been classified as \"unsafe\". Before you can\n        continue, you must acknowledge and agree to the terms of service:\n        <p />\n        <Form>\n          <Form.Control\n            disabled\n            as=\"textarea\"\n            rows=\"5\"\n            value={`Lorem ipsum dolor sit amet, eos doming dolores offendit cu, malis vituperata ut mea, at homero indoctum duo. Suas solum dicam duo eu, te nulla delenit civibus per, vim vidisse delicata id. Amet velit commune et nam, his in iudico nonumes epicuri. In possim graecis eum, ne case civibus qui.\n\n            Ei decore perpetua cum, error persius reprehendunt ad qui, usu eirmod phaedrum id. Saperet convenire id qui, sea nulla nonumes at. Sed ne vero ludus regione, sit cu commodo dignissim. Te vis ullum aeque democritum, ex temporibus appellantur neglegentur eos. At vix erat discere, nam nobis repudiare posidonium te, aeterno eruditi conceptam qui in. Odio autem adipiscing sit te, errem maiestatis vituperata quo eu.\n            \n            Ius te nihil vocent. His ne vivendo dissentiet, mel ne fierent omittantur vituperatoribus. Sale possit repudiandae vis ut. At qui mundi referrentur. Utamur fabellas neglegentur mel eu, modus doming semper ne duo. Idque legere doming quo no, vis atqui affert ea, sea amet natum an. Labore tibique scribentur no vix, pri in errem utinam.\n            \n            Vocibus ceteros periculis his ei, vel ex epicurei consulatu, cu solum offendit usu. Aeterno suscipit percipit at quo, error viris aperiam ei vim. Quem detracto legendos at est, euripidis philosophia vis ea, ei quaestio torquatos nam. Dicam numquam reformidans vis ex, eam audiam rationibus ut, vel idque quaestio interpretaris ne.\n            \n            Eam augue propriae id, vel eu invenire hendrerit. An ipsum partiendo usu, usu omnis brute ea. Ullum corpora delicata sea in, quo dico meis minim in. Idque delectus quo et, mel alterum praesent an. Vero nobis rationibus sea ea, mei ea dictas euripidis rationibus. Ubique aliquid placerat et mei.`}\n          />\n          <Form.Check\n            style={{ float: \"right\" }}\n            type=\"checkbox\"\n            label=\"I understand\"\n            checked={understand}\n            id=\"check\"\n            onChange={(e) => {\n              setUnderstand(e.target.checked);\n            }}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n      >\n        <Button\n          variant=\"primary\"\n          onClick={onConfirm}\n          disabled={!understand}\n          style={{\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Turn on Unsafe Mode\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useState, createRef } from \"react\";\n\nimport { mutation_call, palette } from \"./index\";\n\nimport {\n  CardColumns,\n  Card,\n  OverlayTrigger,\n  Tooltip,\n  DropdownButton,\n  Dropdown,\n  Alert,\n  Container,\n} from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport ConfirmModal from \"./Modals/ConfirmModal\";\n\nconst NodeViewer = (props) => {\n  const { nodes, loggedInAs } = props;\n\n  const [showingModal, showModal] = useState(undefined);\n  const refs = [];\n\n  const reportNode = (nodeID) => {\n    mutation_call(\n      \"createFeedback\",\n      {\n        ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n        info: \"This is inappropriate\",\n        reportingObjectType: \"Node\",\n        reportingObjectID: nodeID,\n      },\n      { info: 0, reporting: 0 },\n      () => {\n        alert(\"Successfully reported page!\");\n        window.location.reload(false);\n      }\n    );\n  };\n\n  const featurePage = (node, alreadyFeatured) => {\n    mutation_call(\n      \"editNode\",\n      { nodeID: node.ID, featured: !alreadyFeatured },\n      { title: 0 },\n      () => window.location.reload(false)\n    );\n  };\n\n  const deletePage = (node) => {\n    mutation_call(\"deleteNode\", { nodeID: node.ID }, 0, () => {\n      window.location.reload(false);\n    });\n  };\n\n  return nodes ? (\n    <CardColumns style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n      <Container />\n      {nodes\n        .filter(\n          (node) =>\n            (loggedInAs &&\n              (loggedInAs.unsafeMode ||\n                loggedInAs.screenName === node.owner.screenName)) ||\n            !node.hidden\n        )\n        .map((node, i) => {\n          refs.push(createRef());\n          return (\n            <Card\n              className=\"mt-2\"\n              style={{\n                boxShadow: `0 0 3px ${palette[0]}`,\n                overflow: \"hidden\",\n                ...(loggedInAs && loggedInAs.unsafeMode\n                  ? { backgroundColor: palette[4] }\n                  : {}),\n              }}\n              ref={refs[i]}\n            >\n              <a\n                href={`/crowdventure/#/node/${node.ID}`}\n                style={{\n                  color:\n                    loggedInAs && loggedInAs.unsafeMode\n                      ? palette[0]\n                      : palette[2],\n                }}\n                onMouseEnter={(e) => {\n                  refs[i].current.style.boxShadow = `0 0 6px ${palette[2]}`;\n                }}\n                onMouseLeave={(e) => {\n                  refs[i].current.style.boxShadow = `0 0 3px ${palette[0]}`;\n                }}\n              >\n                {node.pictureURL ? (\n                  <Card.Header\n                    style={{\n                      backgroundColor:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[5]\n                          : \"white\",\n                      padding: \"1px\",\n                    }}\n                  >\n                    <Card.Img\n                      src={node.pictureURL}\n                      style={{\n                        \"max-height\": \"30vh\",\n                        \"object-fit\": \"cover\",\n                      }}\n                      onError={(e) => {\n                        e.target.parentNode.style.display = \"none\";\n                      }}\n                    />\n                  </Card.Header>\n                ) : (\n                  \"\"\n                )}\n                <Card.Body\n                  className=\"text-center\"\n                  style={{ paddingTop: \"2em\" }}\n                >\n                  <Card.Title>{node.title}</Card.Title>\n                </Card.Body>\n              </a>\n\n              {node.featured && node && node.owner ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page has been starred by {node.owner.screenName}!\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"5px\",\n                      left: \"5px\",\n                      color: \"yellow\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf005;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n\n              {node.hidden ? (\n                <OverlayTrigger\n                  overlay={\n                    <Tooltip>\n                      This page is hidden, because it has been marked as unsafe!\n                      You can see it because you are{\" \"}\n                      {loggedInAs && loggedInAs.unsafeMode\n                        ? \"in Unsafe Mode.\"\n                        : \"the owner.\"}\n                    </Tooltip>\n                  }\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: (node.featured ? \"2\" : \"\") + \"5px\",\n                      left: \"6.5px\",\n                      color: \"red\",\n                      \"-webkit-touch-callout\": \"none\",\n                      \"-webkit-user-select\": \"none\",\n                      \"-khtml-user-select\": \"none\",\n                      \"-moz-user-select\": \"none\",\n                      \"-ms-user-select\": \"none\",\n                      \"user-select\": \"none\",\n                      \"text-shadow\": \"0 0 1px black\",\n                    }}\n                    class=\"fa\"\n                  >\n                    &#xf056;\n                  </div>\n                </OverlayTrigger>\n              ) : (\n                \"\"\n              )}\n\n              <DropdownButton\n                variant={\n                  loggedInAs && loggedInAs.unsafeMode ? \"secondary\" : \"light\"\n                }\n                style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n                size=\"sm\"\n                drop=\"right\"\n                title={<span class=\"fa\">&#xf013;</span>}\n              >\n                {loggedInAs && node.featured !== undefined ? (\n                  <>\n                    <Dropdown.Item\n                      onClick={() => featurePage(node, node.featured)}\n                      disabled={loggedInAs.screenName !== node.owner.screenName}\n                    >\n                      {node.featured ? \"Un-f\" : \"F\"}eature page\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={() =>\n                        showModal(\n                          <ConfirmModal\n                            loggedInAs={loggedInAs}\n                            close={() => showModal(undefined)}\n                            onConfirm={() => deletePage(node)}\n                            title=\"Delete Page\"\n                            content=\"This will erase all suggested choices of this page, and their associated scores. This will NOT delete sub-pages of this page. Are you sure you wish to continue?\"\n                          />\n                        )\n                      }\n                      disabled={loggedInAs.screenName !== node.owner.screenName}\n                    >\n                      Delete\n                    </Dropdown.Item>\n                    <Dropdown.Item disabled>Make Private</Dropdown.Item>\n                    <Dropdown.Divider />\n                  </>\n                ) : (\n                  \"\"\n                )}\n                <Dropdown.Item onClick={() => reportNode(node.ID)}>\n                  Report\n                </Dropdown.Item>\n              </DropdownButton>\n              <Card.Footer\n                className=\"text-muted text-center\"\n                {...(loggedInAs && loggedInAs.unsafeMode\n                  ? { style: { backgroundColor: palette[5] } }\n                  : {})}\n              >\n                <small>\n                  Author:{\" \"}\n                  <a\n                    href={`/crowdventure/#/account/${node.owner.screenName}`}\n                    style={{\n                      color:\n                        loggedInAs && loggedInAs.unsafeMode\n                          ? palette[0]\n                          : palette[2],\n                    }}\n                  >\n                    <img\n                      src={\n                        node.owner.profilePicURL\n                          ? node.owner.profilePicURL\n                          : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                      }\n                      alt={node.owner.screenName + \" Profile Pic\"}\n                      onError={(e) => {\n                        e.target.src =\n                          process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n                      }}\n                      style={{\n                        border: \"1px solid #bbb\",\n                        height: \"2em\",\n                        width: \"2em\",\n                        \"object-fit\": \"cover\",\n                        \"border-radius\": \"50%\",\n                      }}\n                    />{\" \"}\n                    {node.owner.screenName}\n                  </a>\n                  <br />\n                  Views:{\" \" + node.views}\n                </small>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n      {showingModal || \"\"}\n    </CardColumns>\n  ) : (\n    <Alert\n      variant={\n        (loggedInAs && loggedInAs.unsafeMode) ||\n        new Cookies().get(\"unsafeMode\") === \"true\"\n          ? \"dark\"\n          : \"light\"\n      }\n    >\n      <Alert.Heading>Loading...</Alert.Heading>\n    </Alert>\n  );\n};\n\nexport default NodeViewer;\n","import React, { useState, useEffect } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nimport {\n  Container,\n  Button,\n  Alert,\n  OverlayTrigger,\n  Tooltip,\n  Form,\n} from \"react-bootstrap\";\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\n\nimport { escape, query_call, palette, mutation_call } from \"./index\";\nimport CreateNodeModal from \"./Modals/CreateNodeModal\";\nimport EditAccountModal from \"./Modals/EditAccountModal\";\nimport PictureModal from \"./Modals/PictureModal\";\nimport UnsafeModal from \"./Modals/UnsafeModal\";\n\nimport NodeViewer from \"./NodeViewer\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst Account = (props) => {\n  const { loggedInAs, setLoggedInAs, match } = props;\n\n  const [redirect, setRedirect] = useState(undefined);\n  const [account, setAccount] = useState(undefined);\n  const [showingModal, showModal] = useState(undefined);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchedNodes, setSearchedNodes] = useState([]);\n\n  const reportAccount = () => {\n    if (account)\n      mutation_call(\n        \"createFeedback\",\n        {\n          ...(loggedInAs ? { accountScreenName: loggedInAs.screenName } : {}),\n          info: \"This is inappropriate\",\n          reportingObjectType: \"Account\",\n          reportingObjectID: account.screenName,\n        },\n        { info: 0, reporting: 0 },\n        () => {\n          alert(\"Successfully reported account!\");\n          window.location.reload(false);\n        }\n      );\n  };\n\n  useEffect(() => {\n    const pageID = escape(match.params.id);\n    if (!account || pageID !== account.screenName) {\n      query_call(\n        \"getAccount\",\n        { screenName: pageID },\n        {\n          bio: 0,\n          screenName: 0,\n          profilePicURL: 0,\n          totalNodeViews: 0,\n          totalSuggestionScore: 0,\n          hidden: 0,\n          featuredNodes: {\n            owner: { screenName: 0, profilePicURL: 0 },\n            featured: 0,\n            hidden: 0,\n            ID: 0,\n            title: 0,\n            views: 0,\n            pictureURL: 0,\n          },\n          nodes: {\n            owner: { screenName: 0, profilePicURL: 0 },\n            featured: 0,\n            hidden: 0,\n            ID: 0,\n            title: 0,\n            content: 0,\n            views: 0,\n            pictureURL: 0,\n          },\n        },\n        (res) => {\n          setAccount(res);\n          setSearchQuery(\"\");\n          setSearchedNodes([]);\n        }\n      );\n    }\n  });\n\n  if (account === undefined) {\n    return (\n      <Alert\n        variant={\n          (loggedInAs && loggedInAs.unsafeMode) ||\n          new Cookies().get(\"unsafeMode\") === \"true\"\n            ? \"dark\"\n            : \"light\"\n        }\n      >\n        <title>Loading Account...</title>\n        <Alert.Heading>Loading...</Alert.Heading>\n      </Alert>\n    );\n  }\n\n  if (account === null)\n    return (\n      <Alert variant=\"danger\">\n        <title>Error! Account: {match.params.id}</title>\n        <Alert.Heading>Oh snap! You ran into an error</Alert.Heading>\n        <p>\n          This page does not exist, or maybe our database is down. Who knows?\n          Not you. Hahahaha\n        </p>\n      </Alert>\n    );\n\n  if (\n    account.hidden &&\n    (!loggedInAs ||\n      (account.screenName !== loggedInAs.screenName && !loggedInAs.unsafeMode))\n  )\n    return (\n      <Alert variant=\"danger\">\n        <title>{account.screenName} on Crowdventure!</title>\n        <Alert.Heading>Unsafe!</Alert.Heading>\n        <p>\n          This page has been hidden from general users, because the content has\n          been deemed unsafe. If you would like to see it, log in and turn on{\" \"}\n          <b>Unsafe mode</b>!\n        </p>\n      </Alert>\n    );\n\n  return (\n    <Container>\n      <title>{account.screenName} on Crowdventure!</title>\n      {account.hidden &&\n      loggedInAs &&\n      account.screenName === loggedInAs.screenName &&\n      !loggedInAs.unsafeMode ? (\n        <Alert\n          variant=\"danger\"\n          dismissible\n          onClose={() => {\n            setAccount({ ...node, hidden: false });\n          }}\n        >\n          <Alert.Heading>Unsafe!</Alert.Heading>\n          <p>\n            This page has been hidden from general users, because the content\n            has been deemed unsafe. Users in unsafe mode can see this page and\n            its content. Since you own this page, you can see it. If you believe\n            this page should be considered safe, click <a href=\"\">Here</a>.\n          </p>\n        </Alert>\n      ) : (\n        \"\"\n      )}\n\n      <h1>\n        <img\n          src={\n            account.profilePicURL\n              ? account.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          alt={account.screenName + \" Profile Pic\"}\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            border: \"1px solid #bbb\",\n            height: \"3em\",\n            width: \"3em\",\n            \"object-fit\": \"cover\",\n            \"border-radius\": \"50%\",\n            \"margin-right\": \"5px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            showModal(\n              <PictureModal\n                loggedInAs={loggedInAs}\n                title={account.screenName}\n                pictureURL={\n                  account.profilePicURL\n                    ? account.profilePicURL\n                    : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n                }\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n        />{\" \"}\n        <span className=\"display-4 align-middle\">{account.screenName}</span>\n      </h1>\n\n      {account.bio ||\n      (loggedInAs && loggedInAs.screenName === account.screenName) ? (\n        <Container>\n          {account.bio\n            ? account.bio\n                .split(\"\\n\")\n                .map((line) => <p style={{ textIndent: \"5%\" }}>{line}</p>)\n            : \"\"}\n          {loggedInAs && loggedInAs.screenName === account.screenName ? (\n            <p style={{ textIndent: \"1%\" }} class=\"text-muted\">\n              Unsafe Mode:{\" \"}\n              <BootstrapSwitchButton\n                checked={loggedInAs.unsafeMode}\n                onstyle=\"secondary\"\n                size=\"sm\"\n                onChange={(checked) => {\n                  if (checked) {\n                    showModal(\n                      <UnsafeModal\n                        close={() => showModal(undefined)}\n                        loggedInAs={loggedInAs}\n                        onConfirm={() => {\n                          new Cookies().set(\"unsafeMode\", true, {\n                            path: \"/\",\n                          });\n                          setLoggedInAs({\n                            ...loggedInAs,\n                            unsafeMode: true,\n                          });\n                          showModal(undefined);\n                        }}\n                      />\n                    );\n                  } else {\n                    new Cookies().set(\"unsafeMode\", false, {\n                      path: \"/\",\n                    });\n                    setLoggedInAs({\n                      ...loggedInAs,\n                      unsafeMode: false,\n                    });\n                  }\n                }}\n              />\n              <OverlayTrigger\n                overlay={\n                  <Tooltip id=\"tooltip-unsafe\">\n                    Unsafe mode allows you to see all content on Crowdventure,\n                    including content that has been flagged as unsafe for the\n                    general public!\n                  </Tooltip>\n                }\n              >\n                <Button\n                  style={{\n                    backgroundColor: \"#00000000\",\n                    borderColor: \"#00000000\",\n                    borderRadius: \"50%\",\n                    color: loggedInAs.unsafeMode ? \"white\" : \"black\",\n                  }}\n                  size=\"xs\"\n                >\n                  <span className=\"fa fa-info-circle\" />\n                </Button>\n              </OverlayTrigger>\n            </p>\n          ) : (\n            \"\"\n          )}\n        </Container>\n      ) : (\n        \"\"\n      )}\n\n      <Container>\n        {loggedInAs && loggedInAs.screenName === account.screenName ? (\n          <span>\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                showModal(\n                  <EditAccountModal\n                    loggedInAs={loggedInAs}\n                    screenName={account.screenName}\n                    bio={account.bio}\n                    profilePicture={account.profilePicURL}\n                    setAccount={setAccount}\n                    setRedirect={setRedirect}\n                    close={() => showModal(undefined)}\n                  />\n                );\n              }}\n              size=\"sm\"\n            >\n              Edit Account\n            </Button>{\" \"}\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                new Cookies().set(\"account\", \"\", { path: \"/\" });\n                new Cookies().set(\"unsafeMode\", \"false\", { path: \"/\" });\n                window.location.reload(false);\n              }}\n              variant=\"secondary\"\n            >\n              Log out\n            </Button>{\" \"}\n          </span>\n        ) : (\n          \"\"\n        )}\n        <div style={{ float: \"right\" }} class=\"text-muted\">\n          Total views: {account.totalNodeViews} Total score:{\" \"}\n          {account.totalSuggestionScore}\n        </div>\n      </Container>\n      <br />\n\n      {loggedInAs && loggedInAs.screenName === account.screenName ? (\n        <Button\n          onClick={() => {\n            showModal(\n              <CreateNodeModal\n                close={() => showModal(undefined)}\n                loggedInAs={loggedInAs}\n                featured={true}\n                callback={(res) =>\n                  setRedirect(<Redirect to={`/node/${res.ID}`} />)\n                }\n              />\n            );\n          }}\n          style={{\n            width: \"100%\",\n            border: `1px solid ${palette[2]}`,\n            backgroundColor: palette[0],\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n        >\n          Create a New Adventure!\n        </Button>\n      ) : (\n        \"\"\n      )}\n\n      <p />\n\n      <h3>Featured Pages:</h3>\n      <NodeViewer nodes={account.featuredNodes} loggedInAs={loggedInAs} />\n      <h3>Search All Pages Authored by {account.screenName}:</h3>\n      <Form>\n        <Form.Control\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5], color: \"white\" } }\n            : {})}\n          value={searchQuery}\n          placeholder={\"Search for a page...\"}\n          onChange={(e) => {\n            setSearchQuery(e.target.value);\n            if (e.target.value.length >= 2) {\n              setSearchedNodes([\n                ...account.nodes.filter((node) =>\n                  node.title\n                    .toLowerCase()\n                    .includes(e.target.value.toLowerCase())\n                ),\n                ...account.nodes.filter(\n                  (node) =>\n                    !node.title\n                      .toLowerCase()\n                      .includes(e.target.value.toLowerCase()) &&\n                    node.content\n                      .toLowerCase()\n                      .includes(e.target.value.toLowerCase())\n                ),\n              ]);\n            } else {\n              setSearchedNodes([]);\n            }\n          }}\n        />\n      </Form>\n      {searchQuery ? (\n        <NodeViewer nodes={searchedNodes} loggedInAs={loggedInAs} />\n      ) : (\n        \"\"\n      )}\n\n      <Container>\n        <Button\n          style={{ marginRight: \"0\", marginLeft: \"auto\", display: \"block\" }}\n          variant=\"danger\"\n          size=\"sm\"\n          onClick={reportAccount}\n        >\n          Report Account\n        </Button>\n      </Container>\n\n      {showingModal || \"\"}\n      {redirect || \"\"}\n    </Container>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nimport NodeViewer from \"./NodeViewer\";\n\nimport { query_call, palette } from \"./index\";\nimport { Redirect } from \"react-router-dom\";\nimport CreateNodeModal from \"./Modals/CreateNodeModal\";\n\nconst Home = (props) => {\n  const { loggedInAs } = props;\n\n  const [topNodes, setTopNodes] = useState(undefined);\n  const [showingModal, showModal] = useState(undefined);\n  const [redirect, setRedirect] = useState(undefined);\n\n  useEffect(() => {\n    query_call(\n      \"featuredNodes\",\n      {},\n      {\n        hidden: 0,\n        ID: 0,\n        title: 0,\n        owner: { screenName: 0, profilePicURL: 0 },\n        views: 0,\n        size: 0,\n        pictureURL: 0,\n      },\n      (res) => setTopNodes(res)\n    );\n  }, []);\n\n  return (\n    <Container>\n      <title>Crowdventure!</title>\n      <h1 className=\"display-4 text-center\">Welcome!</h1>\n      <Container className=\"text-center\">\n        Crowdventure is a Crowd-Sourced\n        Choose-and-Create-Your-Own-Adventure-Game!\n      </Container>\n      <p />\n\n      <OverlayTrigger\n        overlay={\n          !loggedInAs ? (\n            <Tooltip id=\"tooltip-disabled\">You must be signed in!</Tooltip>\n          ) : (\n            <p />\n          )\n        }\n        style={{ width: \"100%\" }}\n      >\n        <span className=\"d-inline-block\" style={{ width: \"100%\" }}>\n          <Button\n            onClick={() => {\n              showModal(\n                <CreateNodeModal\n                  featured={true}\n                  loggedInAs={loggedInAs}\n                  close={() => showModal(undefined)}\n                  callback={(res) =>\n                    setRedirect(<Redirect to={`/node/${res.ID}`} />)\n                  }\n                />\n              );\n            }}\n            disabled={!loggedInAs}\n            style={{\n              width: \"100%\",\n              pointerEvents: loggedInAs ? \"auto\" : \"none\",\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n          >\n            Create a New Adventure!\n          </Button>\n        </span>\n      </OverlayTrigger>\n      <p />\n\n      <h3>Featured Pages:</h3>\n      <NodeViewer nodes={topNodes} loggedInAs={loggedInAs} />\n      {showingModal || \"\"}\n      {redirect || \"\"}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\n\nimport { mutation_call, palette, escape } from \"../index\";\n\nimport Cookies from \"universal-cookie\";\n\nconst LoginModal = (props) => {\n  const { loggedInAs, setLoggedInAs, close } = props;\n\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(password);\n\n    mutation_call(\n      \"loginAccount\",\n      { screenName: esScreenName, password: esPass },\n      { screenName: 0, profilePicURL: 0 },\n      (res) => {\n        if (res) {\n          new Cookies().set(\"account\", screenName, { path: \"/\" });\n          setLoggedInAs(res);\n          setShow(false);\n          close();\n        } else {\n          setInfo(\n            <div style={{ color: \"red\" }}>\n              That account does not exist or the password did not match!\n            </div>\n          );\n        }\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Log in</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Label>Screen Name:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            value={screenName}\n            onChange={(e) => setScreenName(e.target.value)}\n          />\n          <Form.Label>Password:</Form.Label>\n          <Form.Control\n            {...(loggedInAs && loggedInAs.unsafeMode\n              ? { style: { backgroundColor: palette[5], color: \"white\" } }\n              : {})}\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            variant=\"primary\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n            onClick={() =>\n              screenName\n                ? password\n                  ? login()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Please enter your screenName!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Please enter your password!\n                    </span>\n                  )\n            }\n          >\n            Log in\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default LoginModal;\n","import React, { useState } from \"react\";\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nimport { query_call, mutation_call, palette } from \"../index\";\n\nimport Cookies from \"universal-cookie\";\n\nconst SignUpModal = (props) => {\n  const { loggedInAs, setLoggedInAs, close } = props;\n  const [show, setShow] = useState(true);\n  const [info, setInfo] = useState(\"\");\n\n  const [screenName, setScreenName] = useState(\"\");\n  const [pass1, setPass1] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n\n  const handleSubmitSignUp = () => {\n    if (pass1 !== pass2)\n      setInfo(<div style={{ color: \"red\" }}>Passwords must match!</div>);\n    else {\n      const esScreenName = escape(screenName);\n      query_call(\n        \"getAccount\",\n        { screenName: esScreenName },\n        { screenName: 0 },\n        (res) => {\n          if (res) {\n            setInfo(\n              <div style={{ color: \"red\" }}>That account already exists!</div>\n            );\n          } else {\n            createAccount();\n          }\n        }\n      );\n    }\n  };\n\n  const createAccount = () => {\n    const esScreenName = escape(screenName);\n    const esPass = escape(pass1);\n    mutation_call(\n      \"createAccount\",\n      { screenName: esScreenName, password: esPass },\n      { screenName: 0, profilePicURL: 0 },\n      (res) => {\n        if (res) {\n          new Cookies().set(\"account\", screenName, { path: \"/\" });\n          setLoggedInAs(res);\n          setShow(false);\n          close();\n        }\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        close();\n      }}\n    >\n      <Modal.Header\n        {...(loggedInAs && loggedInAs.unsafeMode\n          ? { style: { backgroundColor: palette[5] } }\n          : {})}\n        closeButton\n      >\n        <Modal.Title>Sign Up for Crowdventure!</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[4] } }\n            : {})}\n        >\n          <Form.Group>\n            <Form.Label>Screen Name:</Form.Label>\n            <Form.Control\n              value={screenName}\n              onChange={(e) => setScreenName(e.target.value)}\n            />\n            <Form.Label>Create Password:</Form.Label>\n            <Form.Control\n              {...(loggedInAs && loggedInAs.unsafeMode\n                ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                : {})}\n              type=\"password\"\n              value={pass1}\n              onChange={(e) => setPass1(e.target.value)}\n            />\n            <Form.Label>Confirm Password:</Form.Label>\n            <Form.Control\n              {...(loggedInAs && loggedInAs.unsafeMode\n                ? { style: { backgroundColor: palette[5], color: \"white\" } }\n                : {})}\n              type=\"password\"\n              value={pass2}\n              onChange={(e) => setPass2(e.target.value)}\n            />\n          </Form.Group>\n          {info ? info : \"\"}\n        </Modal.Body>\n        <Modal.Footer\n          {...(loggedInAs && loggedInAs.unsafeMode\n            ? { style: { backgroundColor: palette[5] } }\n            : {})}\n        >\n          <Button\n            variant=\"primary\"\n            style={{\n              border: `1px solid ${palette[2]}`,\n              backgroundColor: palette[0],\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = palette[2])}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = palette[0])}\n            onClick={() =>\n              screenName\n                ? pass1\n                  ? handleSubmitSignUp()\n                  : setInfo(\n                      <span style={{ color: \"red\" }}>\n                        Please enter a screen name!\n                      </span>\n                    )\n                : setInfo(\n                    <span style={{ color: \"red\" }}>\n                      Please enter a password!\n                    </span>\n                  )\n            }\n          >\n            Sign Up\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default SignUpModal;\n","import React, { useState } from \"react\";\nimport { Navbar, Button } from \"react-bootstrap\";\n\nimport LoginModal from \"./Modals/LoginModal\";\nimport SignUpModal from \"./Modals/SignUpModal\";\n\nconst AccountManager = (props) => {\n  const { loggedInAs, setLoggedInAs } = props;\n  const [showingModal, showModal] = useState(undefined);\n\n  if (loggedInAs === undefined || loggedInAs === null) {\n    return (\n      <Navbar.Text>\n        You are not logged in.{\" \"}\n        <Button\n          variant=\"light\"\n          onClick={() => {\n            showModal(\n              <LoginModal\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n          size=\"sm\"\n        >\n          Log In\n        </Button>{\" \"}\n        or{\" \"}\n        <Button\n          variant=\"light\"\n          onClick={() => {\n            showModal(\n              <SignUpModal\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n                close={() => showModal(undefined)}\n              />\n            );\n          }}\n          size=\"sm\"\n        >\n          Sign Up\n        </Button>\n        {showingModal || \"\"}\n      </Navbar.Text>\n    );\n  }\n\n  return (\n    <Navbar.Text\n      style={{ color: loggedInAs && loggedInAs.unsafeMode ? \"grey\" : \"\" }}\n    >\n      You are logged in as:{\" \"}\n      <a\n        href={`/crowdventure/#/account/${loggedInAs.screenName}`}\n        style={{ color: loggedInAs && loggedInAs.unsafeMode ? \"white\" : \"\" }}\n      >\n        <img\n          src={\n            loggedInAs.profilePicURL\n              ? loggedInAs.profilePicURL\n              : process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\"\n          }\n          onError={(e) => {\n            e.target.src = process.env.PUBLIC_URL + \"/defaultProfilePic.jpg\";\n          }}\n          style={{\n            border: \"1px solid #bbb\",\n            height: \"2em\",\n            width: \"2em\",\n            \"object-fit\": \"cover\",\n            \"border-radius\": \"50%\",\n          }}\n        />{\" \"}\n        {loggedInAs.screenName}\n      </a>\n    </Navbar.Text>\n  );\n};\n\nexport default AccountManager;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Node from \"./Node/Node\";\nimport Account from \"./Account\";\nimport Home from \"./Home\";\nimport AccountManager from \"./AccountManager\";\n\nimport { Navbar, Container } from \"react-bootstrap\";\n\nimport Cookies from \"universal-cookie\";\nimport history from \"history/browser\";\n\nimport { mutation_call, palette } from \"./index\";\nconst packageJson = require(\"../package.json\");\n\nconst App = () => {\n  const [loggedInAs, setLoggedInAs] = useState(undefined);\n\n  useEffect(() => {\n    if (loggedInAs === undefined) {\n      const cookies = new Cookies();\n      const savedAccount = escape(cookies.get(\"account\"));\n\n      if (!savedAccount || savedAccount === \"\")\n        cookies.set(\"unsafeMode\", \"false\", { path: \"/\" });\n\n      mutation_call(\n        \"loginAccount\",\n        { screenName: savedAccount },\n        { screenName: 0, profilePicURL: 0 },\n        (res) => {\n          if (res) {\n            res.unsafeMode = cookies.get(\"unsafeMode\") === \"true\";\n            setLoggedInAs(res);\n          } else {\n            cookies.set(\"account\", \"\", { path: \"/\" });\n            cookies.set(\"unsafeMode\", \"false\", { path: \"/\" });\n          }\n        }\n      );\n    }\n\n    if (\n      new Cookies().get(\"unsafeMode\") === \"true\" ||\n      (loggedInAs && loggedInAs.unsafeMode)\n    ) {\n      document.getElementById(\"root\").style.backgroundImage = `linear-gradient(\n      to right,\n      rgb(158, 232, 255),\n      ${palette[3]} 10%,\n      ${palette[3]} 90%,\n      rgb(158, 232, 255)\n    )`;\n      document.getElementById(\"root\").style.color = \"rgb(225, 240, 255)\";\n    } else {\n      document.getElementById(\"root\").style.backgroundImage = `linear-gradient(\n        to right,\n        rgb(158, 232, 255),\n        white 10%,\n        white 90%,\n        rgb(158, 232, 255)\n      )`;\n      document.getElementById(\"root\").style.color = \"\";\n    }\n  });\n\n  return (\n    <Container>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/crowdventure\">\n          <img\n            href=\"/crowdventure\"\n            src={process.env.PUBLIC_URL + \"/logo.png\"}\n            alt=\"Crowdventure Logo\"\n            style={{ width: \"100%\" }}\n          />\n        </Navbar.Brand>\n        <a href=\"https://github.com/benjaminjkern/crowdventure/blob/master/CHANGELOG.md\">\n          <small class=\"text-muted\">Version: {packageJson.version}</small>\n        </a>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"bg-light\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n          <AccountManager\n            loggedInAs={loggedInAs}\n            setLoggedInAs={setLoggedInAs}\n          />\n        </Navbar.Collapse>\n      </Navbar>\n      <HashRouter>\n        <Switch>\n          <Route\n            path=\"/\"\n            render={(props) => <Home {...props} loggedInAs={loggedInAs} />}\n            exact\n          />\n          <Route\n            path=\"/node/:id\"\n            render={(props) => (\n              <Node {...props} loggedInAs={loggedInAs} history={history} />\n            )}\n          />\n          <Route\n            path=\"/account/:id\"\n            render={(props) => (\n              <Account\n                {...props}\n                loggedInAs={loggedInAs}\n                setLoggedInAs={setLoggedInAs}\n              />\n            )}\n          />\n        </Switch>\n      </HashRouter>\n      <Navbar className=\"text-right\">\n        <small class=\"text-muted\">@ 2020 Copyright: (MIT) Benjamin Kern</small>\n      </Navbar>\n      <title>Crowdventure! - Page not found!</title>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nconst { createApolloFetch } = require(\"apollo-fetch\");\n\nconst app_fetch = createApolloFetch({\n  uri: require(\"./apolloURL.js\").backendURL,\n});\n\nconst query_call = (query, parameters, attributes, callback) => {\n  app_fetch({\n    query: `query{${query}${formatParameters(parameters)}${formatAttributes(\n      attributes\n    )}}`,\n  }).then((res, err) => {\n    if (err) alert(err);\n    if (res.data) callback(res.data[query]);\n    else alert(\"Something went wrong when calling query\");\n  });\n};\n\nconst mutation_call = (query, parameters, attributes, callback) => {\n  app_fetch({\n    query: `mutation{${query}${formatParameters(parameters)}${formatAttributes(\n      attributes\n    )}}`,\n  }).then((res, err) => {\n    if (err) alert(err);\n    if (res.data) callback(res.data[query]);\n    else alert(\"Something went wrong when calling mutation\");\n  });\n};\n\nconst formatParameters = (parameters) =>\n  Object.keys(parameters).length > 0\n    ? `(${Object.keys(parameters)\n        .map(\n          (param) =>\n            `${param}:${typeof parameters[param] === \"string\" ? '\"' : \"\"}${\n              parameters[param]\n            }${typeof parameters[param] === \"string\" ? '\"' : \"\"}`\n        )\n        .join(\",\")})`\n    : \"\";\n\nconst formatAttributes = (attributes) =>\n  Object.keys(attributes).length > 0\n    ? `{${Object.keys(attributes)\n        .map((attribute) => attribute + formatAttributes(attributes[attribute]))\n        .join(\",\")}}`\n    : \"\";\n\nconst escape = (text, newlines = false) =>\n  text\n    ? newlines\n      ? text.replace(/\"$/, ' \" ').replace(/^\"/, ' \" ').replace(/\"\"\"/g, ` \"\" \" `)\n      : text.replace(/\\n/g, \"\").replace(/\\\\/g, `\\\\\\\\`).replace(/\"/g, `\\\\\"`)\n    : text;\n\nconst palette = [\n  \"rgb(100, 180, 244)\", // original\n  \"rgb(158, 232, 255)\", // light\n  \"rgb(80, 160, 224)\", //dark\n  \"rgb(34,34,34)\", // darker grey\n  \"rgb(41,41,41)\", // original grey\n  \"rgb(50,50,50)\",\n];\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport { app_fetch, escape, palette, query_call, mutation_call };\n","const backendURL =\n    \"https://3yfp7ejc0m.execute-api.us-east-1.amazonaws.com/dev/graphql\";\n\nconst BING_API_KEY = \"8300cebe5f0d452a9ccb4bca67af4659\";\n\nmodule.exports = { backendURL, BING_API_KEY };"],"sourceRoot":""}